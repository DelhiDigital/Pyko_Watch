{"version":3,"sources":["../../src/analytics-manager/AnalyticsProvider.tsx","../../src/analytics-manager/AnalyticsView.tsx","../../src/analytics-manager/ShopifyAnalytics.tsx","../../src/analytics-manager/events.ts","../../src/customer-privacy/ShopifyCustomerPrivacy.tsx","../../package.json","../../src/analytics-manager/CartAnalytics.tsx","../../src/analytics-manager/PerfKit.tsx","../../src/utils/warning.ts","../../src/utils/request.ts","../../src/utils/callsites.ts","../../src/cache/strategies.ts","../../src/utils/parse-json.ts","../../src/cache/api.ts","../../src/cache/sub-request.ts","../../src/utils/hash.ts","../../src/cache/run-with-cache.ts","../../src/cache/server-fetch.ts","../../src/cache/create-with-cache.ts","../../src/cache/in-memory.ts","../../src/cart/CartForm.tsx","../../src/cart/cartGetIdDefault.ts","../../src/cart/cartSetIdDefault.ts","../../src/storefront.ts","../../src/constants.ts","../../src/utils/uuid.ts","../../src/version.ts","../../src/utils/graphql.ts","../../src/cart/queries/cartGetDefault.ts","../../src/cart/queries/cart-fragments.ts","../../src/cart/queries/cartCreateDefault.ts","../../src/cart/queries/cartLinesAddDefault.ts","../../src/cart/optimistic/optimistic-cart.helper.ts","../../src/cart/queries/cartLinesUpdateDefault.ts","../../src/cart/queries/cartLinesRemoveDefault.ts","../../src/cart/queries/cartDiscountCodesUpdateDefault.ts","../../src/cart/queries/cartBuyerIdentityUpdateDefault.ts","../../src/cart/queries/cartNoteUpdateDefault.ts","../../src/cart/queries/cartSelectedDeliveryOptionsUpdateDefault.ts","../../src/cart/queries/cartAttributesUpdateDefault.ts","../../src/cart/queries/cartMetafieldsSetDefault.ts","../../src/cart/queries/cartMetafieldDeleteDefault.ts","../../src/cart/queries/cartGiftCardCodeUpdateDefault.ts","../../src/cart/createCartHandler.ts","../../src/cart/optimistic/useOptimisticCart.tsx","../../src/changelogHandler.ts","../../src/customer/constants.ts","../../src/customer/BadRequest.ts","../../src/customer/auth.helpers.ts","../../src/csp/nonce.ts","../../src/utils/get-redirect-url.ts","../../src/customer/customer-account-helper.ts","../../src/customer/customer.ts","../../src/createHydrogenContext.ts","../../src/csp/csp.ts","../../src/csp/Script.tsx","../../src/optimistic-ui/optimistic-ui.tsx","../../src/pagination/Pagination.ts","../../src/product/useOptimisticVariant.ts","../../src/product/VariantSelector.ts","../../src/RichText.tsx","../../src/routing/graphiql.ts","../../src/routing/redirect.ts","../../src/seo/escape.ts","../../src/seo/generate-seo-tags.ts","../../src/seo/getSeoMeta.ts","../../src/seo/seo.ts","../../src/shop/ShopPayButton.tsx","../../src/sitemap/sitemap.ts","../../src/index.ts"],"names":["useEffect","useState","useMemo","createContext","useContext","useRef","useLocation","jsx","AnalyticsView","props","type","data","customData","location","publish","cart","prevCart","shop","analyticProviderCustomData","useAnalytics","url","viewPayload","AnalyticsPageView","AnalyticsProductView","AnalyticsCollectionView","AnalyticsCartView","AnalyticsSearchView","AnalyticsCustomView","AnalyticsEventName","getClientBrowserParameters","sendShopifyAnalytics","useShopifyCookies","AnalyticsPageType","AnalyticsEvent","useLoadScript","CONSENT_API","CONSENT_API_WITH_BANNER","logMissingConfig","fieldName","useCustomerPrivacy","withPrivacyBanner","onVisitorConsentCollected","onReady","consentConfig","observing","setLoaded","useApisLoaded","config","checkoutDomain","storefrontAccessToken","parseStoreDomain","consentCollectedHandler","event","customPrivacyBanner","value","privacyBanner","overridePrivacyBannerMethods","emitCustomerPrivacyApiLoaded","customCustomerPrivacy","customShopify","customerPrivacy","overrideCustomerPrivacySetTrackingConsent","result","getCustomerPrivacy","getPrivacyBanner","hasEmitted","onLoaded","apisLoaded","setApisLoaded","loaded","prev","host","checkoutDomainParts","currentDomainParts","sameDomainParts","part","index","original","locale","country","rest","updatedSetTrackingConsent","consent","callback","originalLoadBanner","originalShowPreferences","loadBanner","userConfig","showPreferences","version","getCustomerPrivacyRequired","ShopifyAnalytics","domain","subscribe","register","canTrack","shopifyReady","setShopifyReady","privacyReady","setPrivacyReady","init","language","shopifyAnalyticsReady","pageViewHandler","productViewHandler","collectionViewHandler","searchViewHandler","productAddedToCartHandler","prepareBasePageViewPayload","payload","hasUserConsent","prepareBaseCartPayload","pageViewPayload","eventPayload","validateProducts","formattedProducts","formatProduct","currentLine","sendCartAnalytics","matchedLine","product","missingErrorMessage","isVariantField","viewKeyName","name","products","formattedProduct","flattenConnection","logMissingField","CartAnalytics","currentCart","setCarts","lastEventId","updatedCart","cartLastUpdatedAt","previousCartLines","currentCartLines","prevLine","matchedLineId","line","previousLine","parseGid","PERF_KIT_URL","PerfKit","loadedEvent","ready","scriptStatus","warnings","warnOnce","string","errors","errorOnce","jsxs","defaultAnalyticsContext","AnalyticsContext","subscribers","registers","areRegistersReady","waitForReadyQueue","publishEvent","subscriber","error","key","queuePayload","queueEvent","shopifyCanTrack","messageOnError","field","envVar","AnalyticsProvider","customCanTrack","children","shopProp","cookieDomain","listenerSet","useShopAnalytics","analyticsLoaded","setAnalyticsLoaded","carts","setCanTrack","errorMsg","analyticsContext","setShop","getShopAnalytics","storefront","publicStorefrontId","SHOP_QUERY","localization","Analytics","getHeader","request","getHeaderValue","headers","getDebugHeaders","withSyncStack","promise","options","syncError","getSyncStack","message","syncStack","all","m1","logErrors","getCallerStackLine","PUBLIC","PRIVATE","NO_STORE","optionMapping","generateCacheControlHeader","cacheOptions","cacheControl","CacheNone","guardExpirableModeType","overrideOptions","CacheShort","CacheLong","CacheDefault","CacheCustom","parseJSON","json","noproto","k","v","getCacheControlSetting","userCacheOptions","generateDefaultCacheControlHeader","getItem","cache","response","setItem","paddedCacheControlString","cacheControlString","deleteItem","calculateAge","responseDate","responseMaxAge","maxAgeMatch","isStale","age","CacheAPI","getKeyUrl","getCacheOption","getItemFromCache","text","setItemInCache","hashKey","queryKey","rawKeys","hash","swrLock","runWithCache","cacheKey","actionFn","strategy","cacheInstance","shouldCacheResult","waitUntil","debugInfo","startTime","cachedDebugInfo","userDebugInfo","addDebugData","info","mergeDebugInfo","logSubRequestEvent","storeInCache","cachedItem","cachedResult","cacheInfo","cacheStatus","revalidatingPromise","revalidateStartTime","cacheStoringPromise","putStartTime","toSerializableResponse","body","fromSerializableResponse","fetchWithServerCache","requestInit","shouldCacheResponse","createWithCache","cacheStrategy","fn","InMemoryCache","#store","requests","match","timestamp","metadata","maxAge","swr","cacheKeys","useFetcher","INPUT_NAME","CartForm","action","inputs","route","fetcherKey","fetcher","getFormInput","formData","pair","values","cartFormInput","otherData","parse","cartGetIdDefault","requestHeaders","cookies","stringify","cartSetIdDefault","cookieOptions","cartId","createStorefrontUtilities","getShopifyCookies","SHOPIFY_S","SHOPIFY_Y","SHOPIFY_STOREFRONT_ID_HEADER","SHOPIFY_STOREFRONT_Y_HEADER","SHOPIFY_STOREFRONT_S_HEADER","STOREFRONT_REQUEST_GROUP_ID_HEADER","STOREFRONT_ACCESS_TOKEN_HEADER","SDK_VARIANT_HEADER","SDK_VARIANT_SOURCE_HEADER","SDK_VERSION_HEADER","generateUUID","LIB_VERSION","minifyQuery","IS_QUERY_RE","IS_MUTATION_RE","assertQuery","query","callerName","assertMutation","GraphQLError","enhancedMessage","throwErrorWithGqlLink","queryVariables","ErrorConstructor","client","errorMessage","gqlError","defaultI18n","createStorefrontClient","storefrontHeaders","i18n","storefrontId","clientOptions","H2_PREFIX_WARN","getPublicTokenHeaders","getPrivateTokenHeaders","getStorefrontApiUrl","getShopifyDomain","defaultHeaders","cacheKeyHeader","fetchStorefrontApi","mutation","variables","storefrontApiVersion","displayName","stackInfo","userHeaders","document","graphqlData","errorOptions","bodyText","gqlErrors","formatAPIResult","stackOffset","getStackOffset","cartGetDefault","customerAccount","getCartId","cartFragment","cartInput","isCustomerLoggedIn","CART_QUERY","finalCheckoutUrl","DEFAULT_CART_FRAGMENT","USER_ERROR_FRAGMENT","MINIMAL_CART_FRAGMENT","CART_WARNING_FRAGMENT","cartCreateDefault","input","optionalParams","buyer","restOfOptionalParams","buyerIdentity","restOfInput","cartCreate","CART_CREATE_MUTATION","cartLinesAddDefault","lines","cartLinesAdd","CART_LINES_ADD_MUTATION","PENDING_PREFIX","getOptimisticLineId","variantId","isOptimisticLineId","lineId","throwIfLinesAreOptimistic","cartLinesUpdateDefault","cartLinesUpdate","CART_LINES_UPDATE_MUTATION","cartLinesRemoveDefault","lineIds","cartLinesRemove","CART_LINES_REMOVE_MUTATION","cartDiscountCodesUpdateDefault","discountCodes","uniqueCodes","array","cartDiscountCodesUpdate","CART_DISCOUNT_CODE_UPDATE_MUTATION","cartBuyerIdentityUpdateDefault","cartBuyerIdentityUpdate","CART_BUYER_IDENTITY_UPDATE_MUTATION","cartNoteUpdateDefault","note","cartNoteUpdate","CART_NOTE_UPDATE_MUTATION","cartSelectedDeliveryOptionsUpdateDefault","selectedDeliveryOptions","cartSelectedDeliveryOptionsUpdate","CART_SELECTED_DELIVERY_OPTIONS_UPDATE_MUTATION","cartAttributesUpdateDefault","attributes","cartAttributesUpdate","CART_ATTRIBUTES_UPDATE_MUTATION","cartMetafieldsSetDefault","metafields","ownerId","metafieldsWithOwnerId","metafield","cartMetafieldsSet","CART_METAFIELD_SET_MUTATION","cartMetafieldDeleteDefault","cartMetafieldDelete","CART_METAFIELD_DELETE_MUTATION","cartGiftCardCodesUpdateDefault","giftCardCodes","cartGiftCardCodesUpdate","CART_GIFT_CARD_CODE_UPDATE_MUTATION","createCartHandler","_getCartId","setCartId","cartQueryFragment","cartMutateFragment","mutateOptions","_cartCreate","args","methods","linesWithOptimisticData","useFetchers","useOptimisticCart","fetchers","optimisticCart","cartLines","isOptimistic","cartFormData","existingLine","optimisticLine","sum","DEFAULT_GITHUB_CHANGELOG_URL","changelogHandler","changelogUrl","searchParams","DEFAULT_CUSTOMER_API_VERSION","USER_AGENT","CUSTOMER_API_CLIENT_ID","CUSTOMER_ACCOUNT_SESSION_KEY","BUYER_SESSION_KEY","BadRequest","helpMessage","redirect","path","refreshToken","session","customerAccountId","customerAccountTokenExchangeUrl","httpsOrigin","newBody","idToken","access_token","expires_in","refresh_token","accessToken","exchangeAccessToken","clearSession","checkExpires","locks","expiresAt","generateCodeVerifier","rando","generateRandomCode","base64UrlEncode","generateCodeChallenge","codeVerifier","digestOp","convertBufferToString","str","uintArray","numberArray","generateState","randomString","authAccessToken","clientId","getNonce","token","decodeJwt","header","signature","decodedHeader","decodedPayload","generateNonce","toHexString","randomUint8Array","byteArray","byte","getRedirectUrl","requestUrl","pathname","search","redirectFrom","redirectTo","isLocalPath","redirectUrl","ensureLocalRedirectUrl","defaultUrl","fromUrl","defautlUrl","buildURLObject","toUrl","relativeOrAbsoluteUrl","isAbsoluteUrl","createCustomerAccountHelper","customerApiVersion","shopId","customerAccountUrl","customerAccountAuthUrl","urlType","defaultAuthStatusHandler","defaultLoginUrl","cleanedPathname","createCustomerAccountClient","authUrl","customAuthStatusHandler","loginPath","authorizePath","defaultRedirectPath","authStatusHandler","redirectUri","getCustomerAccountUrl","ifInvalidCredentialThrowError","createIfInvalidCredentialThrowError","customerAccountApiUrl","fetchCustomerAPI","getAccessToken","APIresponse","isLoggedIn","handleAuthStatus","mutate","setBuyer","getBuyer","customerAccessToken","loginUrl","state","nonce","uiLocales","getMaybeUILocales","verifier","challenge","postLogoutRedirectUri","logoutUrl","code","id_token","sessionNonce","responseNonce","redirectPath","publicMessage","params","contextLocale","toMaybeLocaleString","tokens","maybeEnforceRegionalVariant","langToken","regionToken","regionalLanguageOverrides","createHydrogenContext","env","storefrontOptions","customerAccountOptions","cartOptions","getStorefrontHeaders","createElement","cspBuilder","NonceContext","NonceProvider","useNonce","createContentSecurityPolicy","createCSPHeader","directives","nonceString","styleSrc","connectSrc","defaultDirectives","combinedDirectives","directive","addCspDirective","ss","currentValue","normalizedValue","normalizedCurrentValue","forwardRef","Script","ref","waitForHydration","src","LazyScript","Fragment","useOptimisticData","identifier","dataInForm","OptimisticInput","id","Link","useNavigation","useNavigate","Pagination","connection","namespace","isLoading","setIsLoading","transition","navigate","endCursor","hasNextPage","hasPreviousPage","nextPageUrl","nodes","previousPageUrl","startCursor","usePagination","NextLink","PreviousLink","getParamsWithoutPagination","paramsString","namespacePrefix","cursorParam","directionParam","makeError","prop","isPrevious","currentPageInfo","hydrogenHydrated","stateInfo","pageStartCursor","pageEndCursor","previousPageExists","nextPageExists","urlRef","currentParams","previousParams","getPaginationVariables","pageBy","cursor","useOptimisticVariant","selectedVariant","variants","navigation","resolvedVariants","setResolvedVariants","productWithVariants","queryParams","reportedError","matchingVariant","variant","option","VariantSelector","handle","_options","_variants","productPath","waitForNavigation","alreadyOnProductPage","useVariantPath","optionsWithOnlyOneValue","selectedVariantOptions","selectedValues","item","activeValue","availableValues","clonedSearchParams","selectedOption","selectedValue","calculatedActiveValue","searchString","getSelectedProductOptions","selectedOptions","isLocalePathname","OriginalRichText","RichText","node","graphiqlLoader","context","schemas","authHeader","customerAccountSchema","favicon","html","storefrontRedirect","noAdminRedirect","matchQueryParams","isSoftNavigation","createRedirectResponse","urlRedirects","REDIRECT_QUERY","TEMP_DOMAIN","ESCAPE_LOOKUP","ESCAPE_REGEX","escapeHtml","ERROR_PREFIX","schema","generateSeoTags","seoInput","tagResults","seoKey","content","validate","title","renderTitle","generateTag","urlWithoutTrailingSlash","ensureArray","media","normalizedMedia","inferMimeType","jsonLdBlocks","block","tag","alternates","alternate","defaultLang","hrefLang","maxImagePreview","maxSnippet","maxVideoPreview","noArchive","noFollow","noImageIndex","noIndex","noSnippet","noTranslate","unavailableAfter","robotsParams","robotsParam","param","a","b","tagName","group","generateKey","priority","x","template","getSeoMeta","seoInputs","dedupedSeoInput","acc","current","jsonLd","lazy","Suspense","useMatches","SeoLogger","Seo","debug","matches","seoConfig","routeMatch","routeData","handleSeo","loaderSeo","recursivelyInvokeOrReturn","loggerMarkup","headTags","val","ShopPayButtonBase","ShopPayButton","SITEMAP_INDEX_PREFIX","SITEMAP_INDEX_SUFFIX","SITEMAP_PREFIX","SITEMAP_SUFFIX","getSitemapIndex","types","customChildSitemaps","SITEMAP_INDEX_QUERY","baseUrl","getSiteMapLinks","getSitemap","getLink","locales","getChangeFreq","noItemsFallback","QUERIES","renderUrlTag","resource","count","links","i","updatedAt","metaobjectType","renderAlternateTag","PRODUCT_SITEMAP_QUERY","COLLECTION_SITEMAP_QUERY","ARTICLE_SITEMAP_QUERY","PAGE_SITEMAP_QUERY","BLOG_SITEMAP_QUERY","METAOBJECT_SITEMAP_QUERY","customerAccountApiCustomScalars","decodeEncodedVariant","ExternalVideo","getAdjacentAndFirstAvailableVariants","getProductOptions","Image","IMAGE_FRAGMENT","isOptionValueCombinationInEncodedVariant","mapSelectedProductOptionToObject","MediaFile","ModelViewer","Money","parseMetafield","ShopifySalesChannel","storefrontApiCustomScalars","useMoney","useSelectedOptionInUrlParam","Video"],"mappings":"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","sourcesContent":["import {\n  type ReactNode,\n  useEffect,\n  useState,\n  useMemo,\n  createContext,\n  useContext,\n  useRef,\n} from 'react';\nimport {type CartReturn} from '../cart/queries/cart-types';\nimport {\n  AnalyticsPageView,\n  AnalyticsProductView,\n  AnalyticsCollectionView,\n  AnalyticsCartView,\n  AnalyticsSearchView,\n  AnalyticsCustomView,\n  type PageViewPayload,\n  type ProductViewPayload,\n  type CollectionViewPayload,\n  type CartViewPayload,\n  type CartUpdatePayload,\n  type CustomEventPayload,\n  type OtherData,\n  type EventPayloads,\n  type CartLineUpdatePayload,\n  type SearchViewPayload,\n} from './AnalyticsView';\nimport type {\n  CurrencyCode,\n  LanguageCode,\n  Shop,\n  Localization,\n} from '@shopify/hydrogen-react/storefront-api-types';\nimport {AnalyticsEvent} from './events';\nimport {ShopifyAnalytics} from './ShopifyAnalytics';\nimport {CartAnalytics} from './CartAnalytics';\nimport {\n  type PrivacyBanner,\n  getCustomerPrivacy,\n  getPrivacyBanner,\n  type CustomerPrivacy,\n  type CustomerPrivacyApiProps,\n} from '../customer-privacy/ShopifyCustomerPrivacy';\nimport type {Storefront} from '../storefront';\nimport {PerfKit} from './PerfKit';\nimport {errorOnce, warnOnce} from '../utils/warning';\n\nexport type ShopAnalytics = {\n  /** The shop ID. */\n  shopId: string;\n  /** The language code that is being displayed to user. */\n  acceptedLanguage: LanguageCode;\n  /** The currency code that is being displayed to user. */\n  currency: CurrencyCode;\n  /** The Hydrogen subchannel ID generated by Oxygen in the environment variable. */\n  hydrogenSubchannelId: string | '0';\n};\n\nexport type Consent = Partial<\n  Pick<\n    CustomerPrivacyApiProps,\n    'checkoutDomain' | 'storefrontAccessToken' | 'withPrivacyBanner' | 'country'\n  >\n> & {language?: LanguageCode}; // the privacyBanner SDKs refers to \"language\" as \"locale\" :(\n\nexport type AnalyticsProviderProps = {\n  /** React children to render. */\n  children?: ReactNode;\n  /** The cart or cart promise to track for cart analytics. When there is a difference between the state of the cart, `AnalyticsProvider` will trigger a `cart_updated` event. It will also produce `product_added_to_cart` and `product_removed_from_cart` based on cart line quantity and cart line id changes. */\n  cart: Promise<CartReturn | null> | CartReturn | null;\n  /** An optional function to set wether the user can be tracked. Defaults to Customer Privacy API's `window.Shopify.customerPrivacy.analyticsProcessingAllowed()`. */\n  canTrack?: () => boolean;\n  /** An optional custom payload to pass to all events. e.g language/locale/currency. */\n  customData?: Record<string, unknown>;\n  /** The shop configuration required to publish analytics events to Shopify. Use [`getShopAnalytics`](/docs/api/hydrogen/2025-01/utilities/getshopanalytics). */\n  shop: Promise<ShopAnalytics | null> | ShopAnalytics | null;\n  /** The customer privacy consent configuration and options. */\n  consent: Consent;\n  /** @deprecated Disable throwing errors when required props are missing. */\n  disableThrowOnError?: boolean;\n  /** The domain scope of the cookie set with `useShopifyCookies`. **/\n  cookieDomain?: string;\n};\n\nexport type Carts = {\n  cart: Awaited<AnalyticsProviderProps['cart']>;\n  prevCart: Awaited<AnalyticsProviderProps['cart']>;\n};\n\nexport type AnalyticsContextValue = {\n  /** A function to tell you the current state of if the user can be tracked by analytics. Defaults to Customer Privacy API's `window.Shopify.customerPrivacy.analyticsProcessingAllowed()`. */\n  canTrack: NonNullable<AnalyticsProviderProps['canTrack']>;\n  /** The current cart state. */\n  cart: Awaited<AnalyticsProviderProps['cart']>;\n  /** The custom data passed in from the `AnalyticsProvider`. */\n  customData?: AnalyticsProviderProps['customData'];\n  /** The previous cart state. */\n  prevCart: Awaited<AnalyticsProviderProps['cart']>;\n  /** A function to publish an analytics event. */\n  publish: typeof publish;\n  /** A function to register with the analytics provider. */\n  register: (key: string) => {ready: () => void};\n  /** The shop configuration required to publish events to Shopify. */\n  shop: Awaited<AnalyticsProviderProps['shop']>;\n  /** A function to subscribe to analytics events. */\n  subscribe: typeof subscribe;\n  /** The privacy banner SDK methods with the config applied */\n  privacyBanner: PrivacyBanner | null;\n  /** The customer privacy SDK methods with the config applied */\n  customerPrivacy: CustomerPrivacy | null;\n};\n\nexport const defaultAnalyticsContext: AnalyticsContextValue = {\n  canTrack: () => false,\n  cart: null,\n  customData: {},\n  prevCart: null,\n  publish: () => {},\n  shop: null,\n  subscribe: () => {},\n  register: () => ({ready: () => {}}),\n  customerPrivacy: null,\n  privacyBanner: null,\n};\n\nconst AnalyticsContext = createContext<AnalyticsContextValue>(\n  defaultAnalyticsContext,\n);\n\nconst subscribers = new Map<\n  string,\n  Map<string, (payload: EventPayloads) => void>\n>();\nconst registers: Record<string, boolean> = {};\n\nfunction areRegistersReady() {\n  return Object.values(registers).every(Boolean);\n}\n\n// Overload functions for each subscribe event\nfunction subscribe(\n  event: typeof AnalyticsEvent.PAGE_VIEWED,\n  callback: (payload: PageViewPayload) => void,\n): void;\n\nfunction subscribe(\n  event: typeof AnalyticsEvent.PRODUCT_VIEWED,\n  callback: (payload: ProductViewPayload) => void,\n): void;\n\nfunction subscribe(\n  event: typeof AnalyticsEvent.COLLECTION_VIEWED,\n  callback: (payload: CollectionViewPayload) => void,\n): void;\n\nfunction subscribe(\n  event: typeof AnalyticsEvent.CART_VIEWED,\n  callback: (payload: CartViewPayload) => void,\n): void;\n\nfunction subscribe(\n  event: typeof AnalyticsEvent.SEARCH_VIEWED,\n  callback: (payload: SearchViewPayload) => void,\n): void;\n\nfunction subscribe(\n  event: typeof AnalyticsEvent.CART_UPDATED,\n  callback: (payload: CartUpdatePayload) => void,\n): void;\n\nfunction subscribe(\n  event: typeof AnalyticsEvent.PRODUCT_ADD_TO_CART,\n  callback: (payload: CartLineUpdatePayload) => void,\n): void;\n\nfunction subscribe(\n  event: typeof AnalyticsEvent.PRODUCT_REMOVED_FROM_CART,\n  callback: (payload: CartLineUpdatePayload) => void,\n): void;\n\nfunction subscribe(\n  event: typeof AnalyticsEvent.CUSTOM_EVENT,\n  callback: (payload: CustomEventPayload) => void,\n): void;\n\nfunction subscribe(event: any, callback: any) {\n  if (!subscribers.has(event)) {\n    subscribers.set(event, new Map());\n  }\n  subscribers.get(event)?.set(callback.toString(), callback);\n}\n\nconst waitForReadyQueue = new Map<any, any>();\n\nfunction publish(\n  event: typeof AnalyticsEvent.PAGE_VIEWED,\n  payload: PageViewPayload,\n): void;\nfunction publish(\n  event: typeof AnalyticsEvent.PRODUCT_VIEWED,\n  payload: ProductViewPayload,\n): void;\nfunction publish(\n  event: typeof AnalyticsEvent.COLLECTION_VIEWED,\n  payload: CollectionViewPayload,\n): void;\nfunction publish(\n  event: typeof AnalyticsEvent.CART_VIEWED,\n  payload: CartViewPayload,\n): void;\nfunction publish(\n  event: typeof AnalyticsEvent.CART_UPDATED,\n  payload: CartUpdatePayload,\n): void;\nfunction publish(\n  event: typeof AnalyticsEvent.PRODUCT_ADD_TO_CART,\n  payload: CartLineUpdatePayload,\n): void;\nfunction publish(\n  event: typeof AnalyticsEvent.PRODUCT_REMOVED_FROM_CART,\n  payload: CartLineUpdatePayload,\n): void;\nfunction publish(\n  event: typeof AnalyticsEvent.CUSTOM_EVENT,\n  payload: OtherData,\n): void;\nfunction publish(event: any, payload: any): void {\n  if (!areRegistersReady()) {\n    waitForReadyQueue.set(event, payload);\n    return;\n  }\n\n  publishEvent(event, payload);\n}\n\nfunction publishEvent(event: any, payload: any): void {\n  (subscribers.get(event) ?? new Map()).forEach((callback, subscriber) => {\n    try {\n      callback(payload);\n    } catch (error) {\n      if (typeof error === 'object' && error instanceof Error) {\n        console.error(\n          'Analytics publish error',\n          error.message,\n          subscriber,\n          error.stack,\n        );\n      } else {\n        console.error('Analytics publish error', error, subscriber);\n      }\n    }\n  });\n}\n\nfunction register(key: string) {\n  if (!registers.hasOwnProperty(key)) {\n    registers[key] = false;\n  }\n\n  return {\n    ready: () => {\n      registers[key] = true;\n\n      if (areRegistersReady() && waitForReadyQueue.size > 0) {\n        waitForReadyQueue.forEach((queuePayload, queueEvent) => {\n          publishEvent(queueEvent, queuePayload);\n        });\n        waitForReadyQueue.clear();\n      }\n    },\n  };\n}\n\n/**\n * This functions attempts to automatically determine if the user can be tracked if the\n * customer privacy API is available. If not, it will default to false.\n */\nfunction shopifyCanTrack(): boolean {\n  try {\n    return window.Shopify.customerPrivacy.analyticsProcessingAllowed();\n  } catch (e) {}\n  return false;\n}\n\nfunction messageOnError(field: string, envVar: string) {\n  return `[h2:error:Analytics.Provider] - ${field} is required. Make sure ${envVar} is defined in your environment variables. See https://h2o.fyi/analytics/consent to learn how to setup environment variables in the Shopify admin.`;\n}\n\nfunction AnalyticsProvider({\n  canTrack: customCanTrack,\n  cart: currentCart,\n  children,\n  consent,\n  customData = {},\n  shop: shopProp = null,\n  cookieDomain,\n}: AnalyticsProviderProps): JSX.Element {\n  const listenerSet = useRef(false);\n  const {shop} = useShopAnalytics(shopProp);\n  const [analyticsLoaded, setAnalyticsLoaded] = useState(\n    customCanTrack ? true : false,\n  );\n  const [carts, setCarts] = useState<Carts>({cart: null, prevCart: null});\n  const [canTrack, setCanTrack] = useState<() => boolean>(\n    customCanTrack ? () => customCanTrack : () => shopifyCanTrack,\n  );\n\n  // eslint-disable-next-line no-extra-boolean-cast\n  if (!!shop) {\n    // If mock shop is used, log error instead of throwing\n    if (/\\/68817551382$/.test(shop.shopId)) {\n      warnOnce(\n        '[h2:error:Analytics.Provider] - Mock shop is used. Analytics will not work properly.',\n      );\n    } else {\n      if (!consent.checkoutDomain) {\n        const errorMsg = messageOnError(\n          'consent.checkoutDomain',\n          'PUBLIC_CHECKOUT_DOMAIN',\n        );\n        errorOnce(errorMsg);\n      }\n\n      if (!consent.storefrontAccessToken) {\n        const errorMsg = messageOnError(\n          'consent.storefrontAccessToken',\n          'PUBLIC_STOREFRONT_API_TOKEN',\n        );\n        errorOnce(errorMsg);\n      }\n\n      if (!consent?.country) {\n        consent.country = 'US';\n      }\n\n      if (!consent?.language) {\n        consent.language = 'EN';\n      }\n\n      if (consent.withPrivacyBanner === undefined) {\n        consent.withPrivacyBanner = false;\n      }\n    }\n  }\n\n  const value = useMemo<AnalyticsContextValue>(() => {\n    return {\n      canTrack,\n      ...carts,\n      customData,\n      publish: canTrack() ? publish : () => {},\n      shop,\n      subscribe,\n      register,\n      customerPrivacy: getCustomerPrivacy(),\n      privacyBanner: getPrivacyBanner(),\n    };\n  }, [\n    analyticsLoaded,\n    canTrack,\n    carts,\n    carts.cart?.updatedAt,\n    carts.prevCart,\n    publish,\n    subscribe,\n    customData,\n    shop,\n    register,\n    JSON.stringify(registers),\n    getCustomerPrivacy,\n    getPrivacyBanner,\n  ]);\n\n  return (\n    <AnalyticsContext.Provider value={value}>\n      {children}\n      {!!shop && <AnalyticsPageView />}\n      {!!shop && !!currentCart && (\n        <CartAnalytics cart={currentCart} setCarts={setCarts} />\n      )}\n      {!!shop && consent.checkoutDomain && (\n        <ShopifyAnalytics\n          consent={consent}\n          onReady={() => {\n            listenerSet.current = true;\n            setAnalyticsLoaded(true);\n            setCanTrack(\n              customCanTrack ? () => customCanTrack : () => shopifyCanTrack,\n            );\n          }}\n          domain={cookieDomain}\n        />\n      )}\n      {!!shop && <PerfKit shop={shop} />}\n    </AnalyticsContext.Provider>\n  );\n}\n\nexport function useAnalytics(): AnalyticsContextValue {\n  const analyticsContext = useContext(AnalyticsContext);\n  if (!analyticsContext) {\n    throw new Error(\n      `[h2:error:useAnalytics] 'useAnalytics()' must be a descendent of <AnalyticsProvider/>`,\n    );\n  }\n  return analyticsContext;\n}\n\n/**\n * A hook that resolves the shop analytics that could have been deferred\n * and returns the shop analytics.\n */\nfunction useShopAnalytics(shopProp: AnalyticsProviderProps['shop']): {\n  shop: ShopAnalytics | null;\n} {\n  const [shop, setShop] =\n    useState<Awaited<AnalyticsProviderProps['shop']>>(null);\n\n  // resolve the shop analytics that could have been deferred\n  useEffect(() => {\n    Promise.resolve(shopProp).then(setShop);\n    return () => {};\n  }, [setShop, shopProp]);\n\n  return {shop};\n}\n\ntype ShopAnalyticsProps = {\n  /**\n   * The storefront client instance created by [`createStorefrontClient`](docs/api/hydrogen/2025-01/utilities/createstorefrontclient).\n   */\n  storefront: Storefront;\n  /**\n   * The `PUBLIC_STOREFRONT_ID` generated by Oxygen in the environment variable.\n   */\n  publicStorefrontId: string;\n};\n\nexport async function getShopAnalytics({\n  storefront,\n  publicStorefrontId = '0',\n}: ShopAnalyticsProps): Promise<ShopAnalytics | null> {\n  return storefront\n    .query(SHOP_QUERY, {\n      cache: storefront.CacheLong(),\n    })\n    .then(({shop, localization}: {shop: Shop; localization: Localization}) => {\n      return {\n        shopId: shop.id,\n        acceptedLanguage: localization.language.isoCode,\n        currency: localization.country.currency.isoCode,\n        hydrogenSubchannelId: publicStorefrontId,\n      };\n    });\n}\n\nconst SHOP_QUERY = `#graphql\n  query ShopData(\n    $country: CountryCode\n    $language: LanguageCode\n  ) @inContext(country: $country, language: $language) {\n    shop {\n      id\n    }\n    localization {\n      country {\n        currency {\n          isoCode\n        }\n      }\n      language {\n        isoCode\n      }\n    }\n  }\n` as const;\n\nexport const Analytics = {\n  CartView: AnalyticsCartView,\n  CollectionView: AnalyticsCollectionView,\n  CustomView: AnalyticsCustomView,\n  ProductView: AnalyticsProductView,\n  Provider: AnalyticsProvider,\n  SearchView: AnalyticsSearchView,\n};\n\ntype DefaultCart = Promise<CartReturn | null> | CartReturn | null;\n\nexport type AnalyticsContextValueForDoc<UserCart> = {\n  /** A function to tell you the current state of if the user can be tracked by analytics. Defaults to Customer Privacy API's `window.Shopify.customerPrivacy.analyticsProcessingAllowed()`. */\n  canTrack?: () => boolean;\n  /** The current cart state. You can overwrite the type by passing a generic */\n  cart?: UserCart | DefaultCart;\n  /** The custom data passed in from the `AnalyticsProvider`. */\n  customData?: Record<string, unknown>;\n  /** The previous cart state. You can overwrite the type by passing a generic */\n  prevCart?: UserCart | DefaultCart;\n  /** A function to publish an analytics event. */\n  publish?: AnalyticsContextPublishForDoc;\n  /** A function to register with the analytics provider. It holds the first browser load events until all registered key has executed the supplied `ready` function. [See example register  usage](/docs/api/hydrogen/2025-01/hooks/useanalytics#example-useanalytics.register). */\n  register?: (key: string) => {ready: () => void};\n  /** The shop configuration required to publish events to Shopify. */\n  shop?: Promise<ShopAnalytics | null> | ShopAnalytics | null;\n  /** A function to subscribe to analytics events. */\n  subscribe?: AnalyticsContextSubscribeForDoc;\n};\n\ntype PublishPageView = (event: 'page_viewed', payload: PageViewPayload) => void;\ntype PublishProductView = (\n  event: 'product_viewed',\n  payload: ProductViewPayload,\n) => void;\ntype PublishCollectionView = (\n  event: 'collection_viewed',\n  payload: CollectionViewPayload,\n) => void;\ntype PublishCartView = (event: 'cart_viewed', payload: CartViewPayload) => void;\ntype PublishSearchView = (\n  event: 'search_viewed',\n  payload: SearchViewPayload,\n) => void;\ntype PublishCartUpdated = (\n  event: 'cart_updated',\n  payload: CartUpdatePayload,\n) => void;\ntype PublishProductAddedToCart = (\n  event: 'product_added_to_cart',\n  payload: CartLineUpdatePayload,\n) => void;\ntype PublishProductRemovedFromCart = (\n  event: 'product_removed_from_cart',\n  payload: CartLineUpdatePayload,\n) => void;\ntype PublishCustomEvent = (\n  event: `custom_${string}`,\n  payload: OtherData,\n) => void;\n\nexport type AnalyticsContextPublishForDoc =\n  | PublishPageView\n  | PublishProductView\n  | PublishCollectionView\n  | PublishCartView\n  | PublishSearchView\n  | PublishCartUpdated\n  | PublishProductAddedToCart\n  | PublishProductRemovedFromCart\n  | PublishCustomEvent;\n\ntype SubscribePageView = (\n  event: 'page_viewed',\n  callback: (payload: PageViewPayload) => void,\n) => void;\ntype SubscribeProductView = (\n  event: 'product_viewed',\n  callback: (payload: ProductViewPayload) => void,\n) => void;\ntype SubscribeCollectionView = (\n  event: 'collection_viewed',\n  callback: (payload: CollectionViewPayload) => void,\n) => void;\ntype SubscribeCartView = (\n  event: 'cart_viewed',\n  callback: (payload: CartViewPayload) => void,\n) => void;\ntype SubscribeSearchView = (\n  event: 'search_viewed',\n  callback: (payload: SearchViewPayload) => void,\n) => void;\ntype SubscribeCartUpdated = (\n  event: 'cart_updated',\n  callback: (payload: CartUpdatePayload) => void,\n) => void;\ntype SubscribeProductAddedToCart = (\n  event: 'product_added_to_cart',\n  callback: (payload: CartLineUpdatePayload) => void,\n) => void;\ntype SubscribeProductRemovedFromCart = (\n  event: 'product_removed_from_cart',\n  callback: (payload: CartLineUpdatePayload) => void,\n) => void;\ntype SubscribeCustomEvent = (\n  event: `custom_${string}`,\n  callback: (payload: OtherData) => void,\n) => void;\n\nexport type AnalyticsContextSubscribeForDoc =\n  | SubscribePageView\n  | SubscribeProductView\n  | SubscribeCollectionView\n  | SubscribeCartView\n  | SubscribeSearchView\n  | SubscribeCartUpdated\n  | SubscribeProductAddedToCart\n  | SubscribeProductRemovedFromCart\n  | SubscribeCustomEvent;\n","import {useLocation} from '@remix-run/react';\nimport {useEffect} from 'react';\nimport {\n  type ShopAnalytics,\n  type AnalyticsProviderProps,\n  useAnalytics,\n} from './AnalyticsProvider';\nimport {CartReturn} from '../cart/queries/cart-types';\nimport {AnalyticsEvent} from './events';\nimport {\n  CartLine,\n  ComponentizableCartLine,\n  Product,\n  ProductVariant,\n} from '@shopify/hydrogen-react/storefront-api-types';\n\nexport type OtherData = {\n  /** Any other data that should be included in the event. */\n  [key: string]: unknown;\n};\n\ntype BasePayload = {\n  /** The shop data passed in from the `AnalyticsProvider`. */\n  shop: ShopAnalytics | null;\n  /** The custom data passed in from the `AnalyticsProvider`. */\n  customData?: AnalyticsProviderProps['customData'];\n};\n\ntype UrlPayload = {\n  /** The url location of when this event is collected. */\n  url: string;\n};\n\ntype ProductPayload = {\n  /** The product id. */\n  id: Product['id'];\n  /** The product title. */\n  title: Product['title'];\n  /** The displaying variant price. */\n  price: ProductVariant['price']['amount'];\n  /** The product vendor. */\n  vendor: Product['vendor'];\n  /** The displaying variant id. */\n  variantId: ProductVariant['id'];\n  /** The displaying variant title. */\n  variantTitle: ProductVariant['title'];\n  /** The quantity of product. */\n  quantity: number;\n  /** The product sku. */\n  sku?: ProductVariant['sku'];\n  /** The product type. */\n  productType?: Product['productType'];\n};\n\ntype ProductsPayload = {\n  /** The products associated with this event. */\n  products: Array<ProductPayload & OtherData>;\n};\n\ntype CollectionPayloadDetails = {\n  /** The collection id. */\n  id: string;\n  /** The collection handle. */\n  handle: string;\n};\n\ntype CollectionPayload = {\n  collection: CollectionPayloadDetails;\n};\n\ntype SearchPayload = {\n  /** The search term used for the search results page */\n  searchTerm: string;\n  /** The search results */\n  searchResults?: any;\n};\n\ntype CartPayload = {\n  /** The current cart state. */\n  cart: CartReturn | null;\n  /** The previous cart state. */\n  prevCart: CartReturn | null;\n};\n\ntype CartLinePayload = {\n  /** The previous state of the cart line that got updated. */\n  prevLine?: CartLine | ComponentizableCartLine;\n  /** The current state of the cart line that got updated. */\n  currentLine?: CartLine | ComponentizableCartLine;\n};\n\n// Event payloads\nexport type CollectionViewPayload = CollectionPayload &\n  UrlPayload &\n  BasePayload;\nexport type ProductViewPayload = ProductsPayload & UrlPayload & BasePayload;\nexport type CartViewPayload = CartPayload & UrlPayload & BasePayload;\nexport type PageViewPayload = UrlPayload & BasePayload;\nexport type SearchViewPayload = SearchPayload & UrlPayload & BasePayload;\n\ntype ViewPayload =\n  | PageViewPayload\n  | ProductViewPayload\n  | CollectionViewPayload\n  | CartViewPayload\n  | SearchViewPayload;\n\nexport type CartUpdatePayload = CartPayload & BasePayload & OtherData;\nexport type CartLineUpdatePayload = CartLinePayload &\n  CartPayload &\n  BasePayload &\n  OtherData;\nexport type CustomEventPayload = BasePayload & OtherData;\n\nexport type EventPayloads =\n  | PageViewPayload\n  | ProductViewPayload\n  | CollectionViewPayload\n  | CartViewPayload\n  | SearchViewPayload\n  | CartUpdatePayload\n  | CartLineUpdatePayload\n  | CustomEventPayload;\n\nexport type EventTypes = (typeof AnalyticsEvent)[keyof typeof AnalyticsEvent];\n\ntype BaseViewProps = {\n  customData?: OtherData;\n};\n\nfunction AnalyticsView(\n  props: BasicViewProps & {type: typeof AnalyticsEvent.PAGE_VIEWED},\n): null;\nfunction AnalyticsView(\n  props: ProductViewProps & {type: typeof AnalyticsEvent.PRODUCT_VIEWED},\n): null;\nfunction AnalyticsView(\n  props: CollectionViewProps & {type: typeof AnalyticsEvent.COLLECTION_VIEWED},\n): null;\nfunction AnalyticsView(\n  props: BasicViewProps & {type: typeof AnalyticsEvent.CART_VIEWED},\n): null;\nfunction AnalyticsView(\n  props: SearchViewProps & {type: typeof AnalyticsEvent.SEARCH_VIEWED},\n): null;\nfunction AnalyticsView(props: CustomViewProps): null;\nfunction AnalyticsView(props: any) {\n  const {type, data = {}, customData} = props;\n  const location = useLocation();\n  const {\n    publish,\n    cart,\n    prevCart,\n    shop,\n    customData: analyticProviderCustomData,\n  } = useAnalytics();\n  const url = location.pathname + location.search;\n\n  let viewPayload: ViewPayload = {\n    ...data,\n    customData: {\n      ...analyticProviderCustomData,\n      ...customData,\n    },\n    cart,\n    prevCart,\n    shop,\n  };\n\n  // Publish page_viewed events when the URL changes\n  useEffect(() => {\n    // don't publish the event until we have the shop\n    if (!shop?.shopId) return;\n\n    viewPayload = {\n      ...viewPayload,\n      url: window.location.href,\n    };\n\n    publish(type, viewPayload);\n  }, [publish, url, shop?.shopId]);\n\n  return null;\n}\n\ntype BasicViewProps = {\n  data?: OtherData;\n  customData?: OtherData;\n};\n\ntype ProductViewProps = {\n  data: ProductsPayload;\n  customData?: OtherData;\n};\n\ntype CollectionViewProps = {\n  data: CollectionPayload;\n  customData?: OtherData;\n};\n\ntype SearchViewProps = {\n  data?: SearchPayload;\n  customData?: OtherData;\n};\n\ntype CustomViewProps = {\n  type: typeof AnalyticsEvent.CUSTOM_EVENT;\n  data?: OtherData;\n  customData?: OtherData;\n};\n\nexport function AnalyticsPageView(props: BasicViewProps) {\n  return <AnalyticsView {...props} type=\"page_viewed\" />;\n}\n\nexport function AnalyticsProductView(props: ProductViewProps) {\n  return <AnalyticsView {...props} type=\"product_viewed\" />;\n}\n\nexport function AnalyticsCollectionView(props: CollectionViewProps) {\n  return <AnalyticsView {...props} type=\"collection_viewed\" />;\n}\n\nexport function AnalyticsCartView(props: BasicViewProps) {\n  return <AnalyticsView {...props} type=\"cart_viewed\" />;\n}\n\nexport function AnalyticsSearchView(props: SearchViewProps) {\n  return <AnalyticsView {...props} type=\"search_viewed\" />;\n}\n\nexport function AnalyticsCustomView(props: CustomViewProps) {\n  return <AnalyticsView {...props} />;\n}\n","import {\n  AnalyticsEventName,\n  getClientBrowserParameters,\n  sendShopifyAnalytics,\n  useShopifyCookies,\n  type ShopifyPageViewPayload,\n  AnalyticsPageType,\n  type ShopifyAnalyticsProduct,\n  type ShopifyAddToCartPayload,\n} from '@shopify/hydrogen-react';\nimport {type CartReturn} from '../cart/queries/cart-types';\nimport {AnalyticsEvent} from './events';\nimport {useAnalytics, type AnalyticsProviderProps} from './AnalyticsProvider';\nimport {\n  useCustomerPrivacy,\n  getCustomerPrivacy,\n} from '../customer-privacy/ShopifyCustomerPrivacy';\nimport type {\n  PageViewPayload,\n  ProductViewPayload,\n  CollectionViewPayload,\n  CartUpdatePayload,\n  CartLineUpdatePayload,\n  SearchViewPayload,\n} from './AnalyticsView';\nimport {useEffect, useRef, useState} from 'react';\nimport {\n  CartLine,\n  ComponentizableCartLine,\n  Maybe,\n} from '@shopify/hydrogen-react/storefront-api-types';\nimport {version} from '../../package.json';\n\nfunction getCustomerPrivacyRequired() {\n  const customerPrivacy = getCustomerPrivacy();\n\n  if (!customerPrivacy) {\n    throw new Error(\n      'Shopify Customer Privacy API not available. Must be used within a useEffect. Make sure to load the Shopify Customer Privacy API with useCustomerPrivacy() or <AnalyticsProvider>.',\n    );\n  }\n\n  return customerPrivacy;\n}\n\n/**\n * This component is responsible for sending analytics events to Shopify.\n * It emits the following events:\n * - page_viewed\n * - product_viewed\n * - collection_viewed\n * - search_viewed\n * - product_added_to_cart\n */\nexport function ShopifyAnalytics({\n  consent,\n  onReady,\n  domain,\n}: {\n  consent: AnalyticsProviderProps['consent'];\n  onReady: () => void;\n  domain?: string;\n}) {\n  const {subscribe, register, canTrack} = useAnalytics();\n  const [shopifyReady, setShopifyReady] = useState(false);\n  const [privacyReady, setPrivacyReady] = useState(false);\n  const init = useRef(false);\n  const {checkoutDomain, storefrontAccessToken, language} = consent;\n  const {ready: shopifyAnalyticsReady} = register('Internal_Shopify_Analytics');\n\n  // load customer privacy and (optionally) the privacy banner APIs\n  useCustomerPrivacy({\n    ...consent,\n    locale: language,\n    checkoutDomain: !checkoutDomain ? 'mock.shop' : checkoutDomain,\n    storefrontAccessToken: !storefrontAccessToken\n      ? 'abcdefghijklmnopqrstuvwxyz123456'\n      : storefrontAccessToken,\n    onVisitorConsentCollected: () => setPrivacyReady(true),\n    onReady: () => setPrivacyReady(true),\n  });\n\n  // set up shopify_Y and shopify_S cookies\n  useShopifyCookies({\n    hasUserConsent: privacyReady ? canTrack() : true, // must be initialized with true\n    domain,\n    checkoutDomain,\n  });\n\n  useEffect(() => {\n    if (init.current) return;\n    init.current = true;\n\n    // Views\n    subscribe(AnalyticsEvent.PAGE_VIEWED, pageViewHandler);\n    subscribe(AnalyticsEvent.PRODUCT_VIEWED, productViewHandler);\n    subscribe(AnalyticsEvent.COLLECTION_VIEWED, collectionViewHandler);\n    subscribe(AnalyticsEvent.SEARCH_VIEWED, searchViewHandler);\n\n    // Cart\n    subscribe(AnalyticsEvent.PRODUCT_ADD_TO_CART, productAddedToCartHandler);\n\n    setShopifyReady(true);\n  }, [subscribe]);\n\n  useEffect(() => {\n    if (shopifyReady && privacyReady) {\n      shopifyAnalyticsReady();\n      onReady();\n    }\n  }, [shopifyReady, privacyReady, onReady]);\n\n  return null;\n}\n\nfunction logMissingConfig(fieldName: string) {\n  // eslint-disable-next-line no-console\n  console.error(\n    `[h2:error:ShopifyAnalytics] Unable to send Shopify analytics: Missing shop.${fieldName} configuration.`,\n  );\n}\n\nfunction prepareBasePageViewPayload(\n  payload:\n    | PageViewPayload\n    | ProductViewPayload\n    | CollectionViewPayload\n    | SearchViewPayload\n    | CartUpdatePayload,\n): ShopifyPageViewPayload | undefined {\n  const customerPrivacy = getCustomerPrivacyRequired();\n  const hasUserConsent = customerPrivacy.analyticsProcessingAllowed();\n\n  if (!payload?.shop?.shopId) {\n    logMissingConfig('shopId');\n    return;\n  }\n  if (!payload?.shop?.acceptedLanguage) {\n    logMissingConfig('acceptedLanguage');\n    return;\n  }\n  if (!payload?.shop?.currency) {\n    logMissingConfig('currency');\n    return;\n  }\n  if (!payload?.shop?.hydrogenSubchannelId) {\n    logMissingConfig('hydrogenSubchannelId');\n    return;\n  }\n\n  const eventPayload: ShopifyPageViewPayload = {\n    shopifySalesChannel: 'hydrogen',\n    assetVersionId: version,\n    ...payload.shop,\n    hasUserConsent,\n    ...getClientBrowserParameters(),\n    ccpaEnforced: !customerPrivacy.saleOfDataAllowed(),\n    gdprEnforced: !(\n      customerPrivacy.marketingAllowed() &&\n      customerPrivacy.analyticsProcessingAllowed()\n    ),\n    analyticsAllowed: customerPrivacy.analyticsProcessingAllowed(),\n    marketingAllowed: customerPrivacy.marketingAllowed(),\n    saleOfDataAllowed: customerPrivacy.saleOfDataAllowed(),\n  };\n\n  return eventPayload;\n}\n\nfunction prepareBaseCartPayload(\n  payload: CartUpdatePayload,\n  cart: CartReturn | null,\n): ShopifyAddToCartPayload | undefined {\n  if (cart === null) return;\n\n  const pageViewPayload = prepareBasePageViewPayload(payload);\n\n  if (!pageViewPayload) return;\n\n  const eventPayload: ShopifyAddToCartPayload = {\n    ...(pageViewPayload as ShopifyAddToCartPayload),\n    cartId: cart.id,\n  };\n\n  return eventPayload;\n}\n\n// Forwarding view specific event payloads to page view handler\nlet viewPayload = {};\n\nfunction pageViewHandler(payload: PageViewPayload) {\n  const eventPayload = prepareBasePageViewPayload(payload);\n\n  if (!eventPayload) return;\n\n  sendShopifyAnalytics({\n    eventName: AnalyticsEventName.PAGE_VIEW_2,\n    payload: {\n      ...eventPayload,\n      ...viewPayload,\n    },\n  });\n  viewPayload = {};\n}\n\nfunction productViewHandler(payload: ProductViewPayload) {\n  let eventPayload = prepareBasePageViewPayload(payload);\n\n  if (\n    eventPayload &&\n    validateProducts({\n      type: 'product',\n      products: payload.products,\n    })\n  ) {\n    const formattedProducts = formatProduct(payload.products);\n    viewPayload = {\n      pageType: AnalyticsPageType.product,\n      resourceId: formattedProducts[0].productGid,\n    };\n    eventPayload = {\n      ...eventPayload,\n      ...viewPayload,\n      products: formatProduct(payload.products),\n    };\n\n    sendShopifyAnalytics({\n      eventName: AnalyticsEventName.PRODUCT_VIEW,\n      payload: eventPayload,\n    });\n  }\n}\n\nfunction collectionViewHandler(payload: CollectionViewPayload) {\n  let eventPayload = prepareBasePageViewPayload(payload);\n\n  if (!eventPayload) return;\n\n  viewPayload = {\n    pageType: AnalyticsPageType.collection,\n    resourceId: payload.collection.id,\n  };\n  eventPayload = {\n    ...eventPayload,\n    ...viewPayload,\n    collectionHandle: payload.collection.handle,\n    collectionId: payload.collection.id,\n  };\n\n  sendShopifyAnalytics({\n    eventName: AnalyticsEventName.COLLECTION_VIEW,\n    payload: eventPayload,\n  });\n}\n\nfunction searchViewHandler(payload: SearchViewPayload) {\n  let eventPayload = prepareBasePageViewPayload(payload);\n\n  if (!eventPayload) return;\n\n  viewPayload = {\n    pageType: AnalyticsPageType.search,\n  };\n  eventPayload = {\n    ...eventPayload,\n    ...viewPayload,\n    searchString: payload.searchTerm,\n  };\n\n  sendShopifyAnalytics({\n    eventName: AnalyticsEventName.SEARCH_VIEW,\n    payload: eventPayload,\n  });\n}\n\nfunction productAddedToCartHandler(payload: CartLineUpdatePayload) {\n  const {cart, currentLine} = payload;\n  const eventPayload = prepareBaseCartPayload(payload, cart);\n\n  if (!eventPayload || !currentLine?.id) return;\n\n  sendCartAnalytics({\n    matchedLine: currentLine,\n    eventPayload,\n  });\n}\n\ntype AnalyticsProduct = {\n  id: string;\n  variantId: string;\n  title: string;\n  variantTitle: string;\n  vendor: string;\n  price: string;\n  quantity: number;\n  productType?: string;\n  sku?: Maybe<string> | undefined;\n};\n\nfunction sendCartAnalytics({\n  matchedLine,\n  eventPayload,\n}: {\n  matchedLine: CartLine | ComponentizableCartLine;\n  eventPayload: ShopifyAddToCartPayload;\n}) {\n  const product: AnalyticsProduct = {\n    id: matchedLine.merchandise.product.id,\n    variantId: matchedLine.merchandise.id,\n    title: matchedLine.merchandise.product.title,\n    variantTitle: matchedLine.merchandise.title,\n    vendor: matchedLine.merchandise.product.vendor,\n    price: matchedLine.merchandise.price.amount,\n    quantity: matchedLine.quantity,\n    productType: matchedLine.merchandise.product.productType,\n    sku: matchedLine.merchandise.sku,\n  };\n  if (\n    validateProducts({\n      type: 'cart',\n      products: [product],\n    })\n  ) {\n    sendShopifyAnalytics({\n      eventName: AnalyticsEventName.ADD_TO_CART,\n      payload: {\n        ...eventPayload,\n        products: formatProduct([product]),\n      },\n    });\n  }\n}\n\nfunction missingErrorMessage(\n  type: 'cart' | 'product',\n  fieldName: string,\n  isVariantField: boolean,\n  viewKeyName?: string,\n) {\n  if (type === 'cart') {\n    const name = `${\n      isVariantField ? 'merchandise' : 'merchandise.product'\n    }.${fieldName}`;\n    // eslint-disable-next-line no-console\n    console.error(\n      `[h2:error:ShopifyAnalytics] Can't set up cart analytics events because the \\`cart.lines[].${name}\\` value is missing from your GraphQL cart query. In your project, search for where \\`fragment CartLine on CartLine\\` is defined and make sure \\`${name}\\` is part of your cart query. Check the Hydrogen Skeleton template for reference: https://github.com/Shopify/hydrogen/blob/main/templates/skeleton/app/lib/fragments.ts#L25-L56.`,\n    );\n  } else {\n    const name = `${viewKeyName || fieldName}`;\n    // eslint-disable-next-line no-console\n    console.error(\n      `[h2:error:ShopifyAnalytics] Can't set up product view analytics events because the \\`${name}\\` is missing from your \\`<Analytics.ProductView>\\`. Make sure \\`${name}\\` is part of your products data prop. Check the Hydrogen Skeleton template for reference: https://github.com/Shopify/hydrogen/blob/main/templates/skeleton/app/routes/products.%24handle.tsx#L159-L165.`,\n    );\n  }\n}\n\n// Product expected field and types:\n// variant_id: int, optional\n// product_id: int, optional\n// product_gid: string,\n// name: string,\n// price: float,\n// sku: string, optional\n// brand: string,\n// variant: string,\n// category: string, optional\n// quantity: float\nfunction validateProducts({\n  type,\n  products,\n}: {\n  type: 'cart' | 'product';\n  products: Array<Record<string, unknown>>;\n}) {\n  if (!products || products.length === 0) {\n    missingErrorMessage(type, '', false, 'data.products');\n    return false;\n  }\n\n  products.forEach((product) => {\n    if (!product.id) {\n      missingErrorMessage(type, 'id', false);\n      return false;\n    }\n    if (!product.title) {\n      missingErrorMessage(type, 'title', false);\n      return false;\n    }\n    if (!product.price) {\n      missingErrorMessage(type, 'price.amount', true, 'price');\n      return false;\n    }\n    if (!product.vendor) {\n      missingErrorMessage(type, 'vendor', false);\n      return false;\n    }\n    if (!product.variantId) {\n      missingErrorMessage(type, 'id', true, 'variantId');\n      return false;\n    }\n    if (!product.variantTitle) {\n      missingErrorMessage(type, 'title', true, 'variantTitle');\n      return false;\n    }\n  });\n  return true;\n}\n\nfunction formatProduct(products: Array<AnalyticsProduct>) {\n  return products.map((product) => {\n    const formattedProduct = {\n      productGid: product.id,\n      variantGid: product.variantId,\n      name: product.title,\n      variantName: product.variantTitle,\n      brand: product.vendor,\n      price: product.price,\n      quantity: product.quantity || 1,\n      category: product.productType,\n    } as ShopifyAnalyticsProduct;\n\n    if (product.sku) formattedProduct.sku = product.sku;\n    if (product.productType) formattedProduct.category = product.productType;\n\n    return formattedProduct;\n  });\n}\n","export const AnalyticsEvent = {\n  // Views\n  PAGE_VIEWED: 'page_viewed' as const,\n  PRODUCT_VIEWED: 'product_viewed' as const,\n  COLLECTION_VIEWED: 'collection_viewed' as const,\n  CART_VIEWED: 'cart_viewed' as const,\n  SEARCH_VIEWED: 'search_viewed' as const,\n\n  // Cart\n  CART_UPDATED: 'cart_updated' as const,\n  PRODUCT_ADD_TO_CART: 'product_added_to_cart' as const,\n  PRODUCT_REMOVED_FROM_CART: 'product_removed_from_cart' as const,\n\n  // Custom\n  CUSTOM_EVENT: `custom_` as `custom_${string}`,\n};\n","import {useLoadScript} from '@shopify/hydrogen-react';\nimport {\n  CountryCode,\n  LanguageCode,\n} from '@shopify/hydrogen-react/storefront-api-types';\nimport {useEffect, useMemo, useRef, useState} from 'react';\n\nexport type ConsentStatus = boolean | undefined;\n\nexport type VisitorConsent = {\n  marketing: ConsentStatus;\n  analytics: ConsentStatus;\n  preferences: ConsentStatus;\n  sale_of_data: ConsentStatus;\n};\n\nexport type VisitorConsentCollected = {\n  analyticsAllowed: boolean;\n  firstPartyMarketingAllowed: boolean;\n  marketingAllowed: boolean;\n  preferencesAllowed: boolean;\n  saleOfDataAllowed: boolean;\n  thirdPartyMarketingAllowed: boolean;\n};\n\nexport type CustomerPrivacyApiLoaded = boolean;\n\nexport type CustomerPrivacyConsentConfig = {\n  checkoutRootDomain: string;\n  storefrontRootDomain?: string;\n  storefrontAccessToken: string;\n  country?: CountryCode;\n  /** The privacyBanner refers to `language` as `locale`  */\n  locale?: LanguageCode;\n};\n\nexport type SetConsentHeadlessParams = VisitorConsent &\n  CustomerPrivacyConsentConfig & {\n    headlessStorefront?: boolean;\n  };\n\n/**\n  Ideally this type should come from the Custoemr Privacy API sdk\n  analyticsProcessingAllowed -\n  currentVisitorConsent\n  doesMerchantSupportGranularConsent\n  firstPartyMarketingAllowed\n  getCCPAConsent\n  getRegulation\n  getShopPrefs\n  getTrackingConsent\n  isRegulationEnforced\n  marketingAllowed\n  preferencesProcessingAllowed\n  saleOfDataAllowed\n  saleOfDataRegion\n  setCCPAConsent\n  setTrackingConsent\n  shouldShowBanner\n  shouldShowCCPABanner\n  shouldShowGDPRBanner\n  thirdPartyMarketingAllowed\n**/\nexport type OriginalCustomerPrivacy = {\n  currentVisitorConsent: () => VisitorConsent;\n  preferencesProcessingAllowed: () => boolean;\n  saleOfDataAllowed: () => boolean;\n  marketingAllowed: () => boolean;\n  analyticsProcessingAllowed: () => boolean;\n  setTrackingConsent: (\n    consent: SetConsentHeadlessParams,\n    callback: (data: {error: string} | undefined) => void,\n  ) => void;\n};\n\nexport type CustomerPrivacy = Omit<\n  OriginalCustomerPrivacy,\n  'setTrackingConsent'\n> & {\n  setTrackingConsent: (\n    consent: VisitorConsent, // we have already applied the headlessStorefront in the override\n    callback: (data: {error: string} | undefined) => void,\n  ) => void;\n};\n\n// NOTE: options is optional because we override these method(s) with  pre-applied options\nexport type PrivacyBanner = {\n  /* Display the privacy banner */\n  loadBanner: (options?: Partial<CustomerPrivacyConsentConfig>) => void;\n  /* Display the consent preferences banner */\n  showPreferences: (options?: Partial<CustomerPrivacyConsentConfig>) => void;\n};\n\nexport interface CustomEventMap {\n  visitorConsentCollected: CustomEvent<VisitorConsentCollected>;\n  customerPrivacyApiLoaded: CustomEvent<CustomerPrivacyApiLoaded>;\n}\n\nexport type CustomerPrivacyApiProps = {\n  /** The production shop checkout domain url.  */\n  checkoutDomain: string;\n  /** The storefront access token for the shop. */\n  storefrontAccessToken: string;\n  /** Whether to load the Shopify privacy banner as configured in Shopify admin. Defaults to true. */\n  withPrivacyBanner?: boolean;\n  /** Country code for the shop. */\n  country?: CountryCode;\n  /** Language code for the shop. */\n  locale?: LanguageCode;\n  /** Callback to be called when visitor consent is collected. */\n  onVisitorConsentCollected?: (consent: VisitorConsentCollected) => void;\n  /** Callback to be call when customer privacy api is ready. */\n  onReady?: () => void;\n};\n\nexport const CONSENT_API =\n  'https://cdn.shopify.com/shopifycloud/consent-tracking-api/v0.1/consent-tracking-api.js';\nexport const CONSENT_API_WITH_BANNER =\n  'https://cdn.shopify.com/shopifycloud/privacy-banner/storefront-banner.js';\n\nfunction logMissingConfig(fieldName: string) {\n  // eslint-disable-next-line no-console\n  console.error(\n    `[h2:error:useCustomerPrivacy] Unable to setup Customer Privacy API: Missing consent.${fieldName} configuration.`,\n  );\n}\n\nexport function useCustomerPrivacy(props: CustomerPrivacyApiProps) {\n  const {\n    withPrivacyBanner = false,\n    onVisitorConsentCollected,\n    onReady,\n    ...consentConfig\n  } = props;\n\n  // Load the Shopify customer privacy API with or without the privacy banner\n  // NOTE: We no longer use the status because we need `ready` to be not when the script is loaded\n  // but instead when both `privacyBanner` (optional) and customerPrivacy are loaded in the window\n  useLoadScript(withPrivacyBanner ? CONSENT_API_WITH_BANNER : CONSENT_API, {\n    attributes: {\n      id: 'customer-privacy-api',\n    },\n  });\n\n  const {observing, setLoaded} = useApisLoaded({\n    withPrivacyBanner,\n    onLoaded: onReady,\n  });\n\n  const config = useMemo(() => {\n    const {checkoutDomain, storefrontAccessToken} = consentConfig;\n\n    if (!checkoutDomain) logMissingConfig('checkoutDomain');\n    if (!storefrontAccessToken) logMissingConfig('storefrontAccessToken');\n\n    // validate that the storefront access token is not a server API token\n    if (\n      storefrontAccessToken.startsWith('shpat_') ||\n      storefrontAccessToken.length !== 32\n    ) {\n      // eslint-disable-next-line no-console\n      console.error(\n        `[h2:error:useCustomerPrivacy] It looks like you passed a private access token, make sure to use the public token`,\n      );\n    }\n\n    const config: CustomerPrivacyConsentConfig = {\n      checkoutRootDomain: checkoutDomain,\n      storefrontAccessToken,\n      storefrontRootDomain: parseStoreDomain(checkoutDomain),\n      country: consentConfig.country,\n      locale: consentConfig.locale,\n    };\n\n    return config;\n  }, [consentConfig, parseStoreDomain, logMissingConfig]);\n\n  // settings event listeners for visitorConsentCollected\n  useEffect(() => {\n    const consentCollectedHandler = (\n      event: CustomEvent<VisitorConsentCollected>,\n    ) => {\n      if (onVisitorConsentCollected) {\n        onVisitorConsentCollected(event.detail);\n      }\n    };\n\n    document.addEventListener(\n      'visitorConsentCollected',\n      consentCollectedHandler,\n    );\n\n    return () => {\n      document.removeEventListener(\n        'visitorConsentCollected',\n        consentCollectedHandler,\n      );\n    };\n  }, [onVisitorConsentCollected]);\n\n  // monitor when the `privacyBanner` is in the window and override it's methods with config\n  // pre-applied versions\n  useEffect(() => {\n    if (!withPrivacyBanner || observing.current.privacyBanner) return;\n    observing.current.privacyBanner = true;\n\n    let customPrivacyBanner: PrivacyBanner | undefined =\n      window.privacyBanner || undefined;\n\n    const privacyBannerWatcher = {\n      configurable: true,\n      get() {\n        return customPrivacyBanner;\n      },\n      set(value: unknown) {\n        if (\n          typeof value === 'object' &&\n          value !== null &&\n          'showPreferences' in value &&\n          'loadBanner' in value\n        ) {\n          const privacyBanner = value as PrivacyBanner;\n\n          // auto load the banner if applicable\n          privacyBanner.loadBanner(config);\n\n          // overwrite the privacyBanner methods\n          customPrivacyBanner = overridePrivacyBannerMethods({\n            privacyBanner,\n            config,\n          });\n\n          // set the loaded state for the privacyBanner\n          setLoaded.privacyBanner();\n          emitCustomerPrivacyApiLoaded();\n        }\n      },\n    };\n\n    Object.defineProperty(window, 'privacyBanner', privacyBannerWatcher);\n  }, [\n    withPrivacyBanner,\n    config,\n    overridePrivacyBannerMethods,\n    setLoaded.privacyBanner,\n  ]);\n\n  // monitor when the Shopify.customerPrivacy is added to the window and override the\n  // setTracking consent method with the config pre-applied\n  useEffect(() => {\n    if (observing.current.customerPrivacy) return;\n    observing.current.customerPrivacy = true;\n\n    let customCustomerPrivacy: CustomerPrivacy | null = null;\n    let customShopify: {customerPrivacy: CustomerPrivacy} | undefined | object =\n      window.Shopify || undefined;\n\n    // monitor for when window.Shopify = {} is first set\n    Object.defineProperty(window, 'Shopify', {\n      configurable: true,\n      get() {\n        return customShopify;\n      },\n      set(value: unknown) {\n        // monitor for when window.Shopify = {} is first set\n        if (\n          typeof value === 'object' &&\n          value !== null &&\n          Object.keys(value).length === 0\n        ) {\n          customShopify = value as object;\n\n          // monitor for when window.Shopify.customerPrivacy is set\n          Object.defineProperty(window.Shopify, 'customerPrivacy', {\n            configurable: true,\n            get() {\n              return customCustomerPrivacy;\n            },\n            set(value: unknown) {\n              if (\n                typeof value === 'object' &&\n                value !== null &&\n                'setTrackingConsent' in value\n              ) {\n                const customerPrivacy = value as CustomerPrivacy;\n\n                // overwrite the tracking consent method\n                customCustomerPrivacy = {\n                  ...customerPrivacy,\n                  setTrackingConsent: overrideCustomerPrivacySetTrackingConsent(\n                    {customerPrivacy, config},\n                  ),\n                };\n\n                customShopify = {\n                  ...customShopify,\n                  customerPrivacy: customCustomerPrivacy,\n                };\n\n                setLoaded.customerPrivacy();\n                emitCustomerPrivacyApiLoaded();\n              }\n            },\n          });\n        }\n      },\n    });\n  }, [\n    config,\n    overrideCustomerPrivacySetTrackingConsent,\n    setLoaded.customerPrivacy,\n  ]);\n\n  // return the customerPrivacy and privacyBanner (optional) modified APIs\n  const result = {\n    customerPrivacy: getCustomerPrivacy(),\n  } as {\n    customerPrivacy: CustomerPrivacy | null;\n    privacyBanner?: PrivacyBanner | null;\n  };\n\n  if (withPrivacyBanner) {\n    result.privacyBanner = getPrivacyBanner();\n  }\n\n  return result;\n}\n\nlet hasEmitted = false;\nfunction emitCustomerPrivacyApiLoaded() {\n  if (hasEmitted) return;\n  hasEmitted = true;\n  const event = new CustomEvent('shopifyCustomerPrivacyApiLoaded');\n  document.dispatchEvent(event);\n}\n\nfunction useApisLoaded({\n  withPrivacyBanner,\n  onLoaded,\n}: {\n  withPrivacyBanner: boolean;\n  onLoaded?: () => void;\n}) {\n  // used to help run the watchers only once\n  const observing = useRef({customerPrivacy: false, privacyBanner: false});\n\n  // [customerPrivacy, privacyBanner]\n  const [apisLoaded, setApisLoaded] = useState(\n    withPrivacyBanner ? [false, false] : [false],\n  );\n\n  // combined loaded state for both APIs\n  const loaded = apisLoaded.every(Boolean);\n\n  const setLoaded = {\n    customerPrivacy: () => {\n      if (withPrivacyBanner) {\n        setApisLoaded((prev) => [true, prev[1]]);\n      } else {\n        setApisLoaded(() => [true]);\n      }\n    },\n    privacyBanner: () => {\n      if (!withPrivacyBanner) {\n        return;\n      }\n      setApisLoaded((prev) => [prev[0], true]);\n    },\n  };\n\n  useEffect(() => {\n    if (loaded && onLoaded) {\n      // both APIs are loaded in the window\n      onLoaded();\n    }\n  }, [loaded, onLoaded]);\n\n  return {observing, setLoaded};\n}\n\n/**\n * Extracts the root domain from the checkout domain otherwise returns the checkout domain.\n */\nfunction parseStoreDomain(checkoutDomain: string) {\n  if (typeof window === 'undefined') return;\n\n  const host = window.document.location.host;\n  const checkoutDomainParts = checkoutDomain.split('.').reverse();\n  const currentDomainParts = host.split('.').reverse();\n  const sameDomainParts: Array<string> = [];\n  checkoutDomainParts.forEach((part, index) => {\n    if (part === currentDomainParts[index]) {\n      sameDomainParts.push(part);\n    }\n  });\n\n  return sameDomainParts.reverse().join('.');\n}\n\n/**\n * Overrides the customerPrivacy.setTrackingConsent method to include the headless storefront configuration.\n */\nfunction overrideCustomerPrivacySetTrackingConsent({\n  customerPrivacy,\n  config,\n}: {\n  customerPrivacy: OriginalCustomerPrivacy;\n  config: CustomerPrivacyConsentConfig;\n}) {\n  // Override the setTrackingConsent method to include the headless storefront configuration\n  const original = customerPrivacy.setTrackingConsent;\n  const {locale, country, ...rest} = config;\n\n  function updatedSetTrackingConsent(\n    consent: VisitorConsent,\n    callback: (data: {error: string} | undefined) => void,\n  ) {\n    original(\n      {\n        ...rest,\n        headlessStorefront: true,\n        ...consent,\n      },\n      callback,\n    );\n  }\n  return updatedSetTrackingConsent;\n}\n\n/**\n * Overrides the privacyBanner methods to include the config\n */\nfunction overridePrivacyBannerMethods({\n  privacyBanner,\n  config,\n}: {\n  privacyBanner: PrivacyBanner;\n  config: CustomerPrivacyConsentConfig;\n}) {\n  const originalLoadBanner = privacyBanner.loadBanner;\n  const originalShowPreferences = privacyBanner.showPreferences;\n\n  function loadBanner(userConfig?: Partial<CustomerPrivacyConsentConfig>) {\n    if (typeof userConfig === 'object') {\n      originalLoadBanner({...config, ...userConfig});\n      return;\n    }\n    originalLoadBanner(config);\n  }\n\n  function showPreferences(userConfig?: Partial<CustomerPrivacyConsentConfig>) {\n    if (typeof userConfig === 'object') {\n      originalShowPreferences({...config, ...userConfig});\n      return;\n    }\n    originalShowPreferences(config);\n  }\n  return {loadBanner, showPreferences} as PrivacyBanner;\n}\n\n/*\n * Returns Shopify's customerPrivacy methods if loaded in the `window` object.\n * @returns CustomerPrivacy | null\n * @example\n * ```ts\n * const customerPrivacy = getCustomerPrivacy()\n *\n * if (customerPrivacy) {\n *  // get the current visitor consent\n *  const visitorConsent = customerPrivacy.currentVisitorConsent()\n *\n *  // set the tracking consent\n *  customerPrivacy.setTrackingConsent({marketing: true...}, () => {\n *    // do something after the consent is set\n *  })\n *\n *  // check if marketing is allowed\n *  const marketingAllowed = customerPrivacy.marketingAllowed()\n *  console.log(marketingAllowed)\n *\n *  // check if analytics is allowed\n *  const analyticsAllowed = customerPrivacy.analyticsProcessingAllowed()\n *  console.log(analyticsAllowed)\n *\n *  // check if preferences are allowed\n *  const preferencesAllowed = customerPrivacy.preferencesProcessingAllowed()\n *  console.log(preferencesAllowed)\n *\n *  // check if sale of data is allowed\n *  const saleOfDataAllowed = customerPrivacy.saleOfDataAllowed()\n *\n *  // check if third party marketing is allowed\n *  const thirdPartyMarketingAllowed = customerPrivacy.thirdPartyMarketingAllowed()\n *\n *  // check if first party marketing is allowed\n *  const firstPartyMarketingAllowed = customerPrivacy.firstPartyMarketingAllowed()\n *\n *  // check if the banner should be shown\n *  const shouldShowBanner = customerPrivacy.shouldShowBanner()\n *\n *  // check if the GDPR banner should be shown\n *  const shouldShowGDPRBanner = customerPrivacy.shouldShowGDPRBanner()\n *\n *  // check if the CCPA banner should be shown\n *  const shouldShowCCPABanner = customerPrivacy.shouldShowCCPABanner()\n *\n *  // check if the regulation is enforced\n *  const isRegulationEnforced = customerPrivacy.isRegulationEnforced()\n *\n *  // get the regulation\n *  const regulation = customerPrivacy.getRegulation()\n *\n *  // get the sale of data region\n *  const saleOfDataRegion = customerPrivacy.saleOfDataRegion()\n *\n *  // get the shop preferences\n *  const shopPrefs = customerPrivacy.getShopPrefs()\n *\n *  // get the tracking consent\n *  const trackingConsent = customerPrivacy.getTrackingConsent()\n *\n *  // get the CCPA consent\n *  const ccpaConsent = customerPrivacy.getCCPAConsent()\n *\n *  // check if the merchant supports granular consent\n *  const doesMerchantSupportGranularConsent = customerPrivacy.doesMerchantSupportGranularConsent()\n * }\n * ```\n */\nexport function getCustomerPrivacy() {\n  try {\n    return window.Shopify && window.Shopify.customerPrivacy\n      ? (window.Shopify?.customerPrivacy as CustomerPrivacy)\n      : null;\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Returns Shopify's privacyBanner methods if loaded in the `window` object.\n * @returns PrivacyBanner | null\n * @example\n * ```ts\n *  const privacyBanner = getPrivacyBanner()\n *\n *  if (privacyBanner) {\n *   // show the banner\n *   privacyBanner.loadBanner()\n *\n *    // show the preferences\n *    privacyBanner.showPreferences()\n *   }\n * ```\n */\nexport function getPrivacyBanner() {\n  try {\n    return window && window?.privacyBanner\n      ? (window.privacyBanner as PrivacyBanner)\n      : null;\n  } catch (e) {\n    return null;\n  }\n}\n","{\n  \"name\": \"@shopify/hydrogen\",\n  \"publishConfig\": {\n    \"access\": \"public\",\n    \"@shopify:registry\": \"https://registry.npmjs.org\"\n  },\n  \"type\": \"module\",\n  \"version\": \"2025.1.2\",\n  \"license\": \"MIT\",\n  \"main\": \"dist/index.cjs\",\n  \"module\": \"dist/production/index.js\",\n  \"types\": \"dist/production/index.d.ts\",\n  \"sideEffects\": false,\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/Shopify/hydrogen.git\",\n    \"directory\": \"packages/hydrogen\"\n  },\n  \"scripts\": {\n    \"build\": \"tsup --clean\",\n    \"dev\": \"tsup --watch ./src --watch ../../node_modules/@shopify/hydrogen-react/dist/browser-prod/index.mjs\",\n    \"typecheck\": \"tsc --noEmit\",\n    \"test\": \"vitest run\",\n    \"prepack\": \"npm run build\",\n    \"test:watch\": \"vitest\",\n    \"build-docs\": \"sh ./docs/build-docs.sh && npm run format\",\n    \"format\": \"prettier --write \\\"{src,docs}/**/*\\\" --ignore-unknown\",\n    \"preview-docs\": \"npm run dev --prefix ../../docs/preview\"\n  },\n  \"exports\": {\n    \".\": {\n      \"types\": \"./dist/production/index.d.ts\",\n      \"module\": {\n        \"development\": \"./dist/development/index.js\",\n        \"default\": \"./dist/production/index.js\"\n      },\n      \"require\": \"./dist/index.cjs\",\n      \"import\": {\n        \"development\": \"./dist/development/index.js\",\n        \"default\": \"./dist/production/index.js\"\n      },\n      \"default\": {\n        \"development\": \"./dist/development/index.js\",\n        \"default\": \"./dist/production/index.js\"\n      }\n    },\n    \"./vite\": {\n      \"types\": \"./dist/vite/plugin.d.ts\",\n      \"default\": \"./dist/vite/plugin.js\"\n    },\n    \"./storefront-api-types\": \"./dist/storefront-api-types.d.ts\",\n    \"./storefront.schema.json\": \"./dist/storefront.schema.json\",\n    \"./customer-account-api-types\": \"./dist/customer-account-api-types.d.ts\",\n    \"./customer-account.schema.json\": \"./dist/customer-account.schema.json\",\n    \"./package.json\": \"./package.json\"\n  },\n  \"typesVersions\": {\n    \"*\": {\n      \"storefront-api-types\": [\n        \"./dist/storefront-api-types.d.ts\"\n      ],\n      \"customer-account-api-types\": [\n        \"./dist/customer-account-api-types.d.ts\"\n      ]\n    }\n  },\n  \"files\": [\n    \"dist\"\n  ],\n  \"dependencies\": {\n    \"@shopify/hydrogen-react\": \"2025.1.2\",\n    \"content-security-policy-builder\": \"^2.2.0\",\n    \"isbot\": \"^5.1.21\",\n    \"source-map-support\": \"^0.5.21\",\n    \"type-fest\": \"^4.26.1\",\n    \"use-resize-observer\": \"^9.1.0\",\n    \"worktop\": \"^0.7.3\"\n  },\n  \"devDependencies\": {\n    \"@remix-run/dev\": \"^2.15.3\",\n    \"@remix-run/react\": \"^2.15.3\",\n    \"@remix-run/server-runtime\": \"^2.15.3\",\n    \"@shopify/generate-docs\": \"0.16.2\",\n    \"@shopify/hydrogen-codegen\": \"*\",\n    \"@testing-library/jest-dom\": \"^5.17.0\",\n    \"@testing-library/react\": \"^14.0.0\",\n    \"@types/source-map-support\": \"^0.5.10\",\n    \"formdata-polyfill\": \"^4.0.10\",\n    \"happy-dom\": \"^17.0.0\",\n    \"react\": \"^18.2.0\",\n    \"schema-dts\": \"^1.1.0\",\n    \"vitest\": \"^1.0.4\"\n  },\n  \"peerDependencies\": {\n    \"@remix-run/react\": \"^2.10.0\",\n    \"@remix-run/server-runtime\": \"^2.10.0\",\n    \"react\": \"^18.2.0\",\n    \"vite\": \"^5.1.0\"\n  },\n  \"peerDependenciesMeta\": {\n    \"vite\": {\n      \"optional\": true\n    }\n  }\n}\n","import {useEffect, useRef} from 'react';\nimport {\n  useAnalytics,\n  type AnalyticsProviderProps,\n  type Carts,\n} from './AnalyticsProvider';\nimport {type CartUpdatePayload} from './AnalyticsView';\nimport {flattenConnection} from '@shopify/hydrogen-react';\n\nfunction logMissingField(fieldName: string) {\n  // eslint-disable-next-line no-console\n  console.error(\n    `[h2:error:CartAnalytics] Can't set up cart analytics events because the \\`cart.${fieldName}\\` value is missing from your GraphQL cart query. In your project, search for where \\`fragment CartApiQuery on Cart\\` is defined and make sure \\`${fieldName}\\` is part of your cart query. Check the Hydrogen Skeleton template for reference: https://github.com/Shopify/hydrogen/blob/main/templates/skeleton/app/lib/fragments.ts#L59.`,\n  );\n}\n\ntype CartStorage = {\n  updatedAt: string;\n  id: string;\n};\n\nexport function CartAnalytics({\n  cart: currentCart,\n  setCarts,\n}: {\n  cart: AnalyticsProviderProps['cart'];\n  setCarts: React.Dispatch<React.SetStateAction<Carts>>;\n}) {\n  const {publish, shop, customData, canTrack, cart, prevCart} = useAnalytics();\n  const lastEventId = useRef<string | null>(null);\n\n  // resolve the cart that could have been deferred\n  useEffect(() => {\n    if (!currentCart) return;\n\n    Promise.resolve(currentCart).then((updatedCart) => {\n      if (updatedCart && updatedCart.lines) {\n        if (!updatedCart.id) {\n          logMissingField('id');\n          return;\n        }\n        if (!updatedCart.updatedAt) {\n          logMissingField('updatedAt');\n          return;\n        }\n      }\n\n      setCarts(({cart, prevCart}: Carts) => {\n        return updatedCart?.updatedAt !== cart?.updatedAt\n          ? {cart: updatedCart, prevCart: cart}\n          : {cart, prevCart};\n      });\n    });\n    return () => {};\n  }, [setCarts, currentCart]);\n\n  useEffect(() => {\n    if (!cart || !cart?.updatedAt) return;\n    if (cart?.updatedAt === prevCart?.updatedAt) return;\n\n    let cartLastUpdatedAt: CartStorage | null;\n    try {\n      cartLastUpdatedAt = JSON.parse(\n        localStorage.getItem('cartLastUpdatedAt') || '',\n      );\n    } catch (e) {\n      cartLastUpdatedAt = null;\n    }\n\n    if (\n      cart.id === cartLastUpdatedAt?.id &&\n      cart.updatedAt === cartLastUpdatedAt?.updatedAt\n    )\n      return;\n\n    const payload: CartUpdatePayload = {\n      eventTimestamp: Date.now(),\n      cart,\n      prevCart,\n      shop,\n      customData,\n    };\n\n    // prevent duplicate events\n    // TODO: add cart id check\n    if (cart.updatedAt === lastEventId.current) return;\n    lastEventId.current = cart.updatedAt;\n\n    publish('cart_updated', payload);\n\n    // We store the last cart update timestamp in localStorage to be able\n    // to detect if the cart has been updated since the last page render\n    // this prevents sending duplicate cart_updated events on first render\n    localStorage.setItem(\n      'cartLastUpdatedAt',\n      JSON.stringify({\n        id: cart.id,\n        updatedAt: cart.updatedAt,\n      }),\n    );\n\n    const previousCartLines = prevCart?.lines\n      ? flattenConnection(prevCart?.lines)\n      : [];\n    const currentCartLines = cart.lines ? flattenConnection(cart.lines) : [];\n\n    // Detect quantity changes and missing cart lines\n    previousCartLines?.forEach((prevLine) => {\n      const matchedLineId = currentCartLines.filter(\n        (line) => prevLine.id === line.id,\n      );\n      if (matchedLineId?.length === 1) {\n        const matchedLine = matchedLineId[0];\n        if (prevLine.quantity < matchedLine.quantity) {\n          publish('product_added_to_cart', {\n            ...payload,\n            prevLine,\n            currentLine: matchedLine,\n          });\n        } else if (prevLine.quantity > matchedLine.quantity) {\n          publish('product_removed_from_cart', {\n            ...payload,\n            prevLine,\n            currentLine: matchedLine,\n          });\n        }\n      } else {\n        publish('product_removed_from_cart', {\n          ...payload,\n          prevLine,\n        });\n      }\n    });\n\n    // Detect added to cart\n    currentCartLines?.forEach((line) => {\n      const matchedLineId = previousCartLines.filter(\n        (previousLine) => line.id === previousLine.id,\n      );\n      if (!matchedLineId || matchedLineId.length === 0) {\n        publish('product_added_to_cart', {\n          ...payload,\n          currentLine: line,\n        });\n      }\n    });\n  }, [cart, prevCart, publish, shop, customData, canTrack]);\n\n  return null;\n}\n","import {parseGid, useLoadScript} from '@shopify/hydrogen-react';\nimport {ShopAnalytics, useAnalytics} from './AnalyticsProvider';\nimport {AnalyticsEvent} from './events';\nimport {useEffect, useRef} from 'react';\n\ndeclare global {\n  interface Window {\n    PerfKit: {\n      navigate: () => void;\n      setPageType: (pageType: string) => void;\n    };\n  }\n}\n\n// Pin to a version that have SPA support.\nconst PERF_KIT_URL =\n  'https://cdn.shopify.com/shopifycloud/perf-kit/shopify-perf-kit-1.0.1.min.js';\n\nexport function PerfKit({shop}: {shop: ShopAnalytics}) {\n  const loadedEvent = useRef(false);\n  const {subscribe, register} = useAnalytics();\n  const {ready} = register('Internal_Shopify_Perf_Kit');\n\n  const scriptStatus = useLoadScript(PERF_KIT_URL, {\n    attributes: {\n      id: 'perfkit',\n      'data-application': 'hydrogen',\n      'data-shop-id': parseGid(shop.shopId).id.toString(),\n      'data-storefront-id': shop.hydrogenSubchannelId,\n      'data-monorail-region': 'global',\n      'data-spa-mode': 'true',\n      'data-resource-timing-sampling-rate': '100',\n    },\n  });\n\n  useEffect(() => {\n    if (scriptStatus !== 'done' || loadedEvent.current) return;\n    loadedEvent.current = true;\n\n    subscribe(AnalyticsEvent.PAGE_VIEWED, () => {\n      window.PerfKit?.navigate();\n    });\n    subscribe(AnalyticsEvent.PRODUCT_VIEWED, () => {\n      window.PerfKit?.setPageType('product');\n    });\n    subscribe(AnalyticsEvent.COLLECTION_VIEWED, () => {\n      window.PerfKit?.setPageType('collection');\n    });\n    subscribe(AnalyticsEvent.SEARCH_VIEWED, () => {\n      window.PerfKit?.setPageType('search');\n    });\n    subscribe(AnalyticsEvent.CART_VIEWED, () => {\n      window.PerfKit?.setPageType('cart');\n    });\n\n    ready();\n  }, [subscribe, ready, scriptStatus]);\n  return null;\n}\n","const warnings = new Set<string>();\nexport const warnOnce = (string: string) => {\n  if (!warnings.has(string)) {\n    console.warn(string);\n    warnings.add(string);\n  }\n};\n\nconst errors = new Set<string>();\nexport const errorOnce = (string: string) => {\n  if (!errors.has(string)) {\n    console.error(new Error(string));\n    errors.add(string);\n  }\n};\n","export type CrossRuntimeRequest = {\n  url?: string;\n  method?: string;\n  headers: {\n    get?: (key: string) => string | null | undefined;\n    [key: string]: any;\n  };\n};\n\nexport function getHeader(request: CrossRuntimeRequest, key: string) {\n  return getHeaderValue(request.headers, key);\n}\n\nexport function getHeaderValue(\n  headers: CrossRuntimeRequest['headers'],\n  key: string,\n) {\n  const value = headers?.get?.(key) ?? headers?.[key];\n  return typeof value === 'string' ? value : null;\n}\n\nexport function getDebugHeaders(request?: CrossRuntimeRequest) {\n  return {\n    requestId: request ? getHeader(request, 'request-id') : undefined,\n    purpose: request ? getHeader(request, 'purpose') : undefined,\n  };\n}\n","/**\n * Ensures that the error of an async rejected promise\n * contains the entire synchronous stack trace.\n */\nexport function withSyncStack<T>(\n  promise: Promise<T>,\n  options: {\n    stackOffset?: number;\n    logErrors?: boolean | ((error?: Error) => boolean);\n  } = {},\n): Promise<T> {\n  const syncError = new Error();\n  const getSyncStack = (message: string, name = 'Error') => {\n    // Remove error message, caller function and current function from the stack.\n    const syncStack = (syncError.stack ?? '')\n      .split('\\n')\n      .slice(3 + (options.stackOffset ?? 0))\n      .join('\\n')\n      // Sometimes stack traces show loaders with a number suffix due to ESBuild.\n      .replace(/ at loader(\\d+) \\(/, (all, m1) => all.replace(m1, ''));\n\n    return `${name}: ${message}\\n` + syncStack;\n  };\n\n  return promise\n    .then((result: any) => {\n      if (result?.errors && Array.isArray(result.errors)) {\n        const logErrors =\n          typeof options.logErrors === 'function'\n            ? options.logErrors\n            : () => options.logErrors ?? false;\n\n        result.errors.forEach((error: Error) => {\n          if (error) {\n            error.stack = getSyncStack(error.message, error.name);\n            if (logErrors(error)) console.error(error);\n          }\n        });\n      }\n\n      return result;\n    })\n    .catch((error: Error) => {\n      if (error) error.stack = getSyncStack(error.message, error.name);\n      throw error;\n    });\n}\n\nexport type StackInfo = {\n  file?: string;\n  func?: string;\n  line?: number;\n  column?: number;\n};\n\n/**\n * Finds the stack line of a caller function without using sourcemaps.\n * @param {number} stackOffset - The number of stack frames to skip.\n * @returns {StackInfo | undefined}\n */\nexport const getCallerStackLine =\n  process.env.NODE_ENV === 'development'\n    ? (stackOffset = 0) => {\n        let stackInfo: StackInfo | undefined = undefined;\n        const original = Error.prepareStackTrace;\n\n        // Accessing sourcemaps slows down execution time significantly.\n        // Overwrite the prepareStackTrace function to avoid accessing\n        // sourcemaps and just store what we need.\n        Error.prepareStackTrace = (_, callsites) => {\n          // The first callsite is `getCallerStackLine` itself.\n          // The second one is the immediate caller function (e.g. `withCache`).\n          // Skip both and find the first ancestor.\n          const cs = callsites[2 + stackOffset];\n\n          stackInfo = cs && {\n            file: cs.getFileName() ?? undefined,\n            func: cs.getFunctionName() ?? undefined,\n            line: cs.getLineNumber() ?? undefined,\n            column: cs.getColumnNumber() ?? undefined,\n          };\n\n          return '';\n        };\n\n        // Create and access stack to run the previous function\n        const err = {stack: ''};\n        Error.captureStackTrace(err);\n        err.stack;\n\n        Error.prepareStackTrace = original;\n\n        return stackInfo as StackInfo | undefined;\n      }\n    : undefined;\n","/**\n * Override options for a cache strategy.\n */\nexport interface AllCacheOptions {\n  /**\n   * The caching mode, generally `public`, `private`, or `no-store`.\n   */\n  mode?: string;\n  /**\n   * The maximum amount of time in seconds that a resource will be considered fresh. See `max-age` in the [MDN docs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control#:~:text=Response%20Directives-,max%2Dage,-The%20max%2Dage).\n   */\n  maxAge?: number;\n  /**\n   * Indicate that the cache should serve the stale response in the background while revalidating the cache. See `stale-while-revalidate` in the [MDN docs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control#stale-while-revalidate).\n   */\n  staleWhileRevalidate?: number;\n  /**\n   * Similar to `maxAge` but specific to shared caches. See `s-maxage` in the [MDN docs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control#s-maxage).\n   */\n  sMaxAge?: number;\n  /**\n   * Indicate that the cache should serve the stale response if an error occurs while revalidating the cache. See `stale-if-error` in the [MDN docs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control#stale-if-error).\n   */\n  staleIfError?: number;\n}\n\n/**\n * Use the `CachingStrategy` to define a custom caching mechanism for your data. Or use one of the pre-defined caching strategies: CacheNone, CacheShort, CacheLong.\n */\nexport type CachingStrategy = AllCacheOptions;\n\nexport type NoStoreStrategy = {\n  mode: string;\n};\n\nconst PUBLIC = 'public';\nconst PRIVATE = 'private';\nexport const NO_STORE = 'no-store';\n\nconst optionMapping: {\n  [key: string]: string;\n} = {\n  maxAge: 'max-age',\n  staleWhileRevalidate: 'stale-while-revalidate',\n  sMaxAge: 's-maxage',\n  staleIfError: 'stale-if-error',\n};\n\nexport function generateCacheControlHeader(\n  cacheOptions: CachingStrategy,\n): string {\n  const cacheControl: string[] = [];\n  Object.keys(cacheOptions).forEach((key: string) => {\n    if (key === 'mode') {\n      cacheControl.push(cacheOptions[key] as string);\n    } else if (optionMapping[key]) {\n      cacheControl.push(\n        `${optionMapping[key]}=${cacheOptions[key as keyof CachingStrategy]}`,\n      );\n    }\n  });\n  return cacheControl.join(', ');\n}\n\n/**\n *\n * @public\n */\nexport function CacheNone(): NoStoreStrategy {\n  return {\n    mode: NO_STORE,\n  };\n}\n\nfunction guardExpirableModeType(overrideOptions?: CachingStrategy) {\n  if (\n    overrideOptions?.mode &&\n    overrideOptions?.mode !== PUBLIC &&\n    overrideOptions?.mode !== PRIVATE\n  ) {\n    throw Error(\"'mode' must be either 'public' or 'private'\");\n  }\n}\n\n/**\n *\n * @public\n */\nexport function CacheShort(overrideOptions?: CachingStrategy): AllCacheOptions {\n  guardExpirableModeType(overrideOptions);\n  return {\n    mode: PUBLIC,\n    maxAge: 1,\n    staleWhileRevalidate: 9,\n    ...overrideOptions,\n  };\n}\n\n/**\n *\n * @public\n */\nexport function CacheLong(overrideOptions?: CachingStrategy): AllCacheOptions {\n  guardExpirableModeType(overrideOptions);\n  return {\n    mode: PUBLIC,\n    maxAge: 3600, // 1 hour\n    staleWhileRevalidate: 82800, // 23 Hours\n    ...overrideOptions,\n  };\n}\n\n/**\n *\n * @private\n */\nexport function CacheDefault(\n  overrideOptions?: CachingStrategy,\n): AllCacheOptions {\n  guardExpirableModeType(overrideOptions);\n  return {\n    mode: PUBLIC,\n    maxAge: 1,\n    staleWhileRevalidate: 86399, // 1 second less than 24 hours\n    ...overrideOptions,\n  };\n}\n\n/**\n *\n * @public\n */\nexport function CacheCustom(overrideOptions: CachingStrategy): AllCacheOptions {\n  return overrideOptions as AllCacheOptions;\n}\n","export function parseJSON(json: any) {\n  if (String(json).includes('__proto__')) return JSON.parse(json, noproto);\n  return JSON.parse(json);\n}\nfunction noproto(k: string, v: string) {\n  if (k !== '__proto__') return v;\n}\n","import type {CachingStrategy} from './strategies';\nimport {CacheDefault, generateCacheControlHeader} from './strategies';\n\nfunction logCacheApiStatus(\n  status: string | null,\n  request: Request,\n  response?: Response,\n) {\n  // const url = request.url;\n  // if (!/Product\\(/.test(url)) return;\n  // // eslint-disable-next-line no-console\n  // console.log(status, 'cacheKey', url.substring(0, 50));\n  // if (response) {\n  //   let headersJson: Record<string, string> = {};\n  //   response.headers.forEach((value, key) => {\n  //     headersJson[key] = value;\n  //   });\n  //   const responseDate = response.headers.get('cache-put-date');\n  //   if (responseDate) {\n  //     const [age] = calculateAge(response, responseDate);\n  //     headersJson['age'] = age.toString();\n  //   }\n  //   // eslint-disable-next-line no-console\n  //   console.log(`${status} response headers: `, headersJson);\n  // }\n}\n\nfunction getCacheControlSetting(\n  userCacheOptions?: CachingStrategy,\n  options?: CachingStrategy,\n): CachingStrategy {\n  if (userCacheOptions && options) {\n    return {\n      ...userCacheOptions,\n      ...options,\n    };\n  } else {\n    return userCacheOptions || CacheDefault();\n  }\n}\n\nfunction generateDefaultCacheControlHeader(\n  userCacheOptions?: CachingStrategy,\n): string {\n  return generateCacheControlHeader(getCacheControlSetting(userCacheOptions));\n}\n\n/**\n * Get an item from the cache. If a match is found, returns a tuple\n * containing the `JSON.parse` version of the response as well\n * as the response itself so it can be checked for staleness.\n */\nasync function getItem(\n  cache: Cache,\n  request: Request,\n): Promise<Response | undefined> {\n  if (!cache) return;\n\n  const response = await cache.match(request);\n  if (!response) {\n    logCacheApiStatus('MISS', request);\n    return;\n  }\n\n  logCacheApiStatus('HIT', request, response);\n\n  return response;\n}\n\n/**\n * Put an item into the cache.\n */\nasync function setItem(\n  cache: Cache,\n  request: Request,\n  response: Response,\n  userCacheOptions: CachingStrategy,\n) {\n  if (!cache) return;\n\n  /**\n   * We are manually managing staled request by adding this workaround.\n   * Why? cache control header support is dependent on hosting platform\n   *\n   * For example:\n   *\n   * Cloudflare's Cache API does not support `stale-while-revalidate`.\n   * Cloudflare cache control header has a very odd behaviour.\n   * Say we have the following cache control header on a request:\n   *\n   *   public, max-age=15, stale-while-revalidate=30\n   *\n   * When there is a cache.match HIT, the cache control header would become\n   *\n   *   public, max-age=14400, stale-while-revalidate=30\n   *\n   * == `stale-while-revalidate` workaround ==\n   * Update response max-age so that:\n   *\n   *   max-age = max-age + stale-while-revalidate\n   *\n   * For example:\n   *\n   *   public, max-age=1, stale-while-revalidate=9\n   *                    |\n   *                    V\n   *   public, max-age=10, stale-while-revalidate=9\n   *\n   * Store the following information in the response header:\n   *\n   *   cache-put-date   - Timestamp string of when this request is PUT into cache\n   *\n   * `isStale` function will use the above information to test for stale-ness of a cached response\n   */\n\n  const cacheControl = getCacheControlSetting(userCacheOptions);\n\n  // The padded cache-control to mimic stale-while-revalidate\n  const paddedCacheControlString = generateDefaultCacheControlHeader(\n    getCacheControlSetting(cacheControl, {\n      maxAge:\n        (cacheControl.maxAge || 0) + (cacheControl.staleWhileRevalidate || 0),\n    }),\n  );\n  // The cache-control we want to set on response\n  const cacheControlString = generateDefaultCacheControlHeader(\n    getCacheControlSetting(cacheControl),\n  );\n\n  // CF will override cache-control, so we need to keep a non-modified real-cache-control\n  // cache-control is still necessary for mini-oxygen\n  response.headers.set('cache-control', paddedCacheControlString);\n  response.headers.set('real-cache-control', cacheControlString);\n  response.headers.set('cache-put-date', String(Date.now()));\n\n  logCacheApiStatus('PUT', request, response);\n  await cache.put(request, response);\n}\n\nasync function deleteItem(cache: Cache, request: Request) {\n  if (!cache) return;\n\n  logCacheApiStatus('DELETE', request);\n  await cache.delete(request);\n}\n\nfunction calculateAge(response: Response, responseDate: string) {\n  const cacheControl = response.headers.get('real-cache-control');\n  let responseMaxAge = 0;\n\n  if (cacheControl) {\n    const maxAgeMatch = cacheControl.match(/max-age=(\\d*)/);\n    if (maxAgeMatch && maxAgeMatch.length > 1) {\n      responseMaxAge = parseFloat(maxAgeMatch[1]);\n    }\n  }\n\n  const ageInMs = Date.now() - Number(responseDate as string);\n  return [ageInMs / 1000, responseMaxAge];\n}\n\n/**\n * Manually check the response to see if it's stale.\n */\nfunction isStale(request: Request, response: Response) {\n  const responseDate = response.headers.get('cache-put-date');\n\n  if (!responseDate) {\n    return false;\n  }\n\n  const [age, responseMaxAge] = calculateAge(response, responseDate);\n  const result = age > responseMaxAge;\n\n  if (result) {\n    logCacheApiStatus('STALE', request, response);\n  }\n\n  return result;\n}\n\n/**\n *\n * @private\n */\nexport const CacheAPI = {\n  get: getItem,\n  set: setItem,\n  delete: deleteItem,\n  generateDefaultCacheControlHeader,\n  isStale,\n};\n","import {parseJSON} from '../utils/parse-json';\nimport {CacheAPI} from './api';\nimport {\n  CacheDefault,\n  type CachingStrategy,\n  type AllCacheOptions,\n} from './strategies.js';\n\n/**\n * Wrapper Cache functions for sub queries\n */\n\n/**\n * Cache API is weird. We just need a full URL, so we make one up.\n */\nexport function getKeyUrl(key: string) {\n  return `https://shopify.dev/?${key}`;\n}\n\nfunction getCacheOption(userCacheOptions?: CachingStrategy): AllCacheOptions {\n  return userCacheOptions || CacheDefault();\n}\n\nexport function generateSubRequestCacheControlHeader(\n  userCacheOptions?: CachingStrategy,\n): string {\n  return CacheAPI.generateDefaultCacheControlHeader(\n    getCacheOption(userCacheOptions),\n  );\n}\n\n/**\n * Get an item from the cache. If a match is found, returns a tuple\n * containing the `JSON.parse` version of the response as well\n * as the response itself so it can be checked for staleness.\n * @private\n */\nexport async function getItemFromCache<T = any>(\n  cache: Cache,\n  key: string,\n): Promise<undefined | [T | string, Response]> {\n  if (!cache) return;\n  const url = getKeyUrl(key);\n  const request = new Request(url);\n\n  const response = await CacheAPI.get(cache, request);\n\n  if (!response) {\n    return;\n  }\n\n  const text = await response.text();\n  try {\n    return [parseJSON(text), response];\n  } catch {\n    return [text, response];\n  }\n}\n\n/**\n * Put an item into the cache.\n * @private\n */\nexport async function setItemInCache(\n  cache: Cache,\n  key: string,\n  value: any,\n  userCacheOptions?: CachingStrategy,\n) {\n  if (!cache) return;\n\n  const url = getKeyUrl(key);\n  const request = new Request(url);\n  const response = new Response(JSON.stringify(value));\n\n  await CacheAPI.set(\n    cache,\n    request,\n    response,\n    getCacheOption(userCacheOptions),\n  );\n}\n\n/**\n *\n * @private\n */\nexport async function deleteItemFromCache(cache: Cache, key: string) {\n  if (!cache) return;\n\n  const url = getKeyUrl(key);\n  const request = new Request(url);\n\n  await CacheAPI.delete(cache, request);\n}\n\n/**\n * Manually check the response to see if it's stale.\n * @private\n */\nexport function isStale(key: string, response: Response) {\n  return CacheAPI.isStale(new Request(getKeyUrl(key)), response);\n}\n","type QueryKey = string | readonly unknown[];\n\nexport function hashKey(queryKey: QueryKey): string {\n  const rawKeys = Array.isArray(queryKey) ? queryKey : [queryKey];\n  let hash = '';\n\n  // Keys could be in the following shape:\n  //\n  // From `storefront.query`:\n  // ['api-endpoint', 'method', 'headers', 'query']\n  //\n  // From `createWithCache`:\n  // ['string', {}, 1, []]\n  for (const key of rawKeys) {\n    if (key != null) {\n      if (typeof key === 'object') {\n        hash += JSON.stringify(key);\n      } else {\n        hash += key.toString();\n      }\n    }\n  }\n\n  return encodeURIComponent(hash);\n}\n","import {\n  NO_STORE,\n  CacheShort,\n  generateCacheControlHeader,\n  type CachingStrategy,\n} from './strategies';\nimport {\n  getItemFromCache,\n  getKeyUrl,\n  isStale,\n  setItemInCache,\n} from './sub-request';\nimport {type StackInfo} from '../utils/callsites';\nimport {hashKey} from '../utils/hash';\nimport type {WaitUntil} from '../types';\n\n/**\n * The cache key is used to uniquely identify a value in the cache.\n */\nexport type CacheKey = string | readonly unknown[];\n\nexport type DebugOptions = {\n  url?: string;\n  requestId?: string | null;\n  graphql?: string | null;\n  purpose?: string | null;\n  stackInfo?: StackInfo;\n  displayName?: string;\n};\n\ntype CachedDebugInfo = {\n  displayName?: string;\n  url?: string;\n  responseInit?: {\n    status: number;\n    statusText: string;\n    headers?: [string, string][];\n  };\n};\n\nexport type AddDebugDataParam = {\n  displayName?: string;\n  response?: Pick<Response, 'url' | 'status' | 'statusText' | 'headers'>;\n};\n\nexport type CacheActionFunctionParam = {\n  addDebugData: (info: AddDebugDataParam) => void;\n};\n\ntype WithCacheOptions<T = unknown> = {\n  strategy?: CachingStrategy | null;\n  cacheInstance?: Cache;\n  shouldCacheResult: (value: T) => boolean;\n  waitUntil?: WaitUntil;\n  debugInfo?: DebugOptions;\n};\n\n// Lock to prevent revalidating the same sub-request\n// in the same isolate. Note that different isolates\n// in the same colo could duplicate the revalidation\n// since this is only an in-memory lock.\n// https://github.com/Shopify/oxygen-platform/issues/625\nconst swrLock = new Set<string>();\n\n/**\n * Implementation of withCache.\n * @private\n */\nexport async function runWithCache<T = unknown>(\n  cacheKey: CacheKey,\n  actionFn: ({addDebugData}: CacheActionFunctionParam) => T | Promise<T>,\n  {\n    strategy = CacheShort(),\n    cacheInstance,\n    shouldCacheResult = () => true,\n    waitUntil,\n    debugInfo,\n  }: WithCacheOptions<T>,\n): Promise<T> {\n  const startTime = Date.now();\n  const key = hashKey([\n    // '__HYDROGEN_CACHE_ID__', // TODO purgeQueryCacheOnBuild\n    ...(typeof cacheKey === 'string' ? [cacheKey] : cacheKey),\n  ]);\n\n  let cachedDebugInfo: CachedDebugInfo | undefined;\n  let userDebugInfo: CachedDebugInfo | undefined;\n\n  const addDebugData = (info: AddDebugDataParam) => {\n    userDebugInfo = {\n      displayName: info.displayName,\n      url: info.response?.url,\n      responseInit: {\n        status: info.response?.status || 0,\n        statusText: info.response?.statusText || '',\n        headers: Array.from(info.response?.headers.entries() || []),\n      },\n    };\n  };\n\n  const mergeDebugInfo = () => ({\n    ...cachedDebugInfo,\n    ...debugInfo,\n    url:\n      userDebugInfo?.url ||\n      debugInfo?.url ||\n      cachedDebugInfo?.url ||\n      getKeyUrl(key),\n    displayName:\n      debugInfo?.displayName ||\n      userDebugInfo?.displayName ||\n      cachedDebugInfo?.displayName,\n  });\n\n  const logSubRequestEvent =\n    process.env.NODE_ENV === 'development'\n      ? ({\n          result,\n          cacheStatus,\n          overrideStartTime,\n        }: {\n          result?: any;\n          cacheStatus?: 'MISS' | 'HIT' | 'STALE' | 'PUT';\n          overrideStartTime?: number;\n        }) => {\n          globalThis.__H2O_LOG_EVENT?.({\n            ...mergeDebugInfo(),\n            eventType: 'subrequest',\n            startTime: overrideStartTime || startTime,\n            endTime: Date.now(),\n            cacheStatus,\n            responsePayload: (result && result[0]) || result,\n            responseInit: (result && result[1]) || userDebugInfo?.responseInit,\n            cache: {\n              status: cacheStatus,\n              strategy: generateCacheControlHeader(strategy || {}),\n              key,\n            },\n            waitUntil,\n          });\n        }\n      : undefined;\n\n  if (!cacheInstance || !strategy || strategy.mode === NO_STORE) {\n    const result = await actionFn({addDebugData});\n    // Log non-cached requests\n    logSubRequestEvent?.({result});\n    return result;\n  }\n\n  type CachedItem = {\n    value: Awaited<T>;\n    debugInfo?: CachedDebugInfo;\n  };\n\n  const storeInCache = (value: CachedItem['value']) =>\n    setItemInCache(\n      cacheInstance,\n      key,\n      {\n        value,\n        debugInfo:\n          process.env.NODE_ENV === 'development' ? mergeDebugInfo() : undefined,\n      } satisfies CachedItem,\n      strategy,\n    );\n\n  const cachedItem = await getItemFromCache<CachedItem>(cacheInstance, key);\n  // console.log('--- Cache', cachedItem ? 'HIT' : 'MISS');\n\n  if (cachedItem && typeof cachedItem[0] !== 'string') {\n    const [{value: cachedResult, debugInfo}, cacheInfo] = cachedItem;\n    cachedDebugInfo = debugInfo;\n\n    const cacheStatus = isStale(key, cacheInfo) ? 'STALE' : 'HIT';\n\n    if (!swrLock.has(key) && cacheStatus === 'STALE') {\n      swrLock.add(key);\n\n      // Important: Run revalidation asynchronously.\n      const revalidatingPromise = Promise.resolve().then(async () => {\n        const revalidateStartTime = Date.now();\n        try {\n          const result = await actionFn({addDebugData});\n\n          if (shouldCacheResult(result)) {\n            await storeInCache(result);\n\n            // Log PUT requests with the revalidate start time\n            logSubRequestEvent?.({\n              result,\n              cacheStatus: 'PUT',\n              overrideStartTime: revalidateStartTime,\n            });\n          }\n        } catch (error: any) {\n          if (error.message) {\n            error.message = 'SWR in sub-request failed: ' + error.message;\n          }\n\n          console.error(error);\n        } finally {\n          swrLock.delete(key);\n        }\n      });\n\n      // Asynchronously wait for it in workers\n      waitUntil?.(revalidatingPromise);\n    }\n\n    // Log HIT/STALE requests\n    logSubRequestEvent?.({\n      result: cachedResult,\n      cacheStatus,\n    });\n\n    return cachedResult;\n  }\n\n  const result = await actionFn({addDebugData});\n\n  // Log MISS requests\n  logSubRequestEvent?.({\n    result,\n    cacheStatus: 'MISS',\n  });\n\n  /**\n   * Important: Do this async\n   */\n  if (shouldCacheResult(result)) {\n    const cacheStoringPromise = Promise.resolve().then(async () => {\n      const putStartTime = Date.now();\n      await storeInCache(result);\n      logSubRequestEvent?.({\n        result,\n        cacheStatus: 'PUT',\n        overrideStartTime: putStartTime,\n      });\n    });\n\n    waitUntil?.(cacheStoringPromise);\n  }\n\n  return result;\n}\n","import {CacheShort, CachingStrategy} from './strategies.js';\nimport {\n  type CacheKey,\n  runWithCache,\n  type DebugOptions,\n} from './run-with-cache.js';\nimport type {WaitUntil} from '../types.js';\nimport {parseJSON} from '../utils/parse-json.js';\n\nexport type FetchCacheOptions<T = any> = {\n  cache?: CachingStrategy;\n  cacheInstance?: Cache;\n  cacheKey?: CacheKey;\n  shouldCacheResponse: (body: T, response: Response) => boolean;\n  waitUntil?: WaitUntil;\n  debugInfo?: DebugOptions;\n};\n\ntype SerializableResponse = [any, ResponseInit];\n\nfunction toSerializableResponse(\n  body: any,\n  response: Response,\n): SerializableResponse {\n  return [\n    body,\n    {\n      status: response.status,\n      statusText: response.statusText,\n      headers: Array.from(response.headers.entries()),\n    },\n  ];\n}\n\nfunction fromSerializableResponse([body, init]: SerializableResponse) {\n  return [body, new Response(body, init)] as const;\n}\n\n/**\n * `fetch` equivalent that stores responses in cache.\n * Useful for calling third-party APIs that need to be cached.\n * @private\n */\nexport async function fetchWithServerCache<T = unknown>(\n  url: string,\n  requestInit: Request | RequestInit,\n  {\n    cacheInstance,\n    cache: cacheOptions,\n    cacheKey = [url, requestInit],\n    shouldCacheResponse,\n    waitUntil,\n    debugInfo,\n  }: FetchCacheOptions,\n): Promise<readonly [T, Response]> {\n  if (!cacheOptions && (!requestInit.method || requestInit.method === 'GET')) {\n    cacheOptions = CacheShort();\n  }\n\n  return runWithCache(\n    cacheKey,\n    async () => {\n      const response = await fetch(url, requestInit);\n      if (!response.ok) {\n        // Skip caching and consuming the response body\n        return response;\n      }\n\n      let data: any = await response.text().catch(() => '');\n\n      try {\n        if (data) data = parseJSON(data);\n      } catch {}\n\n      return toSerializableResponse(data, response);\n    },\n    {\n      cacheInstance,\n      waitUntil,\n      strategy: cacheOptions ?? null,\n      debugInfo,\n      shouldCacheResult: (payload) => {\n        return 'ok' in payload\n          ? false\n          : shouldCacheResponse(...fromSerializableResponse(payload));\n      },\n    },\n  ).then((payload) => {\n    return 'ok' in payload\n      ? ([null, payload] as const)\n      : fromSerializableResponse(payload);\n  });\n}\n","import {type CachingStrategy} from './strategies';\nimport {type CrossRuntimeRequest, getDebugHeaders} from '../utils/request';\nimport {getCallerStackLine} from '../utils/callsites';\nimport {\n  CacheActionFunctionParam,\n  CacheKey,\n  runWithCache,\n} from './run-with-cache';\nimport {fetchWithServerCache} from './server-fetch';\nimport type {WaitUntil} from '../types';\n\ntype CreateWithCacheOptions = {\n  /** An instance that implements the [Cache API](https://developer.mozilla.org/en-US/docs/Web/API/Cache) */\n  cache: Cache;\n  /** The `waitUntil` function is used to keep the current request/response lifecycle alive even after a response has been sent. It should be provided by your platform. */\n  waitUntil: WaitUntil;\n  /** The `request` object is used by the Subrequest profiler, and to access certain headers for debugging */\n  request: CrossRuntimeRequest;\n};\n\ntype WithCacheRunOptions<T> = {\n  /** The cache key for this run */\n  cacheKey: CacheKey;\n  /**\n   * Use the `CachingStrategy` to define a custom caching mechanism for your data.\n   * Or use one of the pre-defined caching strategies: [`CacheNone`](/docs/api/hydrogen/utilities/cachenone), [`CacheShort`](/docs/api/hydrogen/utilities/cacheshort), [`CacheLong`](/docs/api/hydrogen/utilities/cachelong).\n   */\n  cacheStrategy: CachingStrategy;\n  /** Useful to avoid accidentally caching bad results */\n  shouldCacheResult: (value: T) => boolean;\n};\n\ntype WithCacheFetchOptions<T> = {\n  displayName?: string;\n  /**\n   * Use the `CachingStrategy` to define a custom caching mechanism for your data.\n   * Or use one of the pre-defined caching strategies: [`CacheNone`](/docs/api/hydrogen/utilities/cachenone), [`CacheShort`](/docs/api/hydrogen/utilities/cacheshort), [`CacheLong`](/docs/api/hydrogen/utilities/cachelong).\n   */\n  cacheStrategy?: CachingStrategy;\n  /** The cache key for this fetch */\n  cacheKey?: CacheKey;\n  /** Useful to avoid e.g. caching a successful response that contains an error in the body */\n  shouldCacheResponse: (body: T, response: Response) => boolean;\n};\n\nexport type WithCache = {\n  run: <T>(\n    options: WithCacheRunOptions<T>,\n    fn: ({addDebugData}: CacheActionFunctionParam) => T | Promise<T>,\n  ) => Promise<T>;\n  fetch: <T>(\n    url: string,\n    requestInit: RequestInit,\n    options: WithCacheFetchOptions<T>,\n  ) => Promise<{data: T | null; response: Response}>;\n};\n\nexport function createWithCache(\n  cacheOptions: CreateWithCacheOptions,\n): WithCache {\n  const {cache, waitUntil, request} = cacheOptions;\n\n  return {\n    run: <T>(\n      {cacheKey, cacheStrategy, shouldCacheResult}: WithCacheRunOptions<T>,\n      fn: ({addDebugData}: CacheActionFunctionParam) => T | Promise<T>,\n    ): Promise<T> => {\n      return runWithCache(cacheKey, fn, {\n        shouldCacheResult,\n        strategy: cacheStrategy,\n        cacheInstance: cache,\n        waitUntil,\n        debugInfo: {\n          ...getDebugHeaders(request),\n          stackInfo: getCallerStackLine?.(),\n        },\n      });\n    },\n\n    fetch: <T>(\n      url: string,\n      requestInit: RequestInit,\n      options: WithCacheFetchOptions<T>,\n    ): Promise<{data: T | null; response: Response}> => {\n      return fetchWithServerCache<T | null>(url, requestInit ?? {}, {\n        waitUntil,\n        cacheKey: [url, requestInit],\n        cacheInstance: cache,\n        debugInfo: {\n          url,\n          ...getDebugHeaders(request),\n          stackInfo: getCallerStackLine?.(),\n          displayName: options?.displayName,\n        },\n        cache: options.cacheStrategy,\n        ...options,\n      }).then(([data, response]) => ({data, response}));\n    },\n  };\n}\n","type CacheMatch = {\n  body: Uint8Array;\n  timestamp: number;\n  status: number;\n  headers: [string, string][];\n};\n\n/**\n * This is a limited implementation of an in-memory cache.\n * It only supports the `cache-control` header.\n * It does NOT support `age` or `expires` headers.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Cache\n */\nexport class InMemoryCache implements Cache {\n  #store: Map<string, CacheMatch>;\n\n  constructor() {\n    this.#store = new Map();\n  }\n\n  add(request: RequestInfo): Promise<void> {\n    throw new Error('Method not implemented. Use `put` instead.');\n  }\n\n  addAll(requests: RequestInfo[]): Promise<void> {\n    throw new Error('Method not implemented. Use `put` instead.');\n  }\n\n  matchAll(\n    request?: RequestInfo,\n    options?: CacheQueryOptions,\n  ): Promise<readonly Response[]> {\n    throw new Error('Method not implemented. Use `match` instead.');\n  }\n\n  async put(request: Request, response: Response) {\n    if (request.method !== 'GET') {\n      throw new TypeError('Cannot cache response to non-GET request.');\n    }\n\n    if (response.status === 206) {\n      throw new TypeError(\n        'Cannot cache response to a range request (206 Partial Content).',\n      );\n    }\n\n    if (response.headers.get('vary')?.includes('*')) {\n      throw new TypeError(\"Cannot cache response with 'Vary: *' header.\");\n    }\n\n    this.#store.set(request.url, {\n      body: new Uint8Array(await response.arrayBuffer()),\n      status: response.status,\n      headers: [...response.headers],\n      timestamp: Date.now(),\n    });\n  }\n\n  async match(request: Request) {\n    if (request.method !== 'GET') return;\n\n    const match = this.#store.get(request.url);\n\n    if (!match) {\n      return;\n    }\n\n    const {body, timestamp, ...metadata} = match;\n\n    const headers = new Headers(metadata.headers);\n    const cacheControl =\n      headers.get('cache-control') || headers.get('real-cache-control') || '';\n    const maxAge = parseInt(\n      cacheControl.match(/max-age=(\\d+)/)?.[1] || '0',\n      10,\n    );\n    const swr = parseInt(\n      cacheControl.match(/stale-while-revalidate=(\\d+)/)?.[1] || '0',\n      10,\n    );\n    const age = (Date.now() - timestamp) / 1000;\n\n    const isMiss = age > maxAge + swr;\n\n    if (isMiss) {\n      this.#store.delete(request.url);\n      return;\n    }\n\n    const isStale = age > maxAge;\n\n    headers.set('cache', isStale ? 'STALE' : 'HIT');\n    headers.set('date', new Date(timestamp).toUTCString());\n\n    return new Response(body, {\n      status: metadata.status ?? 200,\n      headers,\n    });\n  }\n\n  async delete(request: Request) {\n    if (this.#store.has(request.url)) {\n      this.#store.delete(request.url);\n      return true;\n    }\n    return false;\n  }\n\n  keys(request?: Request) {\n    const cacheKeys = [] as Request[];\n\n    for (const url of this.#store.keys()) {\n      if (!request || request.url === url) {\n        cacheKeys.push(new Request(url));\n      }\n    }\n\n    return Promise.resolve(cacheKeys);\n  }\n}\n","import {type FetcherWithComponents, useFetcher} from '@remix-run/react';\nimport {type MetafieldWithoutOwnerId} from './queries/cart-types';\nimport type {ReactNode} from 'react';\nimport type {\n  AttributeInput,\n  CartBuyerIdentityInput,\n  CartInput,\n  CartLineInput,\n  CartLineUpdateInput,\n  CartSelectedDeliveryOptionInput,\n  Scalars,\n} from '@shopify/hydrogen-react/storefront-api-types';\n\ntype OtherFormData = {\n  [key: string]: unknown;\n};\n\ntype CartAttributesUpdateProps = {\n  action: 'AttributesUpdateInput';\n  inputs?: {\n    attributes: AttributeInput[];\n  } & OtherFormData;\n};\ntype CartAttributesUpdateRequire = {\n  action: 'AttributesUpdateInput';\n  inputs: {\n    attributes: AttributeInput[];\n  } & OtherFormData;\n};\n\ntype CartBuyerIdentityUpdateProps = {\n  action: 'BuyerIdentityUpdate';\n  inputs?: {\n    buyerIdentity: CartBuyerIdentityInput;\n  } & OtherFormData;\n};\ntype CartBuyerIdentityUpdateRequire = {\n  action: 'BuyerIdentityUpdate';\n  inputs: {\n    buyerIdentity: CartBuyerIdentityInput;\n  } & OtherFormData;\n};\n\ntype CartCreateProps = {\n  action: 'Create';\n  inputs?: {\n    input: CartInput;\n  } & OtherFormData;\n};\ntype CartCreateRequire = {\n  action: 'Create';\n  inputs: {\n    input: CartInput;\n  } & OtherFormData;\n};\ntype CartDiscountCodesUpdateProps = {\n  action: 'DiscountCodesUpdate';\n  inputs?: {\n    discountCodes: string[];\n  } & OtherFormData;\n};\ntype CartDiscountCodesUpdateRequire = {\n  action: 'DiscountCodesUpdate';\n  inputs: {\n    discountCodes: string[];\n  } & OtherFormData;\n};\ntype CartGiftCardCodesUpdateProps = {\n  action: 'GiftCardCodesUpdate';\n  inputs?: {\n    giftCardCodes: string[];\n  } & OtherFormData;\n};\ntype CartGiftCardCodesUpdateRequire = {\n  action: 'GiftCardCodesUpdate';\n  inputs: {\n    giftCardCodes: string[];\n  } & OtherFormData;\n};\n\nexport type OptimisticCartLineInput = CartLineInput & {\n  selectedVariant?: unknown;\n};\n\ntype CartLinesAddProps = {\n  action: 'LinesAdd';\n  inputs?: {\n    lines: Array<OptimisticCartLineInput>;\n  } & OtherFormData;\n};\n\ntype CartLinesAddRequire = {\n  action: 'LinesAdd';\n  inputs: {\n    lines: Array<OptimisticCartLineInput>;\n  } & OtherFormData;\n};\n\ntype CartLinesUpdateProps = {\n  action: 'LinesUpdate';\n  inputs?: {\n    lines: CartLineUpdateInput[];\n  } & OtherFormData;\n};\ntype CartLinesUpdateRequire = {\n  action: 'LinesUpdate';\n  inputs: {\n    lines: CartLineUpdateInput[];\n  } & OtherFormData;\n};\n\ntype CartLinesRemoveProps = {\n  action: 'LinesRemove';\n  inputs?: {\n    lineIds: string[];\n  } & OtherFormData;\n};\ntype CartLinesRemoveRequire = {\n  action: 'LinesRemove';\n  inputs: {\n    lineIds: string[];\n  } & OtherFormData;\n};\n\ntype CartNoteUpdateProps = {\n  action: 'NoteUpdate';\n  inputs?: {\n    note: string;\n  } & OtherFormData;\n};\ntype CartNoteUpdateRequire = {\n  action: 'NoteUpdate';\n  inputs: {\n    note: string;\n  } & OtherFormData;\n};\n\ntype CartSelectedDeliveryOptionsUpdateProps = {\n  action: 'SelectedDeliveryOptionsUpdate';\n  inputs?: {\n    selectedDeliveryOptions: CartSelectedDeliveryOptionInput[];\n  } & OtherFormData;\n};\n\ntype CartSelectedDeliveryOptionsUpdateRequire = {\n  action: 'SelectedDeliveryOptionsUpdate';\n  inputs: {\n    selectedDeliveryOptions: CartSelectedDeliveryOptionInput[];\n  } & OtherFormData;\n};\n\ntype CartMetafieldsSetProps = {\n  action: 'MetafieldsSet';\n  inputs?: {\n    metafields: MetafieldWithoutOwnerId[];\n  } & OtherFormData;\n};\ntype CartMetafieldsSetRequire = {\n  action: 'MetafieldsSet';\n  inputs: {\n    metafields: MetafieldWithoutOwnerId[];\n  } & OtherFormData;\n};\n\ntype CartMetafieldDeleteProps = {\n  action: 'MetafieldsDelete';\n  inputs?: {\n    key: Scalars['String']['input'];\n  } & OtherFormData;\n};\ntype CartMetafieldDeleteRequire = {\n  action: 'MetafieldsDelete';\n  inputs: {\n    key: Scalars['String']['input'];\n  } & OtherFormData;\n};\n\ntype CartCustomProps = {\n  action: `Custom${string}`;\n  inputs?: Record<string, unknown>;\n};\ntype CartCustomRequire = {\n  action: `Custom${string}`;\n  inputs: Record<string, unknown>;\n};\n\ntype CartFormCommonProps = {\n  /**\n   * Children nodes of CartForm.\n   * Children can be a render prop that receives the fetcher.\n   */\n  children: ReactNode | ((fetcher: FetcherWithComponents<any>) => ReactNode);\n  /**\n   * The route to submit the form to. Defaults to the current route.\n   */\n  route?: string;\n  /**\n   * Optional key to use for the fetcher.\n   * @see https://remix.run/hooks/use-fetcher#key\n   */\n  fetcherKey?: string;\n};\n\ntype CartActionInputProps =\n  | CartAttributesUpdateProps\n  | CartBuyerIdentityUpdateProps\n  | CartCreateProps\n  | CartDiscountCodesUpdateProps\n  | CartGiftCardCodesUpdateProps\n  | CartLinesAddProps\n  | CartLinesUpdateProps\n  | CartLinesRemoveProps\n  | CartNoteUpdateProps\n  | CartSelectedDeliveryOptionsUpdateProps\n  | CartMetafieldsSetProps\n  | CartMetafieldDeleteProps\n  | CartCustomProps;\n\nexport type CartActionInput =\n  | CartAttributesUpdateRequire\n  | CartBuyerIdentityUpdateRequire\n  | CartCreateRequire\n  | CartDiscountCodesUpdateRequire\n  | CartGiftCardCodesUpdateRequire\n  | CartLinesAddRequire\n  | CartLinesUpdateRequire\n  | CartLinesRemoveRequire\n  | CartNoteUpdateRequire\n  | CartSelectedDeliveryOptionsUpdateRequire\n  | CartMetafieldsSetRequire\n  | CartMetafieldDeleteRequire\n  | CartCustomRequire;\n\ntype CartFormProps = CartActionInputProps & CartFormCommonProps;\n\nconst INPUT_NAME = 'cartFormInput';\n\nexport function CartForm({\n  children,\n  action,\n  inputs,\n  route,\n  fetcherKey,\n}: CartFormProps): JSX.Element {\n  const fetcher = useFetcher({key: fetcherKey});\n\n  return (\n    <fetcher.Form action={route || ''} method=\"post\">\n      {(action || inputs) && (\n        <input\n          type=\"hidden\"\n          name={INPUT_NAME}\n          value={JSON.stringify({action, inputs})}\n        />\n      )}\n      {typeof children === 'function' ? children(fetcher) : children}\n    </fetcher.Form>\n  );\n}\nCartForm.INPUT_NAME = INPUT_NAME;\nCartForm.ACTIONS = {\n  AttributesUpdateInput: 'AttributesUpdateInput',\n  BuyerIdentityUpdate: 'BuyerIdentityUpdate',\n  Create: 'Create',\n  DiscountCodesUpdate: 'DiscountCodesUpdate',\n  GiftCardCodesUpdate: 'GiftCardCodesUpdate',\n  LinesAdd: 'LinesAdd',\n  LinesRemove: 'LinesRemove',\n  LinesUpdate: 'LinesUpdate',\n  NoteUpdate: 'NoteUpdate',\n  SelectedDeliveryOptionsUpdate: 'SelectedDeliveryOptionsUpdate',\n  MetafieldsSet: 'MetafieldsSet',\n  MetafieldDelete: 'MetafieldDelete',\n} as const;\n\nfunction getFormInput(formData: FormData): CartActionInput {\n  // Get all form data\n  const data: Record<string, unknown> = {};\n  for (const pair of formData.entries()) {\n    const key = pair[0];\n    const values = formData.getAll(key);\n\n    data[key] = values.length > 1 ? values : pair[1];\n  }\n\n  // Parse cartFormInput\n  const {cartFormInput, ...otherData} = data;\n  const {action, inputs}: CartActionInput = cartFormInput\n    ? JSON.parse(String(cartFormInput))\n    : {};\n\n  return {\n    action,\n    inputs: {\n      ...inputs,\n      ...otherData,\n    },\n  } as unknown as CartActionInput;\n}\n\nCartForm.getFormInput = getFormInput;\n","import {parse} from 'worktop/cookie';\nimport {type CrossRuntimeRequest, getHeaderValue} from '../utils/request';\n\nexport const cartGetIdDefault = (\n  requestHeaders: CrossRuntimeRequest['headers'],\n) => {\n  const cookies = parse(getHeaderValue(requestHeaders, 'Cookie') || '');\n  return () => {\n    return cookies.cart ? `gid://shopify/Cart/${cookies.cart}` : undefined;\n  };\n};\n","import {stringify} from 'worktop/cookie';\n\nexport type CookieOptions = {\n  maxage?: number;\n  expires?: Date | number | string;\n  samesite?: 'Lax' | 'Strict' | 'None';\n  secure?: boolean;\n  httponly?: boolean;\n  domain?: string;\n  path?: string;\n};\n\nexport const cartSetIdDefault = (cookieOptions?: CookieOptions) => {\n  return (cartId: string) => {\n    const headers = new Headers();\n    headers.append(\n      'Set-Cookie',\n      stringify('cart', cartId.split('/').pop() || '', {\n        path: '/',\n        ...cookieOptions,\n      }),\n    );\n    return headers;\n  };\n};\n","import {\n  createStorefrontClient as createStorefrontUtilities,\n  getShopifyCookies,\n  SHOPIFY_S,\n  SHOPIFY_Y,\n  SHOPIFY_STOREFRONT_ID_HEADER,\n  SHOPIFY_STOREFRONT_Y_HEADER,\n  SHOPIFY_STOREFRONT_S_HEADER,\n  type StorefrontClientProps,\n} from '@shopify/hydrogen-react';\nimport type {WritableDeep} from 'type-fest';\nimport {fetchWithServerCache} from './cache/server-fetch';\nimport {\n  SDK_VARIANT_HEADER,\n  SDK_VARIANT_SOURCE_HEADER,\n  SDK_VERSION_HEADER,\n  STOREFRONT_ACCESS_TOKEN_HEADER,\n  STOREFRONT_REQUEST_GROUP_ID_HEADER,\n} from './constants';\nimport {\n  CacheNone,\n  CacheLong,\n  CacheShort,\n  CacheDefault,\n  CacheCustom,\n  generateCacheControlHeader,\n  type CachingStrategy,\n} from './cache/strategies';\nimport {generateUUID} from './utils/uuid';\nimport {parseJSON} from './utils/parse-json';\nimport {\n  CountryCode,\n  LanguageCode,\n} from '@shopify/hydrogen-react/storefront-api-types';\nimport type {\n  ClientReturn,\n  ClientVariablesInRestParams,\n  GenericVariables,\n} from '@shopify/hydrogen-codegen';\nimport {warnOnce} from './utils/warning';\nimport {LIB_VERSION} from './version';\nimport {\n  minifyQuery,\n  assertQuery,\n  assertMutation,\n  throwErrorWithGqlLink,\n  GraphQLError,\n  type GraphQLApiResponse,\n  type GraphQLErrorOptions,\n} from './utils/graphql';\nimport {\n  getCallerStackLine,\n  withSyncStack,\n  type StackInfo,\n} from './utils/callsites';\nimport type {WaitUntil, StorefrontHeaders} from './types';\n\nexport type I18nBase = {\n  language: LanguageCode;\n  country: CountryCode;\n};\n\n// When passing GraphQLError through Remix' `json` or `defer`,\n// the class instance is lost and it becomes a plain JSON object.\n// Therefore, we need make TS think this is a plain object instead of\n// a class to make it work in server and client.\n// Also, Remix' `Jsonify` type is broken and can't infer types of classes properly.\ntype JsonGraphQLError = ReturnType<GraphQLError['toJSON']>; // Equivalent to `Jsonify<GraphQLError>[]`\nexport type StorefrontApiErrors = JsonGraphQLError[] | undefined;\n\ntype StorefrontError = {\n  errors?: StorefrontApiErrors;\n};\n\n/**\n * Wraps all the returned utilities from `createStorefrontClient`.\n */\nexport type StorefrontClient<TI18n extends I18nBase> = {\n  storefront: Storefront<TI18n>;\n};\n\n/**\n * Maps all the queries found in the project to variables and return types.\n */\nexport interface StorefrontQueries {\n  // Example of how a generated query type looks like:\n  // '#graphql query q1 {...}': {return: Q1Query; variables: Q1QueryVariables};\n}\n\n/**\n * Maps all the mutations found in the project to variables and return types.\n */\nexport interface StorefrontMutations {\n  // Example of how a generated mutation type looks like:\n  // '#graphql mutation m1 {...}': {return: M1Mutation; variables: M1MutationVariables};\n}\n\n// These are the variables that are automatically added to the storefront API.\n// We use this type to make parameters optional in storefront client\n// when these are the only variables that can be passed.\ntype AutoAddedVariableNames = 'country' | 'language';\n\ntype StorefrontCommonExtraParams = {\n  headers?: HeadersInit;\n  storefrontApiVersion?: string;\n  displayName?: string;\n};\n\n/**\n * Interface to interact with the Storefront API.\n */\nexport type Storefront<TI18n extends I18nBase = I18nBase> = {\n  query: <\n    OverrideReturnType extends any = never,\n    RawGqlString extends string = string,\n  >(\n    query: RawGqlString,\n    ...options: ClientVariablesInRestParams<\n      StorefrontQueries,\n      RawGqlString,\n      StorefrontCommonExtraParams & Pick<StorefrontQueryOptions, 'cache'>,\n      AutoAddedVariableNames\n    >\n  ) => Promise<\n    ClientReturn<StorefrontQueries, RawGqlString, OverrideReturnType> &\n      StorefrontError\n  >;\n  mutate: <\n    OverrideReturnType extends any = never,\n    RawGqlString extends string = string,\n  >(\n    mutation: RawGqlString,\n    ...options: ClientVariablesInRestParams<\n      StorefrontMutations,\n      RawGqlString,\n      StorefrontCommonExtraParams,\n      AutoAddedVariableNames\n    >\n  ) => Promise<\n    ClientReturn<StorefrontMutations, RawGqlString, OverrideReturnType> &\n      StorefrontError\n  >;\n  cache?: Cache;\n  CacheNone: typeof CacheNone;\n  CacheLong: typeof CacheLong;\n  CacheShort: typeof CacheShort;\n  CacheCustom: typeof CacheCustom;\n  generateCacheControlHeader: typeof generateCacheControlHeader;\n  getPublicTokenHeaders: ReturnType<\n    typeof createStorefrontUtilities\n  >['getPublicTokenHeaders'];\n  getPrivateTokenHeaders: ReturnType<\n    typeof createStorefrontUtilities\n  >['getPrivateTokenHeaders'];\n  getShopifyDomain: ReturnType<\n    typeof createStorefrontUtilities\n  >['getShopifyDomain'];\n  getApiUrl: ReturnType<\n    typeof createStorefrontUtilities\n  >['getStorefrontApiUrl'];\n  i18n: TI18n;\n};\n\ntype HydrogenClientProps<TI18n> = {\n  /** Storefront API headers. If on Oxygen, use `getStorefrontHeaders()` */\n  storefrontHeaders?: StorefrontHeaders;\n  /** An instance that implements the [Cache API](https://developer.mozilla.org/en-US/docs/Web/API/Cache) */\n  cache?: Cache;\n  /** The globally unique identifier for the Shop */\n  storefrontId?: string;\n  /** The `waitUntil` function is used to keep the current request/response lifecycle alive even after a response has been sent. It should be provided by your platform. */\n  waitUntil?: WaitUntil;\n  /** An object containing a country code and language code */\n  i18n?: TI18n;\n  /** Whether it should print GraphQL errors automatically. Defaults to true */\n  logErrors?: boolean | ((error?: Error) => boolean);\n};\n\nexport type CreateStorefrontClientOptions<TI18n extends I18nBase> =\n  HydrogenClientProps<TI18n> & StorefrontClientProps;\n\ntype StorefrontQueryOptions = StorefrontCommonExtraParams & {\n  query: string;\n  mutation?: never;\n  cache?: CachingStrategy;\n};\n\ntype StorefrontMutationOptions = StorefrontCommonExtraParams & {\n  query?: never;\n  mutation: string;\n  cache?: never;\n};\n\nconst defaultI18n: I18nBase = {language: 'EN', country: 'US'};\n\n/**\n *  This function extends `createStorefrontClient` from [Hydrogen React](/docs/api/hydrogen-react/2025-01/utilities/createstorefrontclient). The additional arguments enable internationalization (i18n), caching, and other features particular to Remix and Oxygen.\n *\n *  Learn more about [data fetching in Hydrogen](/docs/custom-storefronts/hydrogen/data-fetching/fetch-data).\n */\nexport function createStorefrontClient<TI18n extends I18nBase>(\n  options: CreateStorefrontClientOptions<TI18n>,\n): StorefrontClient<TI18n> {\n  const {\n    storefrontHeaders,\n    cache,\n    waitUntil,\n    i18n,\n    storefrontId,\n    logErrors = true,\n    ...clientOptions\n  } = options;\n  const H2_PREFIX_WARN = '[h2:warn:createStorefrontClient] ';\n\n  if (process.env.NODE_ENV === 'development' && !cache) {\n    warnOnce(\n      H2_PREFIX_WARN +\n        'Storefront API client created without a cache instance. This may slow down your sub-requests.',\n    );\n  }\n\n  const {\n    getPublicTokenHeaders,\n    getPrivateTokenHeaders,\n    getStorefrontApiUrl,\n    getShopifyDomain,\n  } = createStorefrontUtilities(clientOptions);\n\n  const getHeaders = clientOptions.privateStorefrontToken\n    ? getPrivateTokenHeaders\n    : getPublicTokenHeaders;\n\n  const defaultHeaders = getHeaders({\n    contentType: 'json',\n    buyerIp: storefrontHeaders?.buyerIp || '',\n  });\n\n  defaultHeaders[STOREFRONT_REQUEST_GROUP_ID_HEADER] =\n    storefrontHeaders?.requestGroupId || generateUUID();\n\n  if (storefrontId) defaultHeaders[SHOPIFY_STOREFRONT_ID_HEADER] = storefrontId;\n  if (LIB_VERSION) defaultHeaders['user-agent'] = `Hydrogen ${LIB_VERSION}`;\n\n  if (storefrontHeaders && storefrontHeaders.cookie) {\n    const cookies = getShopifyCookies(storefrontHeaders.cookie ?? '');\n\n    if (cookies[SHOPIFY_Y])\n      defaultHeaders[SHOPIFY_STOREFRONT_Y_HEADER] = cookies[SHOPIFY_Y];\n    if (cookies[SHOPIFY_S])\n      defaultHeaders[SHOPIFY_STOREFRONT_S_HEADER] = cookies[SHOPIFY_S];\n  }\n\n  // Remove any headers that are identifiable to the user or request\n  const cacheKeyHeader = JSON.stringify({\n    'content-type': defaultHeaders['content-type'],\n    'user-agent': defaultHeaders['user-agent'],\n    [SDK_VARIANT_HEADER]: defaultHeaders[SDK_VARIANT_HEADER],\n    [SDK_VARIANT_SOURCE_HEADER]: defaultHeaders[SDK_VARIANT_SOURCE_HEADER],\n    [SDK_VERSION_HEADER]: defaultHeaders[SDK_VERSION_HEADER],\n    [STOREFRONT_ACCESS_TOKEN_HEADER]:\n      defaultHeaders[STOREFRONT_ACCESS_TOKEN_HEADER],\n  });\n\n  async function fetchStorefrontApi<T = any>({\n    query,\n    mutation,\n    variables,\n    cache: cacheOptions,\n    headers = [],\n    storefrontApiVersion,\n    displayName,\n    stackInfo,\n  }: {variables?: GenericVariables; stackInfo?: StackInfo} & (\n    | StorefrontQueryOptions\n    | StorefrontMutationOptions\n  )): Promise<T & StorefrontError> {\n    const userHeaders =\n      headers instanceof Headers\n        ? Object.fromEntries(headers.entries())\n        : Array.isArray(headers)\n        ? Object.fromEntries(headers)\n        : headers;\n\n    const document = query ?? mutation;\n    const queryVariables = {...variables};\n\n    if (i18n) {\n      if (!variables?.country && /\\$country/.test(document)) {\n        queryVariables.country = i18n.country;\n      }\n\n      if (!variables?.language && /\\$language/.test(document)) {\n        queryVariables.language = i18n.language;\n      }\n    }\n\n    const url = getStorefrontApiUrl({storefrontApiVersion});\n    const graphqlData = JSON.stringify({\n      query: document,\n      variables: queryVariables,\n    });\n    const requestInit = {\n      method: 'POST',\n      headers: {...defaultHeaders, ...userHeaders},\n      body: graphqlData,\n    } satisfies RequestInit;\n\n    const cacheKey = [\n      url,\n      requestInit.method,\n      cacheKeyHeader,\n      requestInit.body,\n    ];\n\n    const [body, response] = await fetchWithServerCache(url, requestInit, {\n      cacheInstance: mutation ? undefined : cache,\n      cache: cacheOptions || CacheDefault(),\n      cacheKey,\n      waitUntil,\n      // Check if the response body has GraphQL errors:\n      // https://spec.graphql.org/June2018/#sec-Response-Format\n      shouldCacheResponse: (body: any) => !body?.errors,\n      // Optional information for the subrequest profiler:\n      debugInfo: {\n        requestId: requestInit.headers[STOREFRONT_REQUEST_GROUP_ID_HEADER],\n        displayName,\n        url,\n        stackInfo,\n        graphql: graphqlData,\n        purpose: storefrontHeaders?.purpose,\n      },\n    });\n\n    const errorOptions: GraphQLErrorOptions<T> = {\n      url,\n      response,\n      type: mutation ? 'mutation' : 'query',\n      query: document,\n      queryVariables,\n      errors: undefined,\n    };\n\n    if (!response.ok) {\n      /**\n       * The Storefront API might return a string error, or a JSON-formatted {error: string}.\n       * We try both and conform them to a single {errors} format.\n       */\n      let errors;\n      let bodyText = body;\n      try {\n        bodyText ??= await response.text();\n        errors = parseJSON(bodyText);\n      } catch (_e) {\n        errors = [\n          {message: bodyText ?? 'Could not parse Storefront API response'},\n        ];\n      }\n\n      throwErrorWithGqlLink({...errorOptions, errors});\n    }\n\n    const {data, errors} = body as GraphQLApiResponse<T>;\n\n    const gqlErrors = errors?.map(\n      ({message, ...rest}) =>\n        new GraphQLError(message, {\n          ...(rest as WritableDeep<typeof rest>),\n          clientOperation: `storefront.${errorOptions.type}`,\n          requestId: response.headers.get('x-request-id'),\n          queryVariables,\n          query: document,\n        }),\n    );\n\n    return formatAPIResult(data, gqlErrors);\n  }\n\n  return {\n    storefront: {\n      /**\n       * Sends a GraphQL query to the Storefront API.\n       *\n       * Example:\n       *\n       * ```js\n       * async function loader ({context: {storefront}}) {\n       *   const data = await storefront.query('query { ... }', {\n       *     variables: {},\n       *     cache: storefront.CacheLong()\n       *   });\n       * }\n       * ```\n       */\n      query(query, options?) {\n        query = minifyQuery(query);\n        assertQuery(query, 'storefront.query');\n\n        const stackOffset = getStackOffset?.(query);\n\n        return withSyncStack(\n          fetchStorefrontApi({\n            ...options,\n            query,\n            stackInfo: getCallerStackLine?.(stackOffset),\n          }),\n          {stackOffset, logErrors},\n        );\n      },\n      /**\n       * Sends a GraphQL mutation to the Storefront API.\n       *\n       * Example:\n       *\n       * ```js\n       * async function loader ({context: {storefront}}) {\n       *   await storefront.mutate('mutation { ... }', {\n       *     variables: {},\n       *   });\n       * }\n       * ```\n       */\n      mutate(mutation, options?) {\n        mutation = minifyQuery(mutation);\n        assertMutation(mutation, 'storefront.mutate');\n\n        const stackOffset = getStackOffset?.(mutation);\n\n        return withSyncStack(\n          fetchStorefrontApi({\n            ...options,\n            mutation,\n            stackInfo: getCallerStackLine?.(stackOffset),\n          }),\n          {stackOffset, logErrors},\n        );\n      },\n      cache,\n      CacheNone,\n      CacheLong,\n      CacheShort,\n      CacheCustom,\n      generateCacheControlHeader,\n      getPublicTokenHeaders,\n      getPrivateTokenHeaders,\n      getShopifyDomain,\n      getApiUrl: getStorefrontApiUrl,\n      i18n: (i18n ?? defaultI18n) as TI18n,\n    },\n  };\n}\n\nconst getStackOffset =\n  process.env.NODE_ENV === 'development'\n    ? (query: string) => {\n        let stackOffset = 0;\n        if (/fragment CartApi(Query|Mutation) on Cart/.test(query)) {\n          // The cart handler is wrapping storefront.query/mutate,\n          // so we need to go up one more stack frame to show\n          // the caller in /subrequest-profiler\n          stackOffset = 1;\n        }\n\n        return stackOffset;\n      }\n    : undefined;\n\nexport function formatAPIResult<T>(\n  data: T,\n  errors: StorefrontApiErrors,\n): T & StorefrontError {\n  return {\n    ...data,\n    ...(errors && {errors}),\n  };\n}\n\nexport type CreateStorefrontClientForDocs<TI18n extends I18nBase> = {\n  storefront?: StorefrontForDoc<TI18n>;\n};\n\nexport type StorefrontForDoc<TI18n extends I18nBase = I18nBase> = {\n  /** The function to run a query on Storefront API. */\n  query?: <TData = any>(\n    query: string,\n    options: StorefrontQueryOptionsForDocs,\n  ) => Promise<TData & StorefrontError>;\n  /** The function to run a mutation on Storefront API. */\n  mutate?: <TData = any>(\n    mutation: string,\n    options: StorefrontMutationOptionsForDocs,\n  ) => Promise<TData & StorefrontError>;\n  /** The cache instance passed in from the `createStorefrontClient` argument. */\n  cache?: Cache;\n  /** Re-export of [`CacheNone`](/docs/api/hydrogen/2025-01/utilities/cachenone). */\n  CacheNone?: typeof CacheNone;\n  /** Re-export of [`CacheLong`](/docs/api/hydrogen/2025-01/utilities/cachelong). */\n  CacheLong?: typeof CacheLong;\n  /** Re-export of [`CacheShort`](/docs/api/hydrogen/2025-01/utilities/cacheshort). */\n  CacheShort?: typeof CacheShort;\n  /** Re-export of [`CacheCustom`](/docs/api/hydrogen/2025-01/utilities/cachecustom). */\n  CacheCustom?: typeof CacheCustom;\n  /** Re-export of [`generateCacheControlHeader`](/docs/api/hydrogen/2025-01/utilities/generatecachecontrolheader). */\n  generateCacheControlHeader?: typeof generateCacheControlHeader;\n  /** Returns an object that contains headers that are needed for each query to Storefront API GraphQL endpoint. See [`getPublicTokenHeaders` in Hydrogen React](/docs/api/hydrogen-react/2025-01/utilities/createstorefrontclient#:~:text=%27graphql%27.-,getPublicTokenHeaders,-(props%3F%3A) for more details. */\n  getPublicTokenHeaders?: ReturnType<\n    typeof createStorefrontUtilities\n  >['getPublicTokenHeaders'];\n  /** Returns an object that contains headers that are needed for each query to Storefront API GraphQL endpoint for API calls made from a server. See [`getPrivateTokenHeaders` in  Hydrogen React](/docs/api/hydrogen-react/2025-01/utilities/createstorefrontclient#:~:text=storefrontApiVersion-,getPrivateTokenHeaders,-(props%3F%3A) for more details.*/\n  getPrivateTokenHeaders?: ReturnType<\n    typeof createStorefrontUtilities\n  >['getPrivateTokenHeaders'];\n  /** Creates the fully-qualified URL to your myshopify.com domain. See [`getShopifyDomain` in  Hydrogen React](/docs/api/hydrogen-react/2025-01/utilities/createstorefrontclient#:~:text=StorefrontClientReturn-,getShopifyDomain,-(props%3F%3A) for more details. */\n  getShopifyDomain?: ReturnType<\n    typeof createStorefrontUtilities\n  >['getShopifyDomain'];\n  /** Creates the fully-qualified URL to your store's GraphQL endpoint. See [`getStorefrontApiUrl` in  Hydrogen React](/docs/api/hydrogen-react/2025-01/utilities/createstorefrontclient#:~:text=storeDomain-,getStorefrontApiUrl,-(props%3F%3A) for more details.*/\n  getApiUrl?: ReturnType<\n    typeof createStorefrontUtilities\n  >['getStorefrontApiUrl'];\n  /** The `i18n` object passed in from the `createStorefrontClient` argument. */\n  i18n?: TI18n;\n};\n\nexport type StorefrontQueryOptionsForDocs = {\n  /** The variables for the GraphQL query statement. */\n  variables?: Record<string, unknown>;\n  /** The cache strategy for this query. Default to max-age=1, stale-while-revalidate=86399. */\n  cache?: CachingStrategy;\n  /** Additional headers for this query. */\n  headers?: HeadersInit;\n  /** Override the Storefront API version for this query. */\n  storefrontApiVersion?: string;\n  /** The name of the query for debugging in the Subrequest Profiler. */\n  displayName?: string;\n};\n\nexport type StorefrontMutationOptionsForDocs = {\n  /** The variables for the GraphQL mutation statement. */\n  variables?: Record<string, unknown>;\n  /** Additional headers for this query. */\n  headers?: HeadersInit;\n  /** Override the Storefront API version for this query. */\n  storefrontApiVersion?: string;\n  /** The name of the query for debugging in the Subrequest Profiler. */\n  displayName?: string;\n};\n","export const STOREFRONT_REQUEST_GROUP_ID_HEADER =\n  'Custom-Storefront-Request-Group-ID';\nexport const STOREFRONT_ACCESS_TOKEN_HEADER =\n  'X-Shopify-Storefront-Access-Token';\nexport const SDK_VARIANT_HEADER = 'X-SDK-Variant';\nexport const SDK_VARIANT_SOURCE_HEADER = 'X-SDK-Variant-Source';\nexport const SDK_VERSION_HEADER = 'X-SDK-Version';\n","/*\n * Generate a UUID using crypto and fallback to Math.random if crypto is not available.\n */\nexport function generateUUID() {\n  if (typeof crypto !== 'undefined' && !!crypto.randomUUID) {\n    return crypto.randomUUID();\n  } else {\n    return `weak-${Math.random().toString(16).substring(2)}`;\n  }\n}\n","export const LIB_VERSION = '2025.1.2';\n","import type {StorefrontApiResponseOk} from '@shopify/hydrogen-react';\nimport type {GenericVariables} from '@shopify/hydrogen-codegen';\n\nexport function extractQueryName(query: string) {\n  return query.match(/(query|mutation)\\s+([^({]*)/)?.[0]?.trim();\n}\n\nexport function minifyQuery<T extends string>(string: T) {\n  return string\n    .replace(/\\s*#.*$/gm, '') // Remove GQL comments\n    .replace(/\\s+/gm, ' ') // Minify spaces\n    .trim() as T;\n}\n\nconst IS_QUERY_RE = /(^|}\\s)query[\\s({]/im;\nconst IS_MUTATION_RE = /(^|}\\s)mutation[\\s({]/im;\n\nexport function assertQuery(query: string, callerName: string) {\n  if (!IS_QUERY_RE.test(query)) {\n    throw new Error(`[h2:error:${callerName}] Can only execute queries`);\n  }\n}\n\nexport function assertMutation(query: string, callerName: string) {\n  if (!IS_MUTATION_RE.test(query)) {\n    throw new Error(`[h2:error:${callerName}] Can only execute mutations`);\n  }\n}\n\nexport type GraphQLApiResponse<T> = StorefrontApiResponseOk<T>;\n\nexport type GraphQLErrorOptions<T> = {\n  url: string;\n  response: Response;\n  errors: GraphQLApiResponse<T>['errors'];\n  type: 'query' | 'mutation';\n  query: string;\n  queryVariables: GenericVariables;\n  ErrorConstructor?: ErrorConstructor;\n  client?: string;\n};\n\n// Reference: https://github.com/graphql/graphql-js/blob/main/src/error/GraphQLError.ts#L218-L242\nexport class GraphQLError extends Error {\n  /**\n   * If an error can be associated to a particular point in the requested\n   * GraphQL document, it should contain a list of locations.\n   */\n  locations?: Array<{line: number; column: number}>;\n  /**\n   * If an error can be associated to a particular field in the GraphQL result,\n   * it _must_ contain an entry with the key `path` that details the path of\n   * the response field which experienced the error. This allows clients to\n   * identify whether a null result is intentional or caused by a runtime error.\n   */\n  path?: Array<string | number>;\n  /**\n   * Reserved for implementors to extend the protocol however they see fit,\n   * and hence there are no additional restrictions on its contents.\n   */\n  extensions?: {[key: string]: unknown};\n\n  constructor(\n    message?: string,\n    options: Pick<\n      GraphQLError,\n      'locations' | 'path' | 'extensions' | 'stack' | 'cause'\n    > & {\n      query?: string;\n      queryVariables?: GenericVariables;\n      requestId?: string | null;\n      clientOperation?: string;\n    } = {},\n  ) {\n    const h2Prefix = options.clientOperation\n      ? `[h2:error:${options.clientOperation}] `\n      : '';\n\n    const enhancedMessage =\n      h2Prefix +\n      message +\n      (options.requestId ? ` - Request ID: ${options.requestId}` : '');\n\n    super(enhancedMessage);\n    this.name = 'GraphQLError';\n    this.extensions = options.extensions;\n    this.locations = options.locations;\n    this.path = options.path;\n    this.stack = options.stack || undefined;\n\n    try {\n      this.cause = JSON.stringify({\n        ...(typeof options.cause === 'object' ? options.cause : {}),\n        requestId: options.requestId,\n        ...(process.env.NODE_ENV === 'development' && {\n          path: options.path,\n          extensions: options.extensions,\n          graphql: h2Prefix &&\n            options.query && {\n              query: options.query,\n              variables: JSON.stringify(options.queryVariables),\n            },\n        }),\n      });\n    } catch {\n      if (options.cause) this.cause = options.cause;\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return this.name;\n  }\n\n  /**\n   * Note: `toString()` is internally used by `console.log(...)` / `console.error(...)`\n   * when ingesting logs in Oxygen production. Therefore, we want to make sure that\n   * the error message is as informative as possible instead of `[object Object]`.\n   */\n  override toString() {\n    let result = `${this.name}: ${this.message}`;\n\n    if (this.path) {\n      try {\n        result += ` | path: ${JSON.stringify(this.path)}`;\n      } catch {}\n    }\n\n    if (this.extensions) {\n      try {\n        result += ` | extensions: ${JSON.stringify(this.extensions)}`;\n      } catch {}\n    }\n\n    result += '\\n';\n\n    if (this.stack) {\n      // Remove the message line from the stack.\n      result += `${this.stack.slice(this.stack.indexOf('\\n') + 1)}\\n`;\n    }\n\n    return result;\n  }\n\n  /**\n   * Note: toJSON` is internally used by `JSON.stringify(...)`.\n   * The most common scenario when this error instance is going to be stringified is\n   * when it's passed to Remix' `json` and `defer` functions: e.g. `{promise: storefront.query(...)}`.\n   * In this situation, we don't want to expose private error information to the browser so we only\n   * do it in development.\n   */\n  toJSON() {\n    const formatted: Pick<\n      GraphQLError,\n      'name' | 'message' | 'path' | 'extensions' | 'locations' | 'stack'\n    > = {name: 'Error', message: ''};\n\n    if (process.env.NODE_ENV === 'development') {\n      formatted.name = this.name;\n      formatted.message = 'Development: ' + this.message;\n      if (this.path) formatted.path = this.path;\n      if (this.locations) formatted.locations = this.locations;\n      if (this.extensions) formatted.extensions = this.extensions;\n      // Skip stack on purpose because we don't want to expose it to the browser.\n    }\n\n    return formatted;\n  }\n}\n\nexport function throwErrorWithGqlLink<T>({\n  url,\n  response,\n  errors,\n  type,\n  query,\n  queryVariables,\n  ErrorConstructor = Error,\n  client = 'storefront',\n}: GraphQLErrorOptions<T>): never {\n  const errorMessage =\n    (typeof errors === 'string'\n      ? errors\n      : errors?.map?.((error) => error.message).join('\\n')) ||\n    `URL: ${url}\\nAPI response error: ${response.status}`;\n\n  const gqlError = new GraphQLError(errorMessage, {\n    query,\n    queryVariables,\n    cause: {errors},\n    clientOperation: `${client}.${type}`,\n    requestId: response.headers.get('x-request-id'),\n  });\n\n  throw new ErrorConstructor(gqlError.message, {cause: gqlError.cause});\n}\n","import {formatAPIResult} from '../../storefront';\nimport type {CustomerAccount} from '../../customer/types';\nimport type {CartQueryOptions, CartReturn} from './cart-types';\nimport type {\n  Cart,\n  CountryCode,\n  LanguageCode,\n} from '@shopify/hydrogen-react/storefront-api-types';\n\ntype CartGetProps = {\n  /**\n   * The cart ID.\n   * @default cart.getCartId();\n   */\n  cartId?: string;\n  /**\n   * The country code.\n   * @default storefront.i18n.country\n   */\n  country?: CountryCode;\n  /**\n   * The language code.\n   * @default storefront.i18n.language\n   */\n  language?: LanguageCode;\n  /**\n   * The number of cart lines to be returned.\n   * @default 100\n   */\n  numCartLines?: number;\n};\n\nexport type CartGetFunction = (\n  cartInput?: CartGetProps,\n) => Promise<CartReturn | null>;\n\ntype CartGetOptions = CartQueryOptions & {\n  /**\n   * The customer account client instance created by [`createCustomerAccountClient`](docs/api/hydrogen/latest/utilities/createcustomeraccountclient).\n   */\n  customerAccount?: CustomerAccount;\n};\n\nexport function cartGetDefault({\n  storefront,\n  customerAccount,\n  getCartId,\n  cartFragment,\n}: CartGetOptions): CartGetFunction {\n  return async (cartInput?: CartGetProps) => {\n    const cartId = getCartId();\n\n    if (!cartId) return null;\n\n    const [isCustomerLoggedIn, {cart, errors}] = await Promise.all([\n      customerAccount ? customerAccount.isLoggedIn() : false,\n      storefront.query<{cart: Cart | null}>(CART_QUERY(cartFragment), {\n        variables: {cartId, ...cartInput},\n        cache: storefront.CacheNone(),\n      }),\n    ]);\n\n    if (isCustomerLoggedIn && cart?.checkoutUrl) {\n      const finalCheckoutUrl = new URL(cart.checkoutUrl);\n      finalCheckoutUrl.searchParams.set('logged_in', 'true');\n      cart.checkoutUrl = finalCheckoutUrl.toString();\n    }\n\n    return cart || errors ? formatAPIResult(cart, errors) : null;\n  };\n}\n\n//! @see https://shopify.dev/docs/api/storefront/latest/queries/cart\nconst CART_QUERY = (cartFragment = DEFAULT_CART_FRAGMENT) => `#graphql\n  query CartQuery(\n    $cartId: ID!\n    $numCartLines: Int = 100\n    $country: CountryCode = ZZ\n    $language: LanguageCode\n  ) @inContext(country: $country, language: $language) {\n    cart(id: $cartId) {\n      ...CartApiQuery\n    }\n  }\n\n  ${cartFragment}\n`;\n\nexport const DEFAULT_CART_FRAGMENT = `#graphql\n  fragment CartApiQuery on Cart {\n    updatedAt\n    id\n    checkoutUrl\n    totalQuantity\n    buyerIdentity {\n      countryCode\n      customer {\n        id\n        email\n        firstName\n        lastName\n        displayName\n      }\n      email\n      phone\n    }\n    lines(first: $numCartLines) {\n      edges {\n        node {\n          id\n          quantity\n          attributes {\n            key\n            value\n          }\n          cost {\n            totalAmount {\n              amount\n              currencyCode\n            }\n            amountPerQuantity {\n              amount\n              currencyCode\n            }\n            compareAtAmountPerQuantity {\n              amount\n              currencyCode\n            }\n          }\n          merchandise {\n            ... on ProductVariant {\n              id\n              availableForSale\n              compareAtPrice {\n                ...CartApiMoney\n              }\n              price {\n                ...CartApiMoney\n              }\n              requiresShipping\n              title\n              image {\n                ...CartApiImage\n              }\n              product {\n                handle\n                title\n                id\n                vendor\n              }\n              selectedOptions {\n                name\n                value\n              }\n            }\n          }\n        }\n      }\n    }\n    cost {\n      subtotalAmount {\n        ...CartApiMoney\n      }\n      totalAmount {\n        ...CartApiMoney\n      }\n      totalDutyAmount {\n        ...CartApiMoney\n      }\n      totalTaxAmount {\n        ...CartApiMoney\n      }\n    }\n    note\n    attributes {\n      key\n      value\n    }\n    discountCodes {\n      applicable\n      code\n    }\n  }\n\n  fragment CartApiMoney on MoneyV2 {\n    currencyCode\n    amount\n  }\n\n  fragment CartApiImage on Image {\n    id\n    url\n    altText\n    width\n    height\n  }\n`;\n","export const USER_ERROR_FRAGMENT = `#graphql\n  fragment CartApiError on CartUserError {\n    message\n    field\n    code\n  }\n`;\n\nexport const MINIMAL_CART_FRAGMENT = `#graphql\n  fragment CartApiMutation on Cart {\n    id\n    totalQuantity\n    checkoutUrl\n  }\n`;\n\nexport const CART_WARNING_FRAGMENT = `#graphql\n  fragment CartApiWarning on CartWarning {\n    code\n    message\n    target\n  }\n`;\n","import {StorefrontApiErrors, formatAPIResult} from '../../storefront';\nimport {\n  CART_WARNING_FRAGMENT,\n  MINIMAL_CART_FRAGMENT,\n  USER_ERROR_FRAGMENT,\n} from './cart-fragments';\nimport type {\n  CartQueryData,\n  CartQueryOptions,\n  CartOptionalInput,\n  CartQueryDataReturn,\n} from './cart-types';\nimport type {CartInput} from '@shopify/hydrogen-react/storefront-api-types';\n\nexport type CartCreateFunction = (\n  input: CartInput,\n  optionalParams?: CartOptionalInput,\n) => Promise<CartQueryDataReturn>;\n\nexport function cartCreateDefault(\n  options: CartQueryOptions,\n): CartCreateFunction {\n  return async (input, optionalParams) => {\n    const buyer = options.customerAccount\n      ? await options.customerAccount.getBuyer()\n      : undefined;\n    const {cartId, ...restOfOptionalParams} = optionalParams || {};\n    const {buyerIdentity, ...restOfInput} = input;\n    const {cartCreate, errors} = await options.storefront.mutate<{\n      cartCreate: CartQueryData;\n      errors: StorefrontApiErrors;\n    }>(CART_CREATE_MUTATION(options.cartFragment), {\n      variables: {\n        input: {\n          ...restOfInput,\n          buyerIdentity: {\n            ...buyer,\n            ...buyerIdentity,\n          },\n        },\n        ...restOfOptionalParams,\n      },\n    });\n    return formatAPIResult(cartCreate, errors);\n  };\n}\n\n//! @see: https://shopify.dev/docs/api/storefront/latest/mutations/cartCreate\nexport const CART_CREATE_MUTATION = (\n  cartFragment = MINIMAL_CART_FRAGMENT,\n) => `#graphql\n  mutation cartCreate(\n    $input: CartInput!\n    $country: CountryCode = ZZ\n    $language: LanguageCode\n  ) @inContext(country: $country, language: $language) {\n    cartCreate(input: $input) {\n      cart {\n        ...CartApiMutation\n        checkoutUrl\n      }\n      userErrors {\n        ...CartApiError\n      }\n      warnings {\n        ...CartApiWarning\n      }\n    }\n  }\n  ${cartFragment}\n  ${USER_ERROR_FRAGMENT}\n  ${CART_WARNING_FRAGMENT}\n`;\n","import type {CartLineInput} from '@shopify/hydrogen-react/storefront-api-types';\nimport {StorefrontApiErrors, formatAPIResult} from '../../storefront';\nimport {\n  CART_WARNING_FRAGMENT,\n  MINIMAL_CART_FRAGMENT,\n  USER_ERROR_FRAGMENT,\n} from './cart-fragments';\nimport type {\n  CartOptionalInput,\n  CartQueryData,\n  CartQueryDataReturn,\n  CartQueryOptions,\n} from './cart-types';\n\nexport type CartLinesAddFunction = (\n  lines: Array<CartLineInput>,\n  optionalParams?: CartOptionalInput,\n) => Promise<CartQueryDataReturn>;\n\nexport function cartLinesAddDefault(\n  options: CartQueryOptions,\n): CartLinesAddFunction {\n  return async (lines, optionalParams) => {\n    const {cartLinesAdd, errors} = await options.storefront.mutate<{\n      cartLinesAdd: CartQueryData;\n      errors: StorefrontApiErrors;\n    }>(CART_LINES_ADD_MUTATION(options.cartFragment), {\n      variables: {\n        cartId: options.getCartId(),\n        lines,\n        ...optionalParams,\n      },\n    });\n\n    return formatAPIResult(cartLinesAdd, errors);\n  };\n}\n\n//! @see: https://shopify.dev/docs/api/storefront/latest/mutations/cartLinesAdd\nexport const CART_LINES_ADD_MUTATION = (\n  cartFragment = MINIMAL_CART_FRAGMENT,\n) => `#graphql\n  mutation cartLinesAdd(\n    $cartId: ID!\n    $lines: [CartLineInput!]!\n    $country: CountryCode = ZZ\n    $language: LanguageCode\n  ) @inContext(country: $country, language: $language) {\n    cartLinesAdd(cartId: $cartId, lines: $lines) {\n      cart {\n        ...CartApiMutation\n      }\n      userErrors {\n        ...CartApiError\n      }\n      warnings {\n        ...CartApiWarning\n      }\n    }\n  }\n  ${cartFragment}\n  ${USER_ERROR_FRAGMENT}\n  ${CART_WARNING_FRAGMENT}\n`;\n","import type {CartLineUpdateInput} from '@shopify/hydrogen-react/storefront-api-types';\n\nconst PENDING_PREFIX = '__h_pending_';\n\nexport function getOptimisticLineId(variantId: string) {\n  return PENDING_PREFIX + variantId;\n}\n\nexport function isOptimisticLineId(lineId: string) {\n  return lineId.startsWith(PENDING_PREFIX);\n}\n\nexport function throwIfLinesAreOptimistic(\n  type: string,\n  lines: CartLineUpdateInput[] | string[],\n) {\n  if (\n    lines.some((line) =>\n      isOptimisticLineId(typeof line === 'string' ? line : line.id),\n    )\n  ) {\n    throw new Error(\n      `Tried to perform an action on an optimistic line. Make sure to disable your \"${type}\" CartForm action when the line is optimistic.`,\n    );\n  }\n}\n","import {StorefrontApiErrors, formatAPIResult} from '../../storefront';\nimport {throwIfLinesAreOptimistic} from '../optimistic/optimistic-cart.helper';\nimport {\n  CART_WARNING_FRAGMENT,\n  MINIMAL_CART_FRAGMENT,\n  USER_ERROR_FRAGMENT,\n} from './cart-fragments';\nimport type {\n  CartOptionalInput,\n  CartQueryData,\n  CartQueryDataReturn,\n  CartQueryOptions,\n} from './cart-types';\nimport type {CartLineUpdateInput} from '@shopify/hydrogen-react/storefront-api-types';\n\nexport type CartLinesUpdateFunction = (\n  lines: CartLineUpdateInput[],\n  optionalParams?: CartOptionalInput,\n) => Promise<CartQueryDataReturn>;\n\nexport function cartLinesUpdateDefault(\n  options: CartQueryOptions,\n): CartLinesUpdateFunction {\n  return async (lines, optionalParams) => {\n    throwIfLinesAreOptimistic('updateLines', lines);\n\n    const {cartLinesUpdate, errors} = await options.storefront.mutate<{\n      cartLinesUpdate: CartQueryData;\n      errors: StorefrontApiErrors;\n    }>(CART_LINES_UPDATE_MUTATION(options.cartFragment), {\n      variables: {\n        cartId: options.getCartId(),\n        lines,\n        ...optionalParams,\n      },\n    });\n    return formatAPIResult(cartLinesUpdate, errors);\n  };\n}\n\n//! @see: https://shopify.dev/docs/api/storefront/latest/mutations/cartLinesUpdate\nexport const CART_LINES_UPDATE_MUTATION = (\n  cartFragment = MINIMAL_CART_FRAGMENT,\n) => `#graphql\n  mutation cartLinesUpdate(\n    $cartId: ID!\n    $lines: [CartLineUpdateInput!]!\n    $language: LanguageCode\n    $country: CountryCode\n  ) @inContext(country: $country, language: $language) {\n    cartLinesUpdate(cartId: $cartId, lines: $lines) {\n      cart {\n        ...CartApiMutation\n      }\n      userErrors {\n        ...CartApiError\n      }\n      warnings {\n        ...CartApiWarning\n      }\n    }\n  }\n  ${cartFragment}\n  ${USER_ERROR_FRAGMENT}\n  ${CART_WARNING_FRAGMENT}\n`;\n","import {StorefrontApiErrors, formatAPIResult} from '../../storefront';\nimport {throwIfLinesAreOptimistic} from '../optimistic/optimistic-cart.helper';\nimport {\n  CART_WARNING_FRAGMENT,\n  MINIMAL_CART_FRAGMENT,\n  USER_ERROR_FRAGMENT,\n} from './cart-fragments';\nimport type {\n  CartOptionalInput,\n  CartQueryData,\n  CartQueryDataReturn,\n  CartQueryOptions,\n} from './cart-types';\n\nexport type CartLinesRemoveFunction = (\n  lineIds: string[],\n  optionalParams?: CartOptionalInput,\n) => Promise<CartQueryDataReturn>;\n\nexport function cartLinesRemoveDefault(\n  options: CartQueryOptions,\n): CartLinesRemoveFunction {\n  return async (lineIds, optionalParams) => {\n    throwIfLinesAreOptimistic('removeLines', lineIds);\n\n    const {cartLinesRemove, errors} = await options.storefront.mutate<{\n      cartLinesRemove: CartQueryData;\n      errors: StorefrontApiErrors;\n    }>(CART_LINES_REMOVE_MUTATION(options.cartFragment), {\n      variables: {\n        cartId: options.getCartId(),\n        lineIds,\n        ...optionalParams,\n      },\n    });\n    return formatAPIResult(cartLinesRemove, errors);\n  };\n}\n\n//! @see: https://shopify.dev/docs/api/storefront/latest/mutations/cartLinesRemove\nexport const CART_LINES_REMOVE_MUTATION = (\n  cartFragment = MINIMAL_CART_FRAGMENT,\n) => `#graphql\n  mutation cartLinesRemove(\n    $cartId: ID!\n    $lineIds: [ID!]!\n    $language: LanguageCode\n    $country: CountryCode\n  ) @inContext(country: $country, language: $language) {\n    cartLinesRemove(cartId: $cartId, lineIds: $lineIds) {\n      cart {\n        ...CartApiMutation\n      }\n      userErrors {\n        ...CartApiError\n      }\n      warnings {\n        ...CartApiWarning\n      }\n    }\n  }\n  ${cartFragment}\n  ${USER_ERROR_FRAGMENT}\n  ${CART_WARNING_FRAGMENT}\n`;\n","import {StorefrontApiErrors, formatAPIResult} from '../../storefront';\nimport {\n  CART_WARNING_FRAGMENT,\n  MINIMAL_CART_FRAGMENT,\n  USER_ERROR_FRAGMENT,\n} from './cart-fragments';\nimport type {\n  CartOptionalInput,\n  CartQueryData,\n  CartQueryDataReturn,\n  CartQueryOptions,\n} from './cart-types';\n\nexport type CartDiscountCodesUpdateFunction = (\n  discountCodes: string[],\n  optionalParams?: CartOptionalInput,\n) => Promise<CartQueryDataReturn>;\n\nexport function cartDiscountCodesUpdateDefault(\n  options: CartQueryOptions,\n): CartDiscountCodesUpdateFunction {\n  return async (discountCodes, optionalParams) => {\n    // Ensure the discount codes are unique\n    const uniqueCodes = discountCodes.filter((value, index, array) => {\n      return array.indexOf(value) === index;\n    });\n\n    const {cartDiscountCodesUpdate, errors} = await options.storefront.mutate<{\n      cartDiscountCodesUpdate: CartQueryData;\n      errors: StorefrontApiErrors;\n    }>(CART_DISCOUNT_CODE_UPDATE_MUTATION(options.cartFragment), {\n      variables: {\n        cartId: options.getCartId(),\n        discountCodes: uniqueCodes,\n        ...optionalParams,\n      },\n    });\n    return formatAPIResult(cartDiscountCodesUpdate, errors);\n  };\n}\n\n//! @see https://shopify.dev/docs/api/storefront/latest/mutations/cartDiscountCodesUpdate\nexport const CART_DISCOUNT_CODE_UPDATE_MUTATION = (\n  cartFragment = MINIMAL_CART_FRAGMENT,\n) => `#graphql\n  mutation cartDiscountCodesUpdate(\n    $cartId: ID!\n    $discountCodes: [String!]\n    $language: LanguageCode\n    $country: CountryCode\n  ) @inContext(country: $country, language: $language) {\n    cartDiscountCodesUpdate(cartId: $cartId, discountCodes: $discountCodes) {\n      cart {\n        ...CartApiMutation\n      }\n      userErrors {\n        ...CartApiError\n      }\n      warnings {\n        ...CartApiWarning\n      }\n    }\n  }\n  ${cartFragment}\n  ${USER_ERROR_FRAGMENT}\n  ${CART_WARNING_FRAGMENT}\n`;\n","import {StorefrontApiErrors, formatAPIResult} from '../../storefront';\nimport {\n  CART_WARNING_FRAGMENT,\n  MINIMAL_CART_FRAGMENT,\n  USER_ERROR_FRAGMENT,\n} from './cart-fragments';\nimport type {\n  CartOptionalInput,\n  CartQueryData,\n  CartQueryDataReturn,\n  CartQueryOptions,\n} from './cart-types';\nimport type {CartBuyerIdentityInput} from '@shopify/hydrogen-react/storefront-api-types';\n\nexport type CartBuyerIdentityUpdateFunction = (\n  buyerIdentity: CartBuyerIdentityInput,\n  optionalParams?: CartOptionalInput,\n) => Promise<CartQueryDataReturn>;\n\nexport function cartBuyerIdentityUpdateDefault(\n  options: CartQueryOptions,\n): CartBuyerIdentityUpdateFunction {\n  return async (buyerIdentity, optionalParams) => {\n    if (buyerIdentity.companyLocationId && options.customerAccount) {\n      options.customerAccount.setBuyer({\n        companyLocationId: buyerIdentity.companyLocationId,\n      });\n    }\n\n    const buyer = options.customerAccount\n      ? await options.customerAccount.getBuyer()\n      : undefined;\n\n    const {cartBuyerIdentityUpdate, errors} = await options.storefront.mutate<{\n      cartBuyerIdentityUpdate: CartQueryData;\n      errors: StorefrontApiErrors;\n    }>(CART_BUYER_IDENTITY_UPDATE_MUTATION(options.cartFragment), {\n      variables: {\n        cartId: options.getCartId(),\n        buyerIdentity: {\n          ...buyer,\n          ...buyerIdentity,\n        },\n        ...optionalParams,\n      },\n    });\n    return formatAPIResult(cartBuyerIdentityUpdate, errors);\n  };\n}\n\n//! @see https://shopify.dev/docs/api/storefront/latest/mutations/cartBuyerIdentityUpdate\nexport const CART_BUYER_IDENTITY_UPDATE_MUTATION = (\n  cartFragment = MINIMAL_CART_FRAGMENT,\n) => `#graphql\n  mutation cartBuyerIdentityUpdate(\n    $cartId: ID!\n    $buyerIdentity: CartBuyerIdentityInput!\n    $language: LanguageCode\n    $country: CountryCode\n  ) @inContext(country: $country, language: $language) {\n    cartBuyerIdentityUpdate(cartId: $cartId, buyerIdentity: $buyerIdentity) {\n      cart {\n        ...CartApiMutation\n      }\n      userErrors {\n        ...CartApiError\n      }\n      warnings {\n        ...CartApiWarning\n      }\n    }\n  }\n  ${cartFragment}\n  ${USER_ERROR_FRAGMENT}\n  ${CART_WARNING_FRAGMENT}\n`;\n","import {StorefrontApiErrors, formatAPIResult} from '../../storefront';\nimport {\n  CART_WARNING_FRAGMENT,\n  MINIMAL_CART_FRAGMENT,\n  USER_ERROR_FRAGMENT,\n} from './cart-fragments';\nimport type {\n  CartOptionalInput,\n  CartQueryData,\n  CartQueryDataReturn,\n  CartQueryOptions,\n} from './cart-types';\n\nexport type CartNoteUpdateFunction = (\n  note: string,\n  optionalParams?: CartOptionalInput,\n) => Promise<CartQueryDataReturn>;\n\nexport function cartNoteUpdateDefault(\n  options: CartQueryOptions,\n): CartNoteUpdateFunction {\n  return async (note, optionalParams) => {\n    const {cartNoteUpdate, errors} = await options.storefront.mutate<{\n      cartNoteUpdate: CartQueryData;\n      errors: StorefrontApiErrors;\n    }>(CART_NOTE_UPDATE_MUTATION(options.cartFragment), {\n      variables: {\n        cartId: options.getCartId(),\n        note,\n        ...optionalParams,\n      },\n    });\n    return formatAPIResult(cartNoteUpdate, errors);\n  };\n}\n\n//! @see https://shopify.dev/docs/api/storefront/latest/mutations/cartNoteUpdate\nexport const CART_NOTE_UPDATE_MUTATION = (\n  cartFragment = MINIMAL_CART_FRAGMENT,\n) => `#graphql\n  mutation cartNoteUpdate(\n    $cartId: ID!\n    $note: String!\n    $language: LanguageCode\n    $country: CountryCode\n  ) @inContext(country: $country, language: $language) {\n    cartNoteUpdate(cartId: $cartId, note: $note) {\n      cart {\n        ...CartApiMutation\n      }\n      userErrors {\n        ...CartApiError\n      }\n      warnings {\n        ...CartApiWarning\n      }\n    }\n  }\n  ${cartFragment}\n  ${USER_ERROR_FRAGMENT}\n  ${CART_WARNING_FRAGMENT}\n`;\n","import {StorefrontApiErrors, formatAPIResult} from '../../storefront';\nimport {\n  CART_WARNING_FRAGMENT,\n  MINIMAL_CART_FRAGMENT,\n  USER_ERROR_FRAGMENT,\n} from './cart-fragments';\nimport type {\n  CartOptionalInput,\n  CartQueryData,\n  CartQueryDataReturn,\n  CartQueryOptions,\n} from './cart-types';\nimport type {CartSelectedDeliveryOptionInput} from '@shopify/hydrogen-react/storefront-api-types';\n\nexport type CartSelectedDeliveryOptionsUpdateFunction = (\n  selectedDeliveryOptions: CartSelectedDeliveryOptionInput[],\n  optionalParams?: CartOptionalInput,\n) => Promise<CartQueryDataReturn>;\n\nexport function cartSelectedDeliveryOptionsUpdateDefault(\n  options: CartQueryOptions,\n): CartSelectedDeliveryOptionsUpdateFunction {\n  return async (selectedDeliveryOptions, optionalParams) => {\n    const {cartSelectedDeliveryOptionsUpdate, errors} =\n      await options.storefront.mutate<{\n        cartSelectedDeliveryOptionsUpdate: CartQueryData;\n        errors: StorefrontApiErrors;\n      }>(CART_SELECTED_DELIVERY_OPTIONS_UPDATE_MUTATION(options.cartFragment), {\n        variables: {\n          cartId: options.getCartId(),\n          selectedDeliveryOptions,\n          ...optionalParams,\n        },\n      });\n    return formatAPIResult(cartSelectedDeliveryOptionsUpdate, errors);\n  };\n}\n\n//! @see https://shopify.dev/docs/api/storefront/latest/mutations/cartSelectedDeliveryOptionsUpdate\nexport const CART_SELECTED_DELIVERY_OPTIONS_UPDATE_MUTATION = (\n  cartFragment = MINIMAL_CART_FRAGMENT,\n) => `#graphql\n  mutation cartSelectedDeliveryOptionsUpdate(\n    $cartId: ID!\n    $selectedDeliveryOptions: [CartSelectedDeliveryOptionInput!]!\n    $language: LanguageCode\n    $country: CountryCode\n  ) @inContext(country: $country, language: $language) {\n    cartSelectedDeliveryOptionsUpdate(cartId: $cartId, selectedDeliveryOptions: $selectedDeliveryOptions) {\n      cart {\n        ...CartApiMutation\n      }\n      userErrors {\n        ...CartApiError\n      }\n      warnings {\n        ...CartApiWarning\n      }\n    }\n  }\n  ${cartFragment}\n  ${USER_ERROR_FRAGMENT}\n  ${CART_WARNING_FRAGMENT}\n`;\n","import {StorefrontApiErrors, formatAPIResult} from '../../storefront';\nimport {\n  CART_WARNING_FRAGMENT,\n  MINIMAL_CART_FRAGMENT,\n  USER_ERROR_FRAGMENT,\n} from './cart-fragments';\nimport type {\n  CartOptionalInput,\n  CartQueryData,\n  CartQueryDataReturn,\n  CartQueryOptions,\n} from './cart-types';\nimport type {AttributeInput} from '@shopify/hydrogen-react/storefront-api-types';\n\nexport type CartAttributesUpdateFunction = (\n  attributes: AttributeInput[],\n  optionalParams?: CartOptionalInput,\n) => Promise<CartQueryDataReturn>;\n\nexport function cartAttributesUpdateDefault(\n  options: CartQueryOptions,\n): CartAttributesUpdateFunction {\n  return async (attributes, optionalParams) => {\n    const {cartAttributesUpdate, errors} = await options.storefront.mutate<{\n      cartAttributesUpdate: CartQueryData;\n      errors: StorefrontApiErrors;\n    }>(CART_ATTRIBUTES_UPDATE_MUTATION(options.cartFragment), {\n      variables: {\n        cartId: optionalParams?.cartId || options.getCartId(),\n        attributes,\n      },\n    });\n    return formatAPIResult(cartAttributesUpdate, errors);\n  };\n}\n\nexport const CART_ATTRIBUTES_UPDATE_MUTATION = (\n  cartFragment = MINIMAL_CART_FRAGMENT,\n) => `#graphql\n  mutation cartAttributesUpdate(\n    $cartId: ID!\n    $attributes: [AttributeInput!]!\n  ) {\n    cartAttributesUpdate(cartId: $cartId, attributes: $attributes) {\n      cart {\n        ...CartApiMutation\n      }\n      userErrors {\n        ...CartApiError\n      }\n      warnings {\n        ...CartApiWarning\n      }\n    }\n  }\n  ${cartFragment}\n  ${USER_ERROR_FRAGMENT}\n  ${CART_WARNING_FRAGMENT}\n`;\n","import {StorefrontApiErrors, formatAPIResult} from '../../storefront';\nimport type {\n  CartOptionalInput,\n  CartQueryOptions,\n  MetafieldWithoutOwnerId,\n  CartQueryDataReturn,\n} from './cart-types';\nimport type {\n  Cart,\n  MetafieldsSetUserError,\n} from '@shopify/hydrogen-react/storefront-api-types';\n\nexport type CartMetafieldsSetFunction = (\n  metafields: MetafieldWithoutOwnerId[],\n  optionalParams?: CartOptionalInput,\n) => Promise<CartQueryDataReturn>;\n\nexport function cartMetafieldsSetDefault(\n  options: CartQueryOptions,\n): CartMetafieldsSetFunction {\n  return async (metafields, optionalParams) => {\n    const ownerId = optionalParams?.cartId || options.getCartId();\n    const metafieldsWithOwnerId = metafields.map(\n      (metafield: MetafieldWithoutOwnerId) => ({\n        ...metafield,\n        ownerId,\n      }),\n    );\n    const {cartMetafieldsSet, errors} = await options.storefront.mutate<{\n      cartMetafieldsSet: {\n        userErrors: MetafieldsSetUserError[];\n      };\n      errors: StorefrontApiErrors;\n    }>(CART_METAFIELD_SET_MUTATION(), {\n      variables: {metafields: metafieldsWithOwnerId},\n    });\n\n    return formatAPIResult(\n      {\n        cart: {\n          id: ownerId,\n        } as Cart,\n        ...cartMetafieldsSet,\n      },\n      errors,\n    );\n  };\n}\n\n//! @see https://shopify.dev/docs/api/storefront/latest/mutations/cartMetafieldsSet\nexport const CART_METAFIELD_SET_MUTATION = () => `#graphql\n  mutation cartMetafieldsSet(\n    $metafields: [CartMetafieldsSetInput!]!\n    $language: LanguageCode\n    $country: CountryCode\n  ) @inContext(country: $country, language: $language) {\n    cartMetafieldsSet(metafields: $metafields) {\n      userErrors {\n        code\n        elementIndex\n        field\n        message\n      }\n    }\n  }\n`;\n","import {StorefrontApiErrors, formatAPIResult} from '../../storefront';\nimport type {\n  CartQueryOptions,\n  CartOptionalInput,\n  CartQueryDataReturn,\n} from './cart-types';\nimport type {\n  Cart,\n  MetafieldDeleteUserError,\n  Scalars,\n} from '@shopify/hydrogen-react/storefront-api-types';\n\nexport type CartMetafieldDeleteFunction = (\n  key: Scalars['String']['input'],\n  optionalParams?: CartOptionalInput,\n) => Promise<CartQueryDataReturn>;\n\nexport function cartMetafieldDeleteDefault(\n  options: CartQueryOptions,\n): CartMetafieldDeleteFunction {\n  return async (key, optionalParams) => {\n    const ownerId = optionalParams?.cartId || options.getCartId();\n    const {cartMetafieldDelete, errors} = await options.storefront.mutate<{\n      cartMetafieldDelete: {\n        userErrors: MetafieldDeleteUserError[];\n      };\n      errors: StorefrontApiErrors;\n    }>(CART_METAFIELD_DELETE_MUTATION(), {\n      variables: {\n        input: {\n          ownerId,\n          key,\n        },\n      },\n    });\n    return formatAPIResult(\n      {\n        cart: {\n          id: ownerId,\n        } as Cart,\n        ...cartMetafieldDelete,\n      },\n      errors,\n    );\n  };\n}\n\n//! @see https://shopify.dev/docs/api/storefront/2025-01/mutations/cartMetafieldDelete\nexport const CART_METAFIELD_DELETE_MUTATION = () => `#graphql\n  mutation cartMetafieldDelete(\n    $input: CartMetafieldDeleteInput!\n  ) {\n    cartMetafieldDelete(input: $input) {\n      userErrors {\n        code\n        field\n        message\n      }\n    }\n  }\n`;\n","import {StorefrontApiErrors, formatAPIResult} from '../../storefront';\nimport {\n  CART_WARNING_FRAGMENT,\n  MINIMAL_CART_FRAGMENT,\n  USER_ERROR_FRAGMENT,\n} from './cart-fragments';\nimport type {\n  CartOptionalInput,\n  CartQueryData,\n  CartQueryDataReturn,\n  CartQueryOptions,\n} from './cart-types';\n\nexport type CartGiftCardCodesUpdateFunction = (\n  giftCardCodes: string[],\n  optionalParams?: CartOptionalInput,\n) => Promise<CartQueryDataReturn>;\n\nexport function cartGiftCardCodesUpdateDefault(\n  options: CartQueryOptions,\n): CartGiftCardCodesUpdateFunction {\n  return async (giftCardCodes, optionalParams) => {\n    // Ensure the gift card codes are unique\n    const uniqueCodes = giftCardCodes.filter((value, index, array) => {\n      return array.indexOf(value) === index;\n    });\n\n    const {cartGiftCardCodesUpdate, errors} = await options.storefront.mutate<{\n      cartGiftCardCodesUpdate: CartQueryData;\n      errors: StorefrontApiErrors;\n    }>(CART_GIFT_CARD_CODE_UPDATE_MUTATION(options.cartFragment), {\n      variables: {\n        cartId: options.getCartId(),\n        giftCardCodes: uniqueCodes,\n        ...optionalParams,\n      },\n    });\n    return formatAPIResult(cartGiftCardCodesUpdate, errors);\n  };\n}\n\n//! @see https://shopify.dev/docs/api/storefront/latest/mutations/cartGiftCardCodesUpdate\nexport const CART_GIFT_CARD_CODE_UPDATE_MUTATION = (\n  cartFragment = MINIMAL_CART_FRAGMENT,\n) => `#graphql\n  mutation cartGiftCardCodesUpdate(\n    $cartId: ID!\n    $giftCardCodes: [String!]!\n    $language: LanguageCode\n    $country: CountryCode\n  ) @inContext(country: $country, language: $language) {\n    cartGiftCardCodesUpdate(cartId: $cartId, giftCardCodes: $giftCardCodes) {\n      cart {\n        ...CartApiMutation\n      }\n      userErrors {\n        ...CartApiError\n      }\n      warnings {\n        ...CartApiWarning\n      }\n    }\n  }\n  ${cartFragment}\n  ${USER_ERROR_FRAGMENT}\n  ${CART_WARNING_FRAGMENT}\n`;\n","import {Storefront} from '../storefront';\nimport type {CustomerAccount} from '../customer/types';\nimport {type CartGetFunction, cartGetDefault} from './queries/cartGetDefault';\nimport {\n  type CartCreateFunction,\n  cartCreateDefault,\n} from './queries/cartCreateDefault';\nimport {\n  type CartLinesAddFunction,\n  cartLinesAddDefault,\n} from './queries/cartLinesAddDefault';\nimport {\n  type CartLinesUpdateFunction,\n  cartLinesUpdateDefault,\n} from './queries/cartLinesUpdateDefault';\nimport {\n  type CartLinesRemoveFunction,\n  cartLinesRemoveDefault,\n} from './queries/cartLinesRemoveDefault';\nimport {\n  type CartDiscountCodesUpdateFunction,\n  cartDiscountCodesUpdateDefault,\n} from './queries/cartDiscountCodesUpdateDefault';\nimport {\n  type CartBuyerIdentityUpdateFunction,\n  cartBuyerIdentityUpdateDefault,\n} from './queries/cartBuyerIdentityUpdateDefault';\nimport {\n  type CartNoteUpdateFunction,\n  cartNoteUpdateDefault,\n} from './queries/cartNoteUpdateDefault';\nimport {\n  type CartSelectedDeliveryOptionsUpdateFunction,\n  cartSelectedDeliveryOptionsUpdateDefault,\n} from './queries/cartSelectedDeliveryOptionsUpdateDefault';\nimport {\n  type CartAttributesUpdateFunction,\n  cartAttributesUpdateDefault,\n} from './queries/cartAttributesUpdateDefault';\nimport {\n  type CartMetafieldsSetFunction,\n  cartMetafieldsSetDefault,\n} from './queries/cartMetafieldsSetDefault';\nimport {\n  type CartMetafieldDeleteFunction,\n  cartMetafieldDeleteDefault,\n} from './queries/cartMetafieldDeleteDefault';\nimport {\n  type CartGiftCardCodesUpdateFunction,\n  cartGiftCardCodesUpdateDefault,\n} from './queries/cartGiftCardCodeUpdateDefault';\n\nexport type CartHandlerOptions = {\n  storefront: Storefront;\n  customerAccount?: CustomerAccount;\n  getCartId: () => string | undefined;\n  setCartId: (cartId: string) => Headers;\n  cartQueryFragment?: string;\n  cartMutateFragment?: string;\n};\n\nexport type CustomMethodsBase = Record<string, Function>;\nexport type CartHandlerOptionsWithCustom<\n  TCustomMethods extends CustomMethodsBase,\n> = CartHandlerOptions & {\n  customMethods?: TCustomMethods;\n};\n\nexport type HydrogenCart = {\n  get: ReturnType<typeof cartGetDefault>;\n  getCartId: () => string | undefined;\n  setCartId: (cartId: string) => Headers;\n  create: ReturnType<typeof cartCreateDefault>;\n  addLines: ReturnType<typeof cartLinesAddDefault>;\n  updateLines: ReturnType<typeof cartLinesUpdateDefault>;\n  removeLines: ReturnType<typeof cartLinesRemoveDefault>;\n  updateDiscountCodes: ReturnType<typeof cartDiscountCodesUpdateDefault>;\n  updateGiftCardCodes: ReturnType<typeof cartGiftCardCodesUpdateDefault>;\n  updateBuyerIdentity: ReturnType<typeof cartBuyerIdentityUpdateDefault>;\n  updateNote: ReturnType<typeof cartNoteUpdateDefault>;\n  updateSelectedDeliveryOption: ReturnType<\n    typeof cartSelectedDeliveryOptionsUpdateDefault\n  >;\n  updateAttributes: ReturnType<typeof cartAttributesUpdateDefault>;\n  setMetafields: ReturnType<typeof cartMetafieldsSetDefault>;\n  deleteMetafield: ReturnType<typeof cartMetafieldDeleteDefault>;\n};\n\nexport type HydrogenCartCustom<\n  TCustomMethods extends Partial<HydrogenCart> & CustomMethodsBase,\n> = Omit<HydrogenCart, keyof TCustomMethods> & TCustomMethods;\nexport type CartHandlerReturn<TCustomMethods extends CustomMethodsBase> =\n  | HydrogenCartCustom<TCustomMethods>\n  | HydrogenCart;\n\nexport function createCartHandler(options: CartHandlerOptions): HydrogenCart;\nexport function createCartHandler<TCustomMethods extends CustomMethodsBase>(\n  options: CartHandlerOptionsWithCustom<TCustomMethods>,\n): HydrogenCartCustom<TCustomMethods>;\nexport function createCartHandler<TCustomMethods extends CustomMethodsBase>(\n  options: CartHandlerOptions | CartHandlerOptionsWithCustom<TCustomMethods>,\n): CartHandlerReturn<TCustomMethods> {\n  const {\n    getCartId: _getCartId,\n    setCartId,\n    storefront,\n    customerAccount,\n    cartQueryFragment,\n    cartMutateFragment,\n  } = options;\n\n  let cartId = _getCartId();\n\n  const getCartId = () => cartId || _getCartId();\n\n  const mutateOptions = {\n    storefront,\n    getCartId,\n    cartFragment: cartMutateFragment,\n    customerAccount,\n  };\n\n  const _cartCreate = cartCreateDefault(mutateOptions);\n\n  const cartCreate: CartCreateFunction = async function (...args) {\n    const result = await _cartCreate(...args);\n    cartId = result?.cart?.id;\n    return result;\n  };\n\n  const methods: HydrogenCart = {\n    get: cartGetDefault({\n      storefront,\n      customerAccount,\n      getCartId,\n      cartFragment: cartQueryFragment,\n    }),\n    getCartId,\n    setCartId,\n    create: cartCreate,\n    addLines: async (linesWithOptimisticData, optionalParams) => {\n      const lines = linesWithOptimisticData.map((line) => {\n        return {\n          attributes: line.attributes,\n          quantity: line.quantity,\n          merchandiseId: line.merchandiseId,\n          sellingPlanId: line.sellingPlanId,\n        };\n      });\n\n      return cartId || optionalParams?.cartId\n        ? await cartLinesAddDefault(mutateOptions)(lines, optionalParams)\n        : await cartCreate({lines}, optionalParams);\n    },\n    updateLines: cartLinesUpdateDefault(mutateOptions),\n    removeLines: cartLinesRemoveDefault(mutateOptions),\n    updateDiscountCodes: async (discountCodes, optionalParams) => {\n      return cartId || optionalParams?.cartId\n        ? await cartDiscountCodesUpdateDefault(mutateOptions)(\n            discountCodes,\n            optionalParams,\n          )\n        : await cartCreate({discountCodes}, optionalParams);\n    },\n    updateGiftCardCodes: async (giftCardCodes, optionalParams) => {\n      return cartId || optionalParams?.cartId\n        ? await cartGiftCardCodesUpdateDefault(mutateOptions)(\n            giftCardCodes,\n            optionalParams,\n          )\n        : await cartCreate({giftCardCodes}, optionalParams);\n    },\n    updateBuyerIdentity: async (buyerIdentity, optionalParams) => {\n      return cartId || optionalParams?.cartId\n        ? await cartBuyerIdentityUpdateDefault(mutateOptions)(\n            buyerIdentity,\n            optionalParams,\n          )\n        : await cartCreate({buyerIdentity}, optionalParams);\n    },\n    updateNote: async (note, optionalParams) => {\n      return cartId || optionalParams?.cartId\n        ? await cartNoteUpdateDefault(mutateOptions)(note, optionalParams)\n        : await cartCreate({note}, optionalParams);\n    },\n    updateSelectedDeliveryOption:\n      cartSelectedDeliveryOptionsUpdateDefault(mutateOptions),\n    updateAttributes: async (attributes, optionalParams) => {\n      return cartId || optionalParams?.cartId\n        ? await cartAttributesUpdateDefault(mutateOptions)(\n            attributes,\n            optionalParams,\n          )\n        : await cartCreate({attributes}, optionalParams);\n    },\n    setMetafields: async (metafields, optionalParams) => {\n      return cartId || optionalParams?.cartId\n        ? await cartMetafieldsSetDefault(mutateOptions)(\n            metafields,\n            optionalParams,\n          )\n        : await cartCreate({metafields}, optionalParams);\n    },\n    deleteMetafield: cartMetafieldDeleteDefault(mutateOptions),\n  };\n\n  if ('customMethods' in options) {\n    return {\n      ...methods,\n      ...(options.customMethods ?? {}),\n    };\n  } else {\n    return methods;\n  }\n}\n\nexport type CartHandlerOptionsForDocs<\n  TCustomMethods extends CustomMethodsBase,\n> = {\n  /**\n   * A function that returns the cart id in the form of `gid://shopify/Cart/c1-123`.\n   */\n  getCartId: () => string | undefined;\n  /**\n   * A function that sets the cart ID.\n   */\n  setCartId: (cartId: string) => Headers;\n  /**\n   * The storefront client instance created by [`createStorefrontClient`](docs/api/hydrogen/2025-01/utilities/createstorefrontclient).\n   */\n  storefront: Storefront;\n  /**\n   * The cart mutation fragment used in most mutation requests, except for `setMetafields` and `deleteMetafield`.\n   * See the [example usage](/docs/api/hydrogen/2025-01/utilities/createcarthandler#example-cart-fragments) in the documentation.\n   */\n  cartMutateFragment?: string;\n  /**\n   * The cart query fragment used by `cart.get()`.\n   * See the [example usage](/docs/api/hydrogen/2025-01/utilities/createcarthandler#example-cart-fragments) in the documentation.\n   */\n  cartQueryFragment?: string;\n  /**\n   * Define custom methods or override existing methods for your cart API instance.\n   * See the [example usage](/docs/api/hydrogen/2025-01/utilities/createcarthandler#example-custom-methods) in the documentation.\n   */\n  customMethods?: TCustomMethods;\n};\n\nexport type HydrogenCartForDocs = {\n  /**\n   * Adds items to the cart.\n   * If the cart doesn't exist, a new one will be created.\n   */\n  addLines?: CartLinesAddFunction;\n  /**\n   * Creates a new cart.\n   */\n  create?: CartCreateFunction;\n  /**\n   * Removes a custom field (metafield) from the cart.\n   */\n  deleteMetafield?: CartMetafieldDeleteFunction;\n  /**\n   * Retrieves the cart information.\n   */\n  get?: CartGetFunction;\n  /**\n   * Retrieves the unique identifier of the cart.\n   * By default, it gets the ID from the request cookie.\n   */\n  getCartId?: () => string | undefined;\n  /**\n   * Removes items from the cart.\n   */\n  removeLines?: CartLinesRemoveFunction;\n  /**\n   * Sets the unique identifier of the cart.\n   * By default, it sets the ID in the header cookie.\n   */\n  setCartId?: (cartId: string) => Headers;\n  /**\n   * Adds extra information (metafields) to the cart.\n   * If the cart doesn't exist, a new one will be created.\n   */\n  setMetafields?: CartMetafieldsSetFunction;\n  /**\n   * Updates additional information (attributes) in the cart.\n   */\n  updateAttributes?: CartAttributesUpdateFunction;\n  /**\n   * Updates the buyer's information in the cart.\n   * If the cart doesn't exist, a new one will be created.\n   */\n  updateBuyerIdentity?: CartBuyerIdentityUpdateFunction;\n  /**\n   * Updates discount codes in the cart.\n   */\n  updateDiscountCodes?: CartDiscountCodesUpdateFunction;\n  /**\n   * Updates gift card codes in the cart.\n   */\n  updateGiftCardCodes?: CartGiftCardCodesUpdateFunction;\n  /**\n   * Updates items in the cart.\n   */\n  updateLines?: CartLinesUpdateFunction;\n  /**\n   * Updates the note in the cart.\n   * If the cart doesn't exist, a new one will be created.\n   */\n  updateNote?: CartNoteUpdateFunction;\n  /**\n   * Updates the selected delivery options in the cart.\n   * Only available for carts associated with a customer access token.\n   */\n  updateSelectedDeliveryOption?: CartSelectedDeliveryOptionsUpdateFunction;\n};\n","import {useFetchers} from '@remix-run/react';\nimport {CartForm} from '../CartForm';\nimport type {\n  CartLine,\n  ProductVariant,\n} from '@shopify/hydrogen-react/storefront-api-types';\nimport {\n  getOptimisticLineId,\n  isOptimisticLineId,\n} from './optimistic-cart.helper';\nimport type {PartialDeep} from 'type-fest';\nimport type {CartReturn} from '../queries/cart-types';\n\ntype LikeACart = {\n  lines: {\n    nodes: Array<unknown>;\n  };\n};\n\nexport type OptimisticCartLine<T = CartLine | CartReturn> = T extends LikeACart\n  ? T['lines']['nodes'][number] & {isOptimistic?: boolean}\n  : T & {isOptimistic?: boolean};\n\nexport type OptimisticCart<T = CartReturn> = T extends undefined | null\n  ? // This is the null/undefined case, where the cart has yet to be created.\n    // But we still need to provide an optimistic cart object.\n    {\n      isOptimistic?: boolean;\n      lines: {\n        nodes: Array<OptimisticCartLine>;\n      };\n      totalQuantity?: number;\n    } & Omit<PartialDeep<CartReturn>, 'lines'>\n  : Omit<T, 'lines'> & {\n      isOptimistic?: boolean;\n      lines: {\n        nodes: Array<OptimisticCartLine<T>>;\n      };\n      totalQuantity?: number;\n    };\n\n/**\n * @param cart The cart object from `context.cart.get()` returned by a server loader.\n *\n * @returns A new cart object augmented with optimistic state for `lines` and `totalQuantity`. Each cart line item that is optimistically added includes an `isOptimistic` property. Also if the cart has _any_ optimistic state, a root property `isOptimistic` will be set to `true`.\n */\nexport function useOptimisticCart<\n  DefaultCart = {\n    lines?: {\n      nodes: Array<{id: string; quantity: number; merchandise: {is: string}}>;\n    };\n  },\n>(cart?: DefaultCart): OptimisticCart<DefaultCart> {\n  const fetchers = useFetchers();\n\n  if (!fetchers || !fetchers.length) return cart as OptimisticCart<DefaultCart>;\n\n  const optimisticCart = (cart as CartReturn)?.lines\n    ? (structuredClone(cart) as OptimisticCart<DefaultCart>)\n    : ({lines: {nodes: []}} as unknown as OptimisticCart<DefaultCart>);\n\n  const cartLines = optimisticCart.lines.nodes as OptimisticCartLine[];\n\n  let isOptimistic = false;\n\n  for (const {formData} of fetchers) {\n    if (!formData) continue;\n\n    const cartFormData = CartForm.getFormInput(formData);\n\n    if (cartFormData.action === CartForm.ACTIONS.LinesAdd) {\n      for (const input of cartFormData.inputs.lines) {\n        if (!input.selectedVariant) {\n          console.error(\n            '[h2:error:useOptimisticCart] No selected variant was passed in the cart action. Make sure to pass the selected variant if you want to use an optimistic cart',\n          );\n          continue;\n        }\n\n        const existingLine = cartLines.find(\n          (line) =>\n            line.merchandise.id ===\n            (input.selectedVariant as ProductVariant)?.id,\n        );\n\n        isOptimistic = true;\n\n        if (existingLine) {\n          existingLine.quantity =\n            (existingLine.quantity || 1) + (input.quantity || 1);\n          existingLine.isOptimistic = true;\n        } else {\n          cartLines.unshift({\n            id: getOptimisticLineId((input.selectedVariant as any).id),\n            merchandise: input.selectedVariant,\n            isOptimistic: true,\n            quantity: input.quantity || 1,\n          } as CartLine & {isOptimistic?: boolean});\n        }\n      }\n    } else if (cartFormData.action === CartForm.ACTIONS.LinesRemove) {\n      for (const lineId of cartFormData.inputs.lineIds) {\n        const index = cartLines.findIndex((line) => line.id === lineId);\n\n        if (index !== -1) {\n          if (isOptimisticLineId(cartLines[index].id)) {\n            console.error(\n              '[h2:error:useOptimisticCart] Tried to remove an optimistic line that has not been added to the cart yet',\n            );\n            continue;\n          }\n\n          cartLines.splice(index, 1);\n          isOptimistic = true;\n        } else {\n          console.warn(\n            `[h2:warn:useOptimisticCart] Tried to remove line '${lineId}' but it doesn't exist in the cart`,\n          );\n        }\n      }\n    } else if (cartFormData.action === CartForm.ACTIONS.LinesUpdate) {\n      for (const line of cartFormData.inputs.lines) {\n        const index = cartLines.findIndex(\n          (optimisticLine) => line.id === optimisticLine.id,\n        );\n\n        if (index > -1) {\n          if (isOptimisticLineId(cartLines[index].id)) {\n            console.error(\n              '[h2:error:useOptimisticCart] Tried to update an optimistic line that has not been added to the cart yet',\n            );\n            continue;\n          }\n\n          cartLines[index].quantity = line.quantity as number;\n\n          if (cartLines[index].quantity === 0) {\n            cartLines.splice(index, 1);\n          }\n\n          isOptimistic = true;\n        } else {\n          console.warn(\n            `[h2:warn:useOptimisticCart] Tried to update line '${line.id}' but it doesn't exist in the cart`,\n          );\n        }\n      }\n    }\n  }\n\n  if (isOptimistic) {\n    optimisticCart.isOptimistic = isOptimistic;\n  }\n\n  // Calculate the total quantity of the optimistic cart\n  optimisticCart.totalQuantity = cartLines.reduce(\n    (sum, line) => sum + line.quantity,\n    0,\n  );\n\n  return optimisticCart;\n}\n","const DEFAULT_GITHUB_CHANGELOG_URL =\n  'https://raw.githubusercontent.com/Shopify/hydrogen/main/docs/changelog.json';\n\n/**\n * A custom Remix loader handler that fetches the changelog.json from GitHub.\n * It is used by the `upgrade` command inside the route `https://hydrogen.shopify.dev/changelog.json`\n */\nexport async function changelogHandler({\n  request,\n  changelogUrl,\n}: {\n  request: Request;\n  changelogUrl?: string;\n}) {\n  const searchParams = new URL(request.url).searchParams;\n  const GITHUB_CHANGELOG_URL = changelogUrl || DEFAULT_GITHUB_CHANGELOG_URL;\n  return fetch(GITHUB_CHANGELOG_URL);\n}\n","import {LIB_VERSION} from '../version';\n\nexport const DEFAULT_CUSTOMER_API_VERSION = '2025-01';\nexport const USER_AGENT = `Shopify Hydrogen ${LIB_VERSION}`;\n// This is a static api client id: https://shopify.dev/docs/api/customer#useaccesstoken-propertydetail-audience\nexport const CUSTOMER_API_CLIENT_ID = '30243aa5-17c1-465a-8493-944bcc4e88aa';\nexport const CUSTOMER_ACCOUNT_SESSION_KEY = 'customerAccount';\nexport const BUYER_SESSION_KEY = 'buyer';\n","export class BadRequest extends Response {\n  constructor(message?: string, helpMessage?: string, headers?: HeadersInit) {\n    // A lot of things can go wrong when configuring the customer account api\n    // oauth flow. In dev mode, log a helper message.\n    if (helpMessage && process.env.NODE_ENV === 'development') {\n      console.error('Customer Account API Error: ' + helpMessage);\n    }\n\n    super(`Bad request: ${message}`, {status: 400, headers});\n  }\n}\n","import type {HydrogenSession} from '../types';\nimport {BadRequest} from './BadRequest';\nimport {\n  USER_AGENT,\n  CUSTOMER_API_CLIENT_ID,\n  CUSTOMER_ACCOUNT_SESSION_KEY,\n  BUYER_SESSION_KEY,\n} from './constants';\n\ntype H2OEvent = Parameters<NonNullable<typeof __H2O_LOG_EVENT>>[0];\n\nexport interface Locks {\n  refresh?: Promise<any>;\n}\n\nexport const logSubRequestEvent =\n  process.env.NODE_ENV === 'development'\n    ? ({\n        url,\n        response,\n        startTime,\n        query,\n        variables,\n        ...debugInfo\n      }: {\n        url: H2OEvent['url'];\n        response: Response;\n        startTime: H2OEvent['startTime'];\n        query?: string;\n        variables?: Record<string, any> | null;\n      } & Partial<H2OEvent>) => {\n        globalThis.__H2O_LOG_EVENT?.({\n          ...debugInfo,\n          eventType: 'subrequest',\n          url,\n          startTime,\n          graphql: query\n            ? JSON.stringify({query, variables, schema: 'customer-account'})\n            : undefined,\n          responseInit: {\n            status: response.status || 0,\n            statusText: response.statusText || '',\n            headers: Array.from(response.headers.entries() || []),\n          },\n        });\n      }\n    : undefined;\n\nexport function redirect(\n  path: string,\n  options: {status?: number; headers?: {}} = {},\n) {\n  const headers = options.headers\n    ? new Headers(options.headers)\n    : new Headers({});\n  headers.set('location', path);\n\n  return new Response(null, {status: options.status || 302, headers});\n}\n\nexport interface AccessTokenResponse {\n  access_token: string;\n  expires_in: number;\n  id_token: string;\n  refresh_token: string;\n  error?: string;\n  error_description?: string;\n}\n\nexport async function refreshToken({\n  session,\n  customerAccountId,\n  customerAccountTokenExchangeUrl,\n  httpsOrigin,\n  debugInfo,\n}: {\n  session: HydrogenSession;\n  customerAccountId: string;\n  customerAccountTokenExchangeUrl: string;\n  httpsOrigin: string;\n  debugInfo?: Partial<H2OEvent>;\n}) {\n  const newBody = new URLSearchParams();\n\n  const customerAccount = session.get(CUSTOMER_ACCOUNT_SESSION_KEY);\n  const refreshToken = customerAccount?.refreshToken;\n  const idToken = customerAccount?.idToken;\n\n  if (!refreshToken)\n    throw new BadRequest(\n      'Unauthorized',\n      'No refreshToken found in the session. Make sure your session is configured correctly and passed to `createCustomerAccountClient`.',\n    );\n\n  newBody.append('grant_type', 'refresh_token');\n  newBody.append('refresh_token', refreshToken);\n  newBody.append('client_id', customerAccountId);\n\n  const headers = {\n    'content-type': 'application/x-www-form-urlencoded',\n    'User-Agent': USER_AGENT,\n    Origin: httpsOrigin,\n  };\n\n  const startTime = new Date().getTime();\n  const url = customerAccountTokenExchangeUrl;\n  const response = await fetch(url, {\n    method: 'POST',\n    headers,\n    body: newBody,\n  });\n\n  logSubRequestEvent?.({\n    displayName: 'Customer Account API: access token refresh',\n    url,\n    startTime,\n    response,\n    ...debugInfo,\n  });\n\n  if (!response.ok) {\n    const text = await response.text();\n    throw new Response(text, {\n      status: response.status,\n      headers: {\n        'Content-Type': 'text/html; charset=utf-8',\n      },\n    });\n  }\n\n  const {\n    access_token,\n    expires_in,\n    refresh_token,\n  }: Omit<AccessTokenResponse, 'id_token'> = await response.json();\n\n  const accessToken = await exchangeAccessToken(\n    access_token,\n    customerAccountId,\n    customerAccountTokenExchangeUrl,\n    httpsOrigin,\n    debugInfo,\n  );\n\n  session.set(CUSTOMER_ACCOUNT_SESSION_KEY, {\n    accessToken,\n    // Store the date in future the token expires, separated by two minutes\n    expiresAt:\n      new Date(new Date().getTime() + (expires_in - 120) * 1000).getTime() + '',\n    refreshToken: refresh_token,\n    idToken,\n  });\n}\n\nexport function clearSession(session: HydrogenSession): void {\n  session.unset(CUSTOMER_ACCOUNT_SESSION_KEY);\n  session.unset(BUYER_SESSION_KEY);\n}\n\nexport async function checkExpires({\n  locks,\n  expiresAt,\n  session,\n  customerAccountId,\n  customerAccountTokenExchangeUrl,\n  httpsOrigin,\n  debugInfo,\n}: {\n  locks: Locks;\n  expiresAt: string;\n  session: HydrogenSession;\n  customerAccountId: string;\n  customerAccountTokenExchangeUrl: string;\n  httpsOrigin: string;\n  debugInfo?: Partial<H2OEvent>;\n}) {\n  if (parseInt(expiresAt, 10) - 1000 < new Date().getTime()) {\n    try {\n      // Makes sure that only one refresh request is sent at a time\n      if (!locks.refresh)\n        locks.refresh = refreshToken({\n          session,\n          customerAccountId,\n          customerAccountTokenExchangeUrl,\n          httpsOrigin,\n          debugInfo,\n        });\n\n      await locks.refresh;\n      delete locks.refresh;\n    } catch (error) {\n      clearSession(session);\n\n      if (error && (error as Response).status !== 401) {\n        throw error;\n      } else {\n        throw new BadRequest(\n          'Unauthorized',\n          'Login before querying the Customer Account API.',\n        );\n      }\n    }\n  }\n}\n\nexport function generateCodeVerifier() {\n  const rando = generateRandomCode();\n  return base64UrlEncode(rando);\n}\n\nexport async function generateCodeChallenge(codeVerifier: string) {\n  const digestOp = await crypto.subtle.digest(\n    {name: 'SHA-256'},\n    new TextEncoder().encode(codeVerifier),\n  );\n  const hash = convertBufferToString(digestOp);\n  return base64UrlEncode(hash);\n}\n\nexport function generateRandomCode() {\n  const array = new Uint8Array(32);\n  crypto.getRandomValues(array);\n  return String.fromCharCode.apply(null, Array.from(array));\n}\n\nfunction base64UrlEncode(str: string) {\n  const base64 = btoa(str);\n  // This is to ensure that the encoding does not have +, /, or = characters in it.\n  return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\n\nfunction convertBufferToString(hash: ArrayBuffer) {\n  const uintArray = new Uint8Array(hash);\n  const numberArray = Array.from(uintArray);\n  return String.fromCharCode(...numberArray);\n}\n\nexport function generateState() {\n  const timestamp = Date.now().toString();\n  const randomString = Math.random().toString(36).substring(2);\n  return timestamp + randomString;\n}\n\nexport async function exchangeAccessToken(\n  authAccessToken: string | undefined,\n  customerAccountId: string,\n  customerAccountTokenExchangeUrl: string,\n  httpsOrigin: string,\n  debugInfo?: Partial<H2OEvent>,\n) {\n  const clientId = customerAccountId;\n\n  if (!authAccessToken)\n    throw new BadRequest(\n      'Unauthorized',\n      'oAuth access token was not provided during token exchange.',\n    );\n\n  const body = new URLSearchParams();\n\n  body.append('grant_type', 'urn:ietf:params:oauth:grant-type:token-exchange');\n  body.append('client_id', clientId);\n  body.append('audience', CUSTOMER_API_CLIENT_ID);\n  body.append('subject_token', authAccessToken);\n  body.append(\n    'subject_token_type',\n    'urn:ietf:params:oauth:token-type:access_token',\n  );\n  body.append('scopes', 'https://api.customers.com/auth/customer.graphql');\n\n  const headers = {\n    'content-type': 'application/x-www-form-urlencoded',\n    'User-Agent': USER_AGENT,\n    Origin: httpsOrigin,\n  };\n\n  const startTime = new Date().getTime();\n  const url = customerAccountTokenExchangeUrl;\n  const response = await fetch(url, {\n    method: 'POST',\n    headers,\n    body,\n  });\n\n  logSubRequestEvent?.({\n    displayName: 'Customer Account API: access token exchange',\n    url,\n    startTime,\n    response,\n    ...debugInfo,\n  });\n\n  const data: AccessTokenResponse = await response.json();\n\n  if (data.error) {\n    throw new BadRequest(data.error_description);\n  }\n\n  return data.access_token;\n}\n\nexport function getNonce(token: string) {\n  return decodeJwt(token).payload.nonce;\n}\n\nfunction decodeJwt(token: string) {\n  const [header, payload, signature] = token.split('.');\n\n  const decodedHeader = JSON.parse(atob(header));\n  const decodedPayload = JSON.parse(atob(payload));\n\n  return {\n    header: decodedHeader,\n    payload: decodedPayload,\n    signature,\n  };\n}\n","export function generateNonce(): string {\n  return toHexString(randomUint8Array());\n}\n\nfunction randomUint8Array() {\n  try {\n    return crypto.getRandomValues(new Uint8Array(16));\n  } catch (e) {\n    return new Uint8Array(16).map(() => (Math.random() * 255) | 0);\n  }\n}\n\nfunction toHexString(byteArray: Uint8Array) {\n  return Array.from(byteArray, function (byte) {\n    return ('0' + (byte & 0xff).toString(16)).slice(-2);\n  }).join('');\n}\n","export function getRedirectUrl(requestUrl?: string): string | undefined {\n  if (!requestUrl) return;\n\n  const {pathname, search} = new URL(requestUrl);\n  const redirectFrom = pathname + search;\n\n  const searchParams = new URLSearchParams(search);\n  const redirectTo =\n    searchParams.get('return_to') || searchParams.get('redirect');\n\n  if (redirectTo) {\n    if (isLocalPath(requestUrl, redirectTo)) {\n      return redirectTo;\n    } else {\n      console.warn(\n        `Cross-domain redirects are not supported. Tried to redirect from ${redirectFrom} to ${redirectTo}`,\n      );\n    }\n  }\n}\n\nfunction isLocalPath(requestUrl: string, redirectUrl: string) {\n  // We don't want to redirect cross domain,\n  // doing so could create phishing vulnerability\n  // Test for protocols, e.g. https://, http://, //\n  // and uris: mailto:, tel:, javascript:, etc.\n  try {\n    return (\n      new URL(requestUrl).origin === new URL(redirectUrl, requestUrl).origin\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/** Ensure redirect url are always using request origin so we never redirect cross domain. Return the full url with request origin.\n *\n * @param requestUrl - Use to find app origin\n * @param defaultUrl - The default URL to redirect to.\n * @param redirectUrl - Relative or absolute URL of redirect. If the absolute URL is cross domain return undefined.\n * */\nexport function ensureLocalRedirectUrl({\n  requestUrl,\n  defaultUrl,\n  redirectUrl,\n}: {\n  requestUrl: string;\n  defaultUrl: string;\n  redirectUrl?: string;\n}): string {\n  const fromUrl = requestUrl;\n  const defautlUrl = buildURLObject(requestUrl, defaultUrl);\n  const toUrl = redirectUrl\n    ? buildURLObject(requestUrl, redirectUrl)\n    : defautlUrl;\n\n  if (isLocalPath(requestUrl, toUrl.toString())) {\n    return toUrl.toString();\n  } else {\n    console.warn(\n      `Cross-domain redirects are not supported. Tried to redirect from ${fromUrl} to ${toUrl}. Default url ${defautlUrl} is used instead.`,\n    );\n    return defautlUrl.toString();\n  }\n}\n\nfunction buildURLObject(\n  requestUrl: string,\n  relativeOrAbsoluteUrl: string,\n): URL {\n  return isAbsoluteUrl(relativeOrAbsoluteUrl)\n    ? new URL(relativeOrAbsoluteUrl)\n    : new URL(relativeOrAbsoluteUrl, new URL(requestUrl).origin);\n}\n\nfunction isAbsoluteUrl(url: string) {\n  try {\n    new URL(url);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n","export enum URL_TYPE {\n  CA_BASE_URL = 'CA_BASE_URL',\n  CA_BASE_AUTH_URL = 'CA_BASE_AUTH_URL',\n  GRAPHQL = 'GRAPHQL',\n  AUTH = 'AUTH',\n  LOGIN_SCOPE = 'LOGIN_SCOPE',\n  TOKEN_EXCHANGE = 'TOKEN_EXCHANGE',\n  LOGOUT = 'LOGOUT',\n}\n\nexport function createCustomerAccountHelper(\n  customerApiVersion: string,\n  shopId: string,\n) {\n  const customerAccountUrl = `https://shopify.com/${shopId}`;\n  const customerAccountAuthUrl = `https://shopify.com/authentication/${shopId}`;\n\n  return function getCustomerAccountUrl(urlType: URL_TYPE): string {\n    switch (urlType) {\n      case URL_TYPE.CA_BASE_URL:\n        return customerAccountUrl;\n      case URL_TYPE.CA_BASE_AUTH_URL:\n        return customerAccountAuthUrl;\n      case URL_TYPE.GRAPHQL:\n        return `${customerAccountUrl}/account/customer/api/${customerApiVersion}/graphql`;\n      case URL_TYPE.AUTH:\n        return `${customerAccountAuthUrl}/oauth/authorize`;\n      case URL_TYPE.LOGIN_SCOPE:\n        return shopId\n          ? 'openid email customer-account-api:full'\n          : 'openid email https://api.customers.com/auth/customer.graphql';\n      case URL_TYPE.TOKEN_EXCHANGE:\n        return `${customerAccountAuthUrl}/oauth/token`;\n      case URL_TYPE.LOGOUT:\n        return `${customerAccountAuthUrl}/logout`;\n    }\n  };\n}\n","import type {GenericVariables} from '@shopify/hydrogen-codegen';\nimport type {WritableDeep} from 'type-fest';\nimport {\n  DEFAULT_CUSTOMER_API_VERSION,\n  CUSTOMER_ACCOUNT_SESSION_KEY,\n  BUYER_SESSION_KEY,\n  USER_AGENT,\n} from './constants';\nimport {\n  clearSession,\n  generateCodeChallenge,\n  generateCodeVerifier,\n  generateState,\n  checkExpires,\n  exchangeAccessToken,\n  AccessTokenResponse,\n  getNonce,\n  redirect,\n  Locks,\n  logSubRequestEvent,\n} from './auth.helpers';\nimport {BadRequest} from './BadRequest';\nimport {generateNonce} from '../csp/nonce';\nimport {\n  minifyQuery,\n  assertQuery,\n  assertMutation,\n  throwErrorWithGqlLink,\n  type GraphQLErrorOptions,\n  GraphQLError,\n} from '../utils/graphql';\nimport {parseJSON} from '../utils/parse-json';\nimport {\n  CrossRuntimeRequest,\n  getHeader,\n  getDebugHeaders,\n} from '../utils/request';\nimport {getCallerStackLine, withSyncStack} from '../utils/callsites';\nimport {\n  getRedirectUrl,\n  ensureLocalRedirectUrl,\n} from '../utils/get-redirect-url';\nimport type {\n  CustomerAccountOptions,\n  CustomerAccount,\n  CustomerAPIResponse,\n  LoginOptions,\n  LogoutOptions,\n  Buyer,\n} from './types';\nimport {createCustomerAccountHelper, URL_TYPE} from './customer-account-helper';\nimport {warnOnce} from '../utils/warning';\nimport {LanguageCode} from '@shopify/hydrogen-react/storefront-api-types';\n\nfunction defaultAuthStatusHandler(\n  request: CrossRuntimeRequest,\n  defaultLoginUrl: string,\n) {\n  if (!request.url) return defaultLoginUrl;\n\n  const {pathname} = new URL(request.url);\n\n  /**\n   * Remix (single-fetch) request objects have different url\n   * paths when soft navigating. Examples:\n   *\n   *    /_root.data          - home page\n   *    /collections.data    - collections page\n   *\n   * These url annotations needs to be cleaned up before constructing urls to be passed as\n   * GET parameters for customer login url\n   */\n  const cleanedPathname = pathname\n    .replace(/\\.data$/, '')\n    .replace(/\\/_root$/, '/')\n    .replace(/(.+)\\/$/, '$1');\n\n  const redirectTo =\n    defaultLoginUrl +\n    `?${new URLSearchParams({return_to: cleanedPathname}).toString()}`;\n\n  return redirect(redirectTo);\n}\n\nexport function createCustomerAccountClient({\n  session,\n  customerAccountId,\n  shopId,\n  customerApiVersion = DEFAULT_CUSTOMER_API_VERSION,\n  request,\n  waitUntil,\n  authUrl,\n  customAuthStatusHandler,\n  logErrors = true,\n  loginPath = '/account/login',\n  authorizePath = '/account/authorize',\n  defaultRedirectPath = '/account',\n  language,\n}: CustomerAccountOptions): CustomerAccount {\n  if (customerApiVersion !== DEFAULT_CUSTOMER_API_VERSION) {\n    console.warn(\n      `[h2:warn:createCustomerAccountClient] You are using Customer Account API version ${customerApiVersion} when this version of Hydrogen was built for ${DEFAULT_CUSTOMER_API_VERSION}.`,\n    );\n  }\n\n  if (!session) {\n    console.warn(\n      `[h2:warn:createCustomerAccountClient] session is required to use Customer Account API. Ensure the session object passed in exist.`,\n    );\n  }\n\n  if (!request?.url) {\n    throw new Error(\n      '[h2:error:createCustomerAccountClient] The request object does not contain a URL.',\n    );\n  }\n\n  const authStatusHandler = customAuthStatusHandler\n    ? customAuthStatusHandler\n    : () => defaultAuthStatusHandler(request, loginPath);\n\n  const requestUrl = new URL(request.url);\n  const httpsOrigin =\n    requestUrl.protocol === 'http:'\n      ? requestUrl.origin.replace('http', 'https')\n      : requestUrl.origin;\n  const redirectUri = ensureLocalRedirectUrl({\n    requestUrl: httpsOrigin,\n    defaultUrl: authorizePath,\n    redirectUrl: authUrl,\n  });\n\n  const getCustomerAccountUrl = createCustomerAccountHelper(\n    customerApiVersion,\n    shopId,\n  );\n\n  const ifInvalidCredentialThrowError = createIfInvalidCredentialThrowError(\n    getCustomerAccountUrl,\n    customerAccountId,\n  );\n\n  const customerAccountApiUrl = getCustomerAccountUrl(URL_TYPE.GRAPHQL);\n  const locks: Locks = {};\n\n  async function fetchCustomerAPI<T>({\n    query,\n    type,\n    variables = {},\n  }: {\n    query: string;\n    type: 'query' | 'mutation';\n    variables?: GenericVariables;\n  }) {\n    const accessToken = await getAccessToken();\n    if (!accessToken) {\n      throw authStatusHandler();\n    }\n\n    // Get stack trace before losing it with any async operation.\n    // Since this is an internal function that is always called from\n    // the public query/mutate wrappers, add 1 to the stack offset.\n    const stackInfo = getCallerStackLine?.();\n\n    const startTime = new Date().getTime();\n\n    const response = await fetch(customerAccountApiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'User-Agent': USER_AGENT,\n        Origin: httpsOrigin,\n        Authorization: accessToken,\n      },\n      body: JSON.stringify({query, variables}),\n    });\n\n    logSubRequestEvent?.({\n      url: customerAccountApiUrl,\n      startTime,\n      response,\n      waitUntil,\n      stackInfo,\n      query,\n      variables,\n      ...getDebugHeaders(request),\n    });\n\n    const body = await response.text();\n\n    const errorOptions: GraphQLErrorOptions<T> = {\n      url: customerAccountApiUrl,\n      response,\n      type,\n      query,\n      queryVariables: variables,\n      errors: undefined,\n      client: 'customer',\n    };\n\n    if (!response.ok) {\n      if (response.status === 401) {\n        // clear session because current access token is invalid\n        clearSession(session);\n\n        const authFailResponse = authStatusHandler();\n        throw authFailResponse;\n      }\n\n      /**\n       * The Customer API might return a string error, or a JSON-formatted {error: string}.\n       * We try both and conform them to a single {errors} format.\n       */\n      let errors;\n      try {\n        errors = parseJSON(body);\n      } catch (_e) {\n        errors = [{message: body}];\n      }\n\n      throwErrorWithGqlLink({...errorOptions, errors});\n    }\n\n    try {\n      const APIresponse = parseJSON(body) as CustomerAPIResponse<T>;\n      const {errors} = APIresponse;\n\n      const gqlErrors = errors?.map(\n        ({message, ...rest}) =>\n          new GraphQLError(message, {\n            ...(rest as WritableDeep<typeof rest>),\n            clientOperation: `customerAccount.${errorOptions.type}`,\n            requestId: response.headers.get('x-request-id'),\n            queryVariables: variables,\n            query,\n          }),\n      );\n\n      return {...APIresponse, ...(errors && {errors: gqlErrors})};\n    } catch (e) {\n      throwErrorWithGqlLink({...errorOptions, errors: [{message: body}]});\n    }\n  }\n\n  async function isLoggedIn() {\n    if (!shopId) return false;\n\n    const customerAccount = session.get(CUSTOMER_ACCOUNT_SESSION_KEY);\n    const accessToken = customerAccount?.accessToken;\n    const expiresAt = customerAccount?.expiresAt;\n\n    if (!accessToken || !expiresAt) return false;\n\n    // Get stack trace before losing it with any async operation.\n    const stackInfo = getCallerStackLine?.();\n\n    try {\n      await checkExpires({\n        locks,\n        expiresAt,\n        session,\n        customerAccountId,\n        customerAccountTokenExchangeUrl: getCustomerAccountUrl(\n          URL_TYPE.TOKEN_EXCHANGE,\n        ),\n        httpsOrigin,\n        debugInfo: {\n          waitUntil,\n          stackInfo,\n          ...getDebugHeaders(request),\n        },\n      });\n    } catch {\n      return false;\n    }\n\n    return true;\n  }\n\n  async function handleAuthStatus() {\n    if (!(await isLoggedIn())) {\n      throw authStatusHandler();\n    }\n  }\n\n  async function getAccessToken() {\n    const hasAccessToken = await isLoggedIn();\n\n    if (hasAccessToken)\n      return session.get(CUSTOMER_ACCOUNT_SESSION_KEY)?.accessToken;\n  }\n\n  async function mutate(\n    mutation: Parameters<CustomerAccount['mutate']>[0],\n    options?: Parameters<CustomerAccount['mutate']>[1],\n  ) {\n    ifInvalidCredentialThrowError();\n\n    mutation = minifyQuery(mutation);\n    assertMutation(mutation, 'customer.mutate');\n\n    return withSyncStack(\n      fetchCustomerAPI({query: mutation, type: 'mutation', ...options}),\n      {logErrors},\n    );\n  }\n\n  async function query(\n    query: Parameters<CustomerAccount['query']>[0],\n    options?: Parameters<CustomerAccount['query']>[1],\n  ) {\n    ifInvalidCredentialThrowError();\n\n    query = minifyQuery(query);\n    assertQuery(query, 'customer.query');\n\n    return withSyncStack(fetchCustomerAPI({query, type: 'query', ...options}), {\n      logErrors,\n    });\n  }\n\n  function setBuyer(buyer: Buyer) {\n    session.set(BUYER_SESSION_KEY, {\n      ...session.get(BUYER_SESSION_KEY),\n      ...buyer,\n    });\n  }\n\n  async function getBuyer() {\n    // get access token and trigger refresh if expire\n    const customerAccessToken = await getAccessToken();\n\n    if (!customerAccessToken) {\n      return;\n    }\n\n    return {...session.get(BUYER_SESSION_KEY), customerAccessToken};\n  }\n\n  return {\n    login: async (options?: LoginOptions) => {\n      ifInvalidCredentialThrowError();\n      const loginUrl = new URL(getCustomerAccountUrl(URL_TYPE.AUTH));\n\n      const state = generateState();\n      const nonce = generateNonce();\n\n      loginUrl.searchParams.set('client_id', customerAccountId);\n      loginUrl.searchParams.set('scope', 'openid email');\n      loginUrl.searchParams.append('response_type', 'code');\n      loginUrl.searchParams.append('redirect_uri', redirectUri);\n      loginUrl.searchParams.set(\n        'scope',\n        getCustomerAccountUrl(URL_TYPE.LOGIN_SCOPE),\n      );\n      loginUrl.searchParams.append('state', state);\n      loginUrl.searchParams.append('nonce', nonce);\n\n      const uiLocales = getMaybeUILocales({\n        contextLanguage: language ?? null,\n        uiLocalesOverride: options?.uiLocales ?? null,\n      });\n      if (uiLocales != null) {\n        loginUrl.searchParams.append('ui_locales', uiLocales);\n      }\n\n      const verifier = generateCodeVerifier();\n      const challenge = await generateCodeChallenge(verifier);\n\n      session.set(CUSTOMER_ACCOUNT_SESSION_KEY, {\n        ...session.get(CUSTOMER_ACCOUNT_SESSION_KEY),\n        codeVerifier: verifier,\n        state,\n        nonce,\n        redirectPath:\n          getRedirectUrl(request.url) ||\n          getHeader(request, 'Referer') ||\n          defaultRedirectPath,\n      });\n\n      loginUrl.searchParams.append('code_challenge', challenge);\n      loginUrl.searchParams.append('code_challenge_method', 'S256');\n\n      return redirect(loginUrl.toString());\n    },\n\n    logout: async (options?: LogoutOptions) => {\n      ifInvalidCredentialThrowError();\n\n      const idToken = session.get(CUSTOMER_ACCOUNT_SESSION_KEY)?.idToken;\n      const postLogoutRedirectUri = ensureLocalRedirectUrl({\n        requestUrl: httpsOrigin,\n        defaultUrl: httpsOrigin,\n        redirectUrl: options?.postLogoutRedirectUri,\n      });\n\n      const logoutUrl = idToken\n        ? new URL(\n            `${getCustomerAccountUrl(URL_TYPE.LOGOUT)}?${new URLSearchParams([\n              ['id_token_hint', idToken],\n              ['post_logout_redirect_uri', postLogoutRedirectUri],\n            ]).toString()}`,\n          ).toString()\n        : postLogoutRedirectUri;\n\n      clearSession(session);\n\n      return redirect(logoutUrl, {headers: options?.headers || {}});\n    },\n    isLoggedIn,\n    handleAuthStatus,\n    getAccessToken,\n    getApiUrl: () => customerAccountApiUrl,\n    mutate: mutate as CustomerAccount['mutate'],\n    query: query as CustomerAccount['query'],\n    authorize: async () => {\n      ifInvalidCredentialThrowError();\n\n      const code = requestUrl.searchParams.get('code');\n      const state = requestUrl.searchParams.get('state');\n\n      if (!code || !state) {\n        clearSession(session);\n\n        throw new BadRequest(\n          'Unauthorized',\n          'No code or state parameter found in the redirect URL.',\n        );\n      }\n\n      if (session.get(CUSTOMER_ACCOUNT_SESSION_KEY)?.state !== state) {\n        clearSession(session);\n\n        throw new BadRequest(\n          'Unauthorized',\n          'The session state does not match the state parameter. Make sure that the session is configured correctly and passed to `createCustomerAccountClient`.',\n        );\n      }\n\n      const clientId = customerAccountId;\n      const body = new URLSearchParams();\n\n      body.append('grant_type', 'authorization_code');\n      body.append('client_id', clientId);\n      body.append('redirect_uri', redirectUri);\n      body.append('code', code);\n\n      // Public Client\n      const codeVerifier = session.get(\n        CUSTOMER_ACCOUNT_SESSION_KEY,\n      )?.codeVerifier;\n\n      if (!codeVerifier)\n        throw new BadRequest(\n          'Unauthorized',\n          'No code verifier found in the session. Make sure that the session is configured correctly and passed to `createCustomerAccountClient`.',\n        );\n\n      body.append('code_verifier', codeVerifier);\n\n      const headers = {\n        'content-type': 'application/x-www-form-urlencoded',\n        'User-Agent': USER_AGENT,\n        Origin: httpsOrigin,\n      };\n\n      const stackInfo = getCallerStackLine?.();\n      const startTime = new Date().getTime();\n      const url = getCustomerAccountUrl(URL_TYPE.TOKEN_EXCHANGE);\n      const response = await fetch(url, {\n        method: 'POST',\n        headers,\n        body,\n      });\n\n      logSubRequestEvent?.({\n        url,\n        displayName: 'Customer Account API: authorize',\n        startTime,\n        response,\n        waitUntil,\n        stackInfo,\n        ...getDebugHeaders(request),\n      });\n\n      if (!response.ok) {\n        throw new Response(await response.text(), {\n          status: response.status,\n          headers: {\n            'Content-Type': 'text/html; charset=utf-8',\n          },\n        });\n      }\n\n      const {\n        access_token,\n        expires_in,\n        id_token,\n        refresh_token,\n      }: AccessTokenResponse = await response.json();\n\n      const sessionNonce = session.get(CUSTOMER_ACCOUNT_SESSION_KEY)?.nonce;\n      const responseNonce = await getNonce(id_token);\n\n      if (sessionNonce !== responseNonce) {\n        throw new BadRequest(\n          'Unauthorized',\n          `Returned nonce does not match: ${sessionNonce} !== ${responseNonce}`,\n        );\n      }\n\n      let customerAccessToken = access_token;\n\n      if (!shopId) {\n        customerAccessToken = await exchangeAccessToken(\n          access_token,\n          customerAccountId,\n          getCustomerAccountUrl(URL_TYPE.TOKEN_EXCHANGE),\n          httpsOrigin,\n          {\n            waitUntil,\n            stackInfo,\n            ...getDebugHeaders(request),\n          },\n        );\n      }\n\n      const redirectPath = session.get(\n        CUSTOMER_ACCOUNT_SESSION_KEY,\n      )?.redirectPath;\n\n      session.set(CUSTOMER_ACCOUNT_SESSION_KEY, {\n        accessToken: customerAccessToken,\n        expiresAt:\n          new Date(new Date().getTime() + (expires_in - 120) * 1000).getTime() +\n          '',\n        refreshToken: refresh_token,\n        idToken: id_token,\n      });\n\n      return redirect(redirectPath || defaultRedirectPath);\n    },\n    setBuyer,\n    getBuyer,\n    UNSTABLE_setBuyer: (buyer: Buyer) => {\n      warnOnce(\n        '[h2:warn:customerAccount] `customerAccount.UNSTABLE_setBuyer` is deprecated. Please use `customerAccount.setBuyer`.',\n      );\n\n      setBuyer(buyer);\n    },\n    UNSTABLE_getBuyer: () => {\n      warnOnce(\n        '[h2:warn:customerAccount] `customerAccount.UNSTABLE_getBuyer` is deprecated. Please use `customerAccount.getBuyer`.',\n      );\n\n      return getBuyer();\n    },\n  };\n}\n\nfunction createIfInvalidCredentialThrowError(\n  getCustomerAccountUrl: (urlType: URL_TYPE) => string,\n  customerAccountId?: string,\n) {\n  return function ifInvalidCredentialThrowError() {\n    try {\n      if (!customerAccountId) throw Error();\n\n      new URL(getCustomerAccountUrl(URL_TYPE.CA_BASE_URL));\n      new URL(getCustomerAccountUrl(URL_TYPE.CA_BASE_AUTH_URL));\n    } catch {\n      console.error(\n        new Error(\n          '[h2:error:customerAccount] You do not have the valid credential to use Customer Account API.\\nRun `h2 env pull` to link your store credentials.',\n        ),\n      );\n\n      const publicMessage =\n        process.env.NODE_ENV === 'production'\n          ? 'Internal Server Error'\n          : 'You do not have the valid credential to use Customer Account API (/account).';\n\n      throw new Response(publicMessage, {status: 500});\n    }\n  };\n}\n\n/**\n * This function returns a locale string in the form <language>[-<COUNTRY_CODE>], based on the provided input params.\n * If both the i18n and the uiLocalesOverride are provided, the uiLocalesOverride will be used.\n * If none of the params are provided, it returns null.\n */\nexport function getMaybeUILocales(params: {\n  contextLanguage: LanguageCode | null;\n  uiLocalesOverride: LanguageCode | null; // this will override contextLanguage if both are provided\n}): string | null {\n  const contextLocale = toMaybeLocaleString(params.contextLanguage ?? null);\n  const optionsLocale = toMaybeLocaleString(params.uiLocalesOverride);\n\n  return optionsLocale ?? contextLocale ?? null;\n}\n\nfunction toMaybeLocaleString(language: LanguageCode | null): string | null {\n  if (language == null) {\n    return null;\n  }\n\n  const normalizedLanguage = maybeEnforceRegionalVariant(language);\n\n  const base = normalizedLanguage.toLowerCase().replaceAll('_', '-');\n  const tokens = base.split('-');\n  const langToken = tokens.at(0) ?? null;\n  const regionToken = tokens.at(1) ?? null;\n\n  if (regionToken) {\n    return `${langToken}-${regionToken.toUpperCase()}`;\n  }\n\n  return langToken;\n}\n\n// See https://shopify.dev/docs/api/customer#authorization-propertydetail-uilocales\nconst regionalLanguageOverrides: Partial<Record<LanguageCode, LanguageCode>> = {\n  PT: 'PT_PT',\n  ZH: 'ZH_CN',\n};\n\nfunction maybeEnforceRegionalVariant(language: LanguageCode): LanguageCode {\n  return regionalLanguageOverrides[language] ?? language;\n}\n","import {\n  createStorefrontClient,\n  type CreateStorefrontClientOptions,\n  type StorefrontClient,\n  type I18nBase,\n} from './storefront';\nimport {createCustomerAccountClient} from './customer/customer';\nimport {\n  type CustomerAccountOptions,\n  type CustomerAccount,\n} from './customer/types';\nimport {\n  createCartHandler,\n  type CartHandlerOptions,\n  type CustomMethodsBase,\n  type HydrogenCart,\n  type HydrogenCartCustom,\n} from './cart/createCartHandler';\nimport {cartGetIdDefault} from './cart/cartGetIdDefault';\nimport {cartSetIdDefault} from './cart/cartSetIdDefault';\nimport type {\n  HydrogenEnv,\n  WaitUntil,\n  HydrogenSession,\n  StorefrontHeaders,\n} from './types';\nimport {type CrossRuntimeRequest, getHeader} from './utils/request';\nimport {warnOnce} from './utils/warning';\n\nexport type HydrogenContextOptions<\n  TSession extends HydrogenSession = HydrogenSession,\n  TCustomMethods extends CustomMethodsBase | undefined = {},\n  TI18n extends I18nBase = I18nBase,\n  TEnv extends HydrogenEnv = Env,\n> = {\n  /* Environment variables from the fetch function */\n  env: TEnv;\n  /* Request object from the fetch function */\n  request: CrossRuntimeRequest;\n  /** An instance that implements the [Cache API](https://developer.mozilla.org/en-US/docs/Web/API/Cache) */\n  cache?: Cache;\n  /** The `waitUntil` function is used to keep the current request/response lifecycle alive even after a response has been sent. It should be provided by your platform. */\n  waitUntil?: WaitUntil;\n  /** Any cookie implementation. By default Hydrogen ships with cookie session storage, but you can use [another session storage](https://remix.run/docs/en/main/utils/sessions) implementation.  */\n  session: TSession;\n  /** An object containing a country code and language code */\n  i18n?: TI18n;\n  /** Whether it should print GraphQL errors automatically. Defaults to true */\n  logErrors?: boolean | ((error?: Error) => boolean);\n  /** Storefront client overwrite options. See documentation for createStorefrontClient for more information. */\n  storefront?: {\n    /** Storefront API headers. Default values set from request header.  */\n    headers?: CreateStorefrontClientOptions<TI18n>['storefrontHeaders'];\n    /** Override the Storefront API version for this query. */\n    apiVersion?: CreateStorefrontClientOptions<TI18n>['storefrontApiVersion'];\n  };\n  /** Customer Account client overwrite options. See documentation for createCustomerAccountClient for more information. */\n  customerAccount?: {\n    /** Override the version of the API */\n    apiVersion?: CustomerAccountOptions['customerApiVersion'];\n    /** This is the route in your app that authorizes the customer after logging in. Make sure to call `customer.authorize()` within the loader on this route. It defaults to `/account/authorize`. */\n    authUrl?: CustomerAccountOptions['authUrl'];\n    /** Use this method to overwrite the default logged-out redirect behavior. The default handler [throws a redirect](https://remix.run/docs/en/main/utils/redirect#:~:text=!session) to `/account/login` with current path as `return_to` query param. */\n    customAuthStatusHandler?: CustomerAccountOptions['customAuthStatusHandler'];\n    /** Deprecated. `unstableB2b` is now stable. Please remove. */\n    unstableB2b?: CustomerAccountOptions['unstableB2b'];\n  };\n  /** Cart handler overwrite options. See documentation for createCartHandler for more information. */\n  cart?: {\n    /** A function that returns the cart id in the form of `gid://shopify/Cart/c1-123`. */\n    getId?: CartHandlerOptions['getCartId'];\n    /** A function that sets the cart ID. */\n    setId?: CartHandlerOptions['setCartId'];\n    /**\n     * The cart query fragment used by `cart.get()`.\n     * See the [example usage](/docs/api/hydrogen/2025-01/utilities/createcarthandler#example-cart-fragments) in the documentation.\n     */\n    queryFragment?: CartHandlerOptions['cartQueryFragment'];\n    /**\n     * The cart mutation fragment used in most mutation requests, except for `setMetafields` and `deleteMetafield`.\n     * See the [example usage](/docs/api/hydrogen/2025-01/utilities/createcarthandler#example-cart-fragments) in the documentation.\n     */\n    mutateFragment?: CartHandlerOptions['cartMutateFragment'];\n    /**\n     * Define custom methods or override existing methods for your cart API instance.\n     * See the [example usage](/docs/api/hydrogen/2025-01/utilities/createcarthandler#example-custom-methods) in the documentation.\n     */\n    customMethods?: TCustomMethods;\n  };\n};\n\nexport interface HydrogenContext<\n  TSession extends HydrogenSession = HydrogenSession,\n  TCustomMethods extends CustomMethodsBase | undefined = {},\n  TI18n extends I18nBase = I18nBase,\n  TEnv extends HydrogenEnv = Env,\n> {\n  /** A GraphQL client for querying the [Storefront API](https://shopify.dev/docs/api/storefront). */\n  storefront: StorefrontClient<TI18n>['storefront'];\n  /** A GraphQL client for querying the [Customer Account API](https://shopify.dev/docs/api/customer). It also provides methods to authenticate and check if the user is logged in. */\n  customerAccount: CustomerAccount;\n  /** A collection of utilities used to interact with the cart. */\n  cart: TCustomMethods extends CustomMethodsBase\n    ? HydrogenCartCustom<TCustomMethods>\n    : HydrogenCart;\n  /* Request object from the fetch function */\n  env: TEnv;\n  /** The `waitUntil` function is used to keep the current request/response lifecycle alive even after a response has been sent. It should be provided by your platform. */\n  waitUntil?: WaitUntil;\n  /** Any cookie implementation. By default Hydrogen ships with cookie session storage, but you can use [another session storage](https://remix.run/docs/en/main/utils/sessions) implementation.  */\n  session: TSession;\n}\n\n// Since HydrogenContext uses a conditional type with a free type parameter,\n// TS cannot definitively determine what the return type should be within the function body\n// HydrogenContextOverloads is use to restore type assertions so we don't need to do type casting\nexport interface HydrogenContextOverloads<\n  TSession extends HydrogenSession,\n  TCustomMethods extends CustomMethodsBase,\n  TI18n extends I18nBase = I18nBase,\n  TEnv extends HydrogenEnv = Env,\n> {\n  storefront: StorefrontClient<TI18n>['storefront'];\n  customerAccount: CustomerAccount;\n  cart: HydrogenCart | HydrogenCartCustom<TCustomMethods>;\n  env: TEnv;\n  waitUntil?: WaitUntil;\n  session: TSession;\n}\n\n// type for createHydrogenContext methods\nexport function createHydrogenContext<\n  TSession extends HydrogenSession = HydrogenSession,\n  TCustomMethods extends CustomMethodsBase | undefined = {},\n  TI18n extends I18nBase = I18nBase,\n  TEnv extends HydrogenEnv = Env,\n>(\n  options: HydrogenContextOptions<TSession, TCustomMethods, TI18n, TEnv>,\n): HydrogenContext<TSession, TCustomMethods, TI18n, TEnv>;\n\nexport function createHydrogenContext<\n  TSession extends HydrogenSession,\n  TCustomMethods extends CustomMethodsBase,\n  TI18n extends I18nBase,\n  TEnv extends HydrogenEnv = Env,\n>(\n  options: HydrogenContextOptions<TSession, TCustomMethods, TI18n, TEnv>,\n): HydrogenContextOverloads<TSession, TCustomMethods, TI18n, TEnv> {\n  const {\n    env,\n    request,\n    cache,\n    waitUntil,\n    i18n,\n    session,\n    logErrors,\n    storefront: storefrontOptions = {},\n    customerAccount: customerAccountOptions,\n    cart: cartOptions = {},\n  } = options;\n\n  if (!session) {\n    console.warn(\n      `[h2:warn:createHydrogenContext] A session object is required to create hydrogen context.`,\n    );\n  }\n\n  if (customerAccountOptions?.unstableB2b) {\n    warnOnce(\n      '[h2:warn:createHydrogenContext] `customerAccount.unstableB2b` is now stable. Please remove the `unstableB2b` option.',\n    );\n  }\n\n  /**\n   * Create Hydrogen's Storefront client.\n   */\n  const {storefront} = createStorefrontClient<TI18n>({\n    // share options\n    cache,\n    waitUntil,\n    i18n,\n    logErrors,\n\n    // storefrontOptions\n    storefrontHeaders:\n      storefrontOptions.headers || getStorefrontHeaders(request),\n    storefrontApiVersion: storefrontOptions.apiVersion,\n\n    // defaults\n    storefrontId: env.PUBLIC_STOREFRONT_ID,\n    storeDomain: env.PUBLIC_STORE_DOMAIN,\n    privateStorefrontToken: env.PRIVATE_STOREFRONT_API_TOKEN,\n    publicStorefrontToken: env.PUBLIC_STOREFRONT_API_TOKEN,\n  });\n\n  const customerAccount = createCustomerAccountClient({\n    // share options\n    session,\n    request,\n    waitUntil,\n    logErrors,\n\n    // customerAccountOptions\n    customerApiVersion: customerAccountOptions?.apiVersion,\n    authUrl: customerAccountOptions?.authUrl,\n    customAuthStatusHandler: customerAccountOptions?.customAuthStatusHandler,\n\n    // locale\n    language: i18n?.language,\n\n    // defaults\n    customerAccountId: env.PUBLIC_CUSTOMER_ACCOUNT_API_CLIENT_ID,\n    shopId: env.SHOP_ID,\n  });\n\n  /*\n   * Create a cart handler that will be used to\n   * create and update the cart in the session.\n   */\n  const cart = createCartHandler({\n    // cartOptions\n    getCartId: cartOptions.getId || cartGetIdDefault(request.headers),\n    setCartId: cartOptions.setId || cartSetIdDefault(),\n    cartQueryFragment: cartOptions.queryFragment,\n    cartMutateFragment: cartOptions.mutateFragment,\n    customMethods: cartOptions.customMethods,\n\n    // defaults\n    storefront,\n    customerAccount,\n  });\n\n  return {\n    storefront,\n    customerAccount,\n    cart,\n    env,\n    waitUntil,\n    session,\n  };\n}\n\nfunction getStorefrontHeaders(request: CrossRuntimeRequest): StorefrontHeaders {\n  return {\n    requestGroupId: getHeader(request, 'request-id'),\n    buyerIp: getHeader(request, 'oxygen-buyer-ip'),\n    cookie: getHeader(request, 'cookie'),\n    purpose: getHeader(request, 'purpose'),\n  };\n}\n\nexport type HydrogenContextOptionsForDocs<\n  TSession extends HydrogenSession = HydrogenSession,\n  TI18n extends I18nBase = I18nBase,\n  TEnv extends HydrogenEnv = Env,\n> = {\n  /* Environment variables from the fetch function */\n  env: TEnv;\n  /* Request object from the fetch function */\n  request: CrossRuntimeRequest;\n  /** An instance that implements the [Cache API](https://developer.mozilla.org/en-US/docs/Web/API/Cache) */\n  cache?: Cache;\n  /** The `waitUntil` function is used to keep the current request/response lifecycle alive even after a response has been sent. It should be provided by your platform. */\n  waitUntil?: WaitUntil;\n  /** Any cookie implementation. By default Hydrogen ships with cookie session storage, but you can use [another session storage](https://remix.run/docs/en/main/utils/sessions) implementation.  */\n  session: TSession;\n  /** An object containing a country code and language code */\n  i18n?: TI18n;\n  /** Whether it should print GraphQL errors automatically. Defaults to true */\n  logErrors?: boolean | ((error?: Error) => boolean);\n  /** Storefront client overwrite options. See documentation for createStorefrontClient for more information. */\n  storefront?: {\n    /** Storefront API headers. Default values set from request header.  */\n    headers?: StorefrontHeaders;\n    /** Override the Storefront API version for this query. */\n    apiVersion?: string;\n  };\n  /** Customer Account client overwrite options. See documentation for createCustomerAccountClient for more information. */\n  customerAccount?: {\n    /** Override the version of the API */\n    apiVersion?: string;\n    /** This is the route in your app that authorizes the customer after logging in. Make sure to call `customer.authorize()` within the loader on this route. It defaults to `/account/authorize`. */\n    authUrl?: string;\n    /** Use this method to overwrite the default logged-out redirect behavior. The default handler [throws a redirect](https://remix.run/docs/en/main/utils/redirect#:~:text=!session) to `/account/login` with current path as `return_to` query param. */\n    customAuthStatusHandler?: () => Response | NonNullable<unknown> | null;\n    /** Deprecated. `unstableB2b` is now stable. Please remove. */\n    unstableB2b?: boolean;\n  };\n  /** Cart handler overwrite options. See documentation for createCartHandler for more information. */\n  cart?: {\n    /** A function that returns the cart id in the form of `gid://shopify/Cart/c1-123`. */\n    getId?: () => string | undefined;\n    /** A function that sets the cart ID. */\n    setId?: (cartId: string) => Headers;\n    /**\n     * The cart query fragment used by `cart.get()`.\n     * See the [example usage](/docs/api/hydrogen/2025-01/utilities/createcarthandler#example-cart-fragments) in the documentation.\n     */\n    queryFragment?: string;\n    /**\n     * The cart mutation fragment used in most mutation requests, except for `setMetafields` and `deleteMetafield`.\n     * See the [example usage](/docs/api/hydrogen/2025-01/utilities/createcarthandler#example-cart-fragments) in the documentation.\n     */\n    mutateFragment?: string;\n    /**\n     * Define custom methods or override existing methods for your cart API instance.\n     * See the [example usage](/docs/api/hydrogen/2025-01/utilities/createcarthandler#example-custom-methods) in the documentation.\n     */\n    customMethods?: Record<string, Function>;\n  };\n};\n","import {\n  type ComponentType,\n  createContext,\n  createElement,\n  type ReactNode,\n  useContext,\n} from 'react';\nimport cspBuilder from 'content-security-policy-builder';\nimport {generateNonce} from './nonce';\n\nexport const NonceContext = createContext<string | undefined>(undefined);\nexport const NonceProvider = NonceContext.Provider;\n\nexport const useNonce = () => useContext(NonceContext);\n\ntype ContentSecurityPolicy = {\n  /** A randomly generated nonce string that should be passed to any custom `script` element */\n  nonce: string;\n  /** The content security policy header */\n  header: string;\n  NonceProvider: ComponentType<{children: ReactNode}>;\n};\n\ntype DirectiveValues = string[] | string | boolean;\n\ntype CreateContentSecurityPolicy = {\n  defaultSrc?: DirectiveValues;\n  scriptSrc?: DirectiveValues;\n  scriptSrcElem?: DirectiveValues;\n  styleSrc?: DirectiveValues;\n  imgSrc?: DirectiveValues;\n  connectSrc?: DirectiveValues;\n  fontSrc?: DirectiveValues;\n  objectSrc?: DirectiveValues;\n  mediaSrc?: DirectiveValues;\n  frameSrc?: DirectiveValues;\n  sandbox?: DirectiveValues;\n  reportUri?: DirectiveValues;\n  childSrc?: DirectiveValues;\n  formAction?: DirectiveValues;\n  frameAncestors?: DirectiveValues;\n  pluginTypes?: DirectiveValues;\n  baseUri?: DirectiveValues;\n  reportTo?: DirectiveValues;\n  workerSrc?: DirectiveValues;\n  manifestSrc?: DirectiveValues;\n  prefetchSrc?: DirectiveValues;\n  navigateTo?: DirectiveValues;\n  upgradeInsecureRequests?: boolean;\n  blockAllMixedContent?: boolean;\n};\n\ntype ShopifyDomains = {\n  /** The production shop checkout domain url.  */\n  checkoutDomain?: string;\n  /** The production shop domain url. */\n  storeDomain?: string;\n};\n\ntype ShopProp = {\n  /** Shop specific configurations */\n  shop?: ShopifyDomains;\n};\n\n/**\n * @param directives - Pass custom [content security policy directives](https://content-security-policy.com/). This is important if you load content in your app from third-party domains.\n */\nexport function createContentSecurityPolicy(\n  props?: CreateContentSecurityPolicy & ShopProp,\n): ContentSecurityPolicy {\n  const nonce = generateNonce();\n  const header = createCSPHeader(nonce, props);\n\n  const Provider = ({children}: {children: ReactNode}) => {\n    return createElement(NonceProvider, {value: nonce}, children);\n  };\n\n  return {\n    nonce,\n    header,\n    NonceProvider: Provider,\n  };\n}\n\nfunction createCSPHeader(\n  nonce: string,\n  props?: CreateContentSecurityPolicy & ShopProp,\n): string {\n  const {shop, ...directives} = props ?? {};\n  const nonceString = `'nonce-${nonce}'`;\n  const styleSrc = [\"'self'\", \"'unsafe-inline'\", 'https://cdn.shopify.com'];\n  const connectSrc = [\"'self'\", 'https://monorail-edge.shopifysvc.com'];\n  if (shop && shop.checkoutDomain) {\n    connectSrc.push(`https://${shop.checkoutDomain}`);\n  }\n\n  if (shop && shop.storeDomain) {\n    connectSrc.push(`https://${shop.storeDomain}`);\n  }\n\n  const defaultSrc = [\n    \"'self'\",\n    nonceString,\n    'https://cdn.shopify.com',\n    // Used for the Customer Account API\n    'https://shopify.com',\n  ];\n\n  const defaultDirectives: Record<string, string[] | string | boolean> = {\n    baseUri: [\"'self'\"],\n    defaultSrc,\n    frameAncestors: [\"'none'\"],\n    styleSrc,\n    connectSrc,\n  };\n\n  // Support localhost in development\n  if (process.env.NODE_ENV === 'development') {\n    defaultDirectives.styleSrc = [...styleSrc, 'http://localhost:*'];\n    defaultDirectives.defaultSrc = [...defaultSrc, 'http://localhost:*'];\n    defaultDirectives.connectSrc = [\n      ...connectSrc,\n      'http://localhost:*',\n      // For HMR:\n      'ws://localhost:*',\n      'ws://127.0.0.1:*',\n      'ws://*.tryhydrogen.dev:*',\n    ];\n  }\n\n  const combinedDirectives = Object.assign({}, defaultDirectives, directives);\n\n  //add defaults if it was override\n  for (const key in defaultDirectives) {\n    const directive = directives[key as keyof CreateContentSecurityPolicy];\n    if (key && directive) {\n      combinedDirectives[key] = addCspDirective(\n        directive,\n        defaultDirectives[key],\n      );\n    }\n  }\n\n  // Make sure that at least script-src includes a nonce directive.\n  // If someone doesn't want a nonce in their CSP, they probably\n  // shouldn't use our utilities and just manually create their CSP.\n  if (combinedDirectives.scriptSrc instanceof Array) {\n    combinedDirectives.scriptSrc = [\n      ...combinedDirectives.scriptSrc.filter((ss) => !ss.startsWith(`'nonce`)),\n      nonceString,\n    ];\n  } else if (combinedDirectives.defaultSrc instanceof Array) {\n    combinedDirectives.defaultSrc = [\n      ...combinedDirectives.defaultSrc.filter((ss) => !ss.startsWith(`'nonce`)),\n      nonceString,\n    ];\n  }\n\n  return cspBuilder({\n    directives: combinedDirectives,\n  });\n}\n\nfunction addCspDirective(\n  currentValue: string[] | string | boolean,\n  value: string[] | string | boolean,\n): boolean | string[] {\n  const normalizedValue = typeof value === 'string' ? [value] : value;\n  const normalizedCurrentValue = Array.isArray(currentValue)\n    ? currentValue\n    : [String(currentValue)];\n\n  const newValue = Array.isArray(normalizedValue)\n    ? // If the default directive is `none`, don't\n      // merge the override with the default value.\n      normalizedValue.every((a) => a === `'none'`)\n      ? normalizedCurrentValue\n      : [...normalizedCurrentValue, ...normalizedValue]\n    : normalizedValue;\n\n  return newValue;\n}\n","import {forwardRef, ScriptHTMLAttributes, HTMLAttributes} from 'react';\nimport {useNonce} from './csp';\nimport {useLoadScript} from '@shopify/hydrogen-react';\n\ntype ScriptProps = HydrogenScriptProps & ScriptAttributes;\n\ninterface HydrogenScriptProps {\n  /** Wait to load the script until after the page hydrates. This prevents hydration errors for scripts that modify the DOM. Note: For security, `nonce` is not supported when using `waitForHydration`. Instead you need to add the domain of the script directly to your [Content Securitiy Policy directives](https://shopify.dev/docs/storefronts/headless/hydrogen/content-security-policy#step-3-customize-the-content-security-policy).*/\n  waitForHydration?: boolean;\n}\n\ninterface ScriptAttributes extends ScriptHTMLAttributes<HTMLScriptElement> {}\n\nexport const Script = forwardRef<HTMLScriptElement, ScriptProps>(\n  (props, ref) => {\n    const {waitForHydration, src, ...rest} = props;\n\n    const nonce = useNonce();\n\n    if (waitForHydration) return <LazyScript src={src} options={rest} />;\n\n    return (\n      <script\n        suppressHydrationWarning\n        {...rest}\n        src={src}\n        nonce={nonce}\n        ref={ref}\n      />\n    );\n  },\n);\n\nfunction LazyScript({\n  src,\n  options,\n}: {\n  src?: string;\n  options: JSX.IntrinsicElements['script'];\n}) {\n  if (!src)\n    throw new Error(\n      '`waitForHydration` with the Script component requires a `src` prop',\n    );\n\n  useLoadScript(src, {\n    attributes: options as Record<string, string>,\n  });\n\n  return null;\n}\n","import {useFetchers} from '@remix-run/react';\n\nexport function useOptimisticData<T>(identifier: string) {\n  const fetchers = useFetchers();\n  const data: Record<string, unknown> = {};\n\n  for (const {formData} of fetchers) {\n    if (formData?.get('optimistic-identifier') === identifier) {\n      try {\n        if (formData.has('optimistic-data')) {\n          const dataInForm: unknown = JSON.parse(\n            String(formData.get('optimistic-data')),\n          );\n          Object.assign(data, dataInForm);\n        }\n      } catch {\n        // do nothing\n      }\n    }\n  }\n  return data as T;\n}\n\nexport type OptimisticInputProps = {\n  /**\n   * A unique identifier for the optimistic input. Use the same identifier in `useOptimisticData`\n   * to retrieve the optimistic data from actions.\n   */\n  id: string;\n  /**\n   * The data to be stored in the optimistic input. Use for creating an optimistic successful state\n   * of this form action.\n   */\n  data: Record<string, unknown>;\n};\n\nexport function OptimisticInput({id, data}: OptimisticInputProps) {\n  return (\n    <>\n      <input type=\"hidden\" name=\"optimistic-identifier\" value={id} />\n      <input\n        type=\"hidden\"\n        name=\"optimistic-data\"\n        value={JSON.stringify(data)}\n      />\n    </>\n  );\n}\n","import {\n  createElement,\n  useEffect,\n  useMemo,\n  useRef,\n  forwardRef,\n  useState,\n  type Ref,\n  type FC,\n} from 'react';\nimport type {\n  Maybe,\n  PageInfo,\n} from '@shopify/hydrogen-react/storefront-api-types';\nimport {flattenConnection} from '@shopify/hydrogen-react';\nimport {\n  Link,\n  type LinkProps,\n  useNavigation,\n  useLocation,\n  useNavigate,\n} from '@remix-run/react';\n\ndeclare global {\n  interface Window {\n    // Use a global variable to keep track\n    // of when the page finishes hydrating\n    __hydrogenHydrated?: boolean;\n  }\n}\n\ntype Connection<NodesType> =\n  | {\n      nodes: Array<NodesType>;\n      pageInfo: PageInfo;\n    }\n  | {\n      edges: Array<{\n        node: NodesType;\n      }>;\n      pageInfo: PageInfo;\n    };\n\ntype PaginationState<NodesType> = {\n  pagination?: {\n    [key: string]: {\n      nodes: Array<NodesType>;\n      pageInfo?: PageInfo | null;\n    };\n  };\n};\n\ninterface PaginationInfo<NodesType> {\n  /** The paginated array of nodes. You should map over and render this array. */\n  nodes: Array<NodesType>;\n  /** The `<NextLink>` is a helper component that makes it easy to navigate to the next page of paginated data. Alternatively you can build your own `<Link>` component: `<Link to={nextPageUrl} state={state} preventScrollReset />` */\n  NextLink: FC<Omit<LinkProps, 'to'> & {ref?: Ref<HTMLAnchorElement>}>;\n  /** The `<PreviousLink>` is a helper component that makes it easy to navigate to the previous page of paginated data. Alternatively you can build your own `<Link>` component: `<Link to={previousPageUrl} state={state} preventScrollReset />` */\n  PreviousLink: FC<Omit<LinkProps, 'to'> & {ref?: Ref<HTMLAnchorElement>}>;\n  /** The URL to the previous page of paginated data. Use this prop to build your own `<Link>` component. */\n  previousPageUrl: string;\n  /** The URL to the next page of paginated data. Use this prop to build your own `<Link>` component. */\n  nextPageUrl: string;\n  /** True if the cursor has next paginated data */\n  hasNextPage: boolean;\n  /** True if the cursor has previous paginated data */\n  hasPreviousPage: boolean;\n  /** True if we are in the process of fetching another page of data */\n  isLoading: boolean;\n  /** The `state` property is important to use when building your own `<Link>` component if you want paginated data to continuously append to the page. This means that every time the user clicks \"Next page\", the next page of data will be apppended inline with the previous page. If you want the whole page to re-render with only the next page results, do not pass the `state` prop to the Remix `<Link>` component. */\n  state: {\n    nodes: Array<NodesType>;\n    pageInfo: {\n      endCursor: Maybe<string> | undefined;\n      startCursor: Maybe<string> | undefined;\n      hasPreviousPage: boolean;\n    };\n  };\n}\n\ntype PaginationProps<NodesType> = {\n  /** The response from `storefront.query` for a paginated request. Make sure the query is passed pagination variables and that the query has `pageInfo` with `hasPreviousPage`, `hasNextpage`, `startCursor`, and `endCursor` defined. */\n  connection: Connection<NodesType>;\n  /** A render prop that includes pagination data and helpers. */\n  children: PaginationRenderProp<NodesType>;\n  /** A namespace for the pagination component to avoid URL param conflicts when using multiple `Pagination` components on a single page. */\n  namespace?: string;\n};\n\ntype PaginationRenderProp<NodesType> = FC<PaginationInfo<NodesType>>;\n\n/**\n *\n * The [Storefront API uses cursors](https://shopify.dev/docs/api/usage/pagination-graphql) to paginate through lists of data\n * and the \\`<Pagination />\\` component makes it easy to paginate data from the Storefront API.\n *\n * @prop connection The response from `storefront.query` for a paginated request. Make sure the query is passed pagination variables and that the query has `pageInfo` with `hasPreviousPage`, `hasNextpage`, `startCursor`, and `endCursor` defined.\n * @prop children A render prop that includes pagination data and helpers.\n */\nexport function Pagination<NodesType>({\n  connection,\n  children = () => {\n    console.warn('<Pagination> requires children to work properly');\n    return null;\n  },\n  namespace = '',\n}: PaginationProps<NodesType>): ReturnType<FC> {\n  const [isLoading, setIsLoading] = useState(false);\n  const transition = useNavigation();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // Reset loading state once the transition state is idle\n  useEffect(() => {\n    if (transition.state === 'idle') {\n      setIsLoading(false);\n    }\n  }, [transition.state]);\n\n  const {\n    endCursor,\n    hasNextPage,\n    hasPreviousPage,\n    nextPageUrl,\n    nodes,\n    previousPageUrl,\n    startCursor,\n  } = usePagination<NodesType>(connection, namespace);\n\n  const state = useMemo(\n    () => ({\n      ...location.state,\n      pagination: {\n        ...(location.state?.pagination || {}),\n        [namespace]: {\n          pageInfo: {\n            endCursor,\n            hasPreviousPage,\n            hasNextPage,\n            startCursor,\n          },\n          nodes,\n        },\n      },\n    }),\n    [\n      endCursor,\n      hasNextPage,\n      hasPreviousPage,\n      startCursor,\n      nodes,\n      namespace,\n      location.state,\n    ],\n  );\n\n  const NextLink = useMemo(\n    () =>\n      forwardRef<HTMLAnchorElement, Omit<LinkProps, 'to'>>(function NextLink(\n        props,\n        ref,\n      ) {\n        return hasNextPage\n          ? createElement(Link, {\n              preventScrollReset: true,\n              ...props,\n              to: nextPageUrl,\n              state,\n              replace: true,\n              ref,\n              onClick: () => setIsLoading(true),\n            })\n          : null;\n      }),\n    [hasNextPage, nextPageUrl, state],\n  );\n\n  const PreviousLink = useMemo(\n    () =>\n      forwardRef<HTMLAnchorElement, Omit<LinkProps, 'to'>>(function PrevLink(\n        props,\n        ref,\n      ) {\n        return hasPreviousPage\n          ? createElement(Link, {\n              preventScrollReset: true,\n              ...props,\n              to: previousPageUrl,\n              state,\n              replace: true,\n              ref,\n              onClick: () => setIsLoading(true),\n            })\n          : null;\n      }),\n    [hasPreviousPage, previousPageUrl, state],\n  );\n\n  return children({\n    state,\n    hasNextPage,\n    hasPreviousPage,\n    isLoading,\n    nextPageUrl,\n    nodes,\n    previousPageUrl,\n    NextLink,\n    PreviousLink,\n  });\n}\n\nfunction getParamsWithoutPagination(\n  paramsString?: string,\n  state?: PaginationState<any>,\n) {\n  const params = new URLSearchParams(paramsString);\n\n  // Get all namespaces from state\n  const activeNamespaces = Object.keys(state?.pagination || {});\n\n  activeNamespaces.forEach((namespace) => {\n    // Clean up cursor and direction params for both namespaced and non-namespaced pagination\n    const namespacePrefix = namespace === '' ? '' : `${namespace}_`;\n    const cursorParam = `${namespacePrefix}cursor`;\n    const directionParam = `${namespacePrefix}direction`;\n    params.delete(cursorParam);\n    params.delete(directionParam);\n  });\n\n  return params.toString();\n}\n\nfunction makeError(prop: string) {\n  throw new Error(\n    `The Pagination component requires ${\n      '`' + prop + '`'\n    } to be a part of your query. See the guide on how to setup your query to include ${\n      '`' + prop + '`'\n    }: https://shopify.dev/docs/custom-storefronts/hydrogen/data-fetching/pagination#setup-the-paginated-query`,\n  );\n}\n\n/**\n * Get cumulative pagination logic for a given connection\n */\nexport function usePagination<NodesType>(\n  connection: Connection<NodesType>,\n  namespace: string = '',\n): Omit<\n  PaginationInfo<NodesType>,\n  'isLoading' | 'state' | 'NextLink' | 'PreviousLink'\n> & {\n  startCursor: Maybe<string> | undefined;\n  endCursor: Maybe<string> | undefined;\n} {\n  if (!connection.pageInfo) {\n    makeError('pageInfo');\n  }\n\n  if (typeof connection.pageInfo.startCursor === 'undefined') {\n    makeError('pageInfo.startCursor');\n  }\n\n  if (typeof connection.pageInfo.endCursor === 'undefined') {\n    makeError('pageInfo.endCursor');\n  }\n\n  if (typeof connection.pageInfo.hasNextPage === 'undefined') {\n    makeError('pageInfo.hasNextPage');\n  }\n\n  if (typeof connection.pageInfo.hasPreviousPage === 'undefined') {\n    makeError('pageInfo.hasPreviousPage');\n  }\n\n  const transition = useNavigation();\n  const navigate = useNavigate();\n  const {state, search, pathname} = useLocation() as {\n    state?: PaginationState<NodesType>;\n    search?: string;\n    pathname?: string;\n  };\n\n  const cursorParam = namespace ? `${namespace}_cursor` : 'cursor';\n  const directionParam = namespace ? `${namespace}_direction` : 'direction';\n\n  const params = new URLSearchParams(search);\n  const direction = params.get(directionParam);\n  const isPrevious = direction === 'previous';\n\n  const nodes = useMemo(() => {\n    if (\n      !globalThis?.window?.__hydrogenHydrated ||\n      !state?.pagination?.[namespace]?.nodes\n    ) {\n      return flattenConnection(connection);\n    }\n\n    if (isPrevious) {\n      return [\n        ...flattenConnection(connection),\n        ...(state.pagination[namespace].nodes || []),\n      ];\n    } else {\n      return [\n        ...(state.pagination[namespace].nodes || []),\n        ...flattenConnection(connection),\n      ];\n    }\n  }, [state, connection, namespace]);\n\n  const currentPageInfo = useMemo(() => {\n    const hydrogenHydrated = globalThis?.window?.__hydrogenHydrated;\n    const stateInfo = state?.pagination?.[namespace]?.pageInfo;\n\n    let pageStartCursor =\n      !hydrogenHydrated || stateInfo?.startCursor === undefined\n        ? connection.pageInfo.startCursor\n        : stateInfo.startCursor;\n\n    let pageEndCursor =\n      !hydrogenHydrated || stateInfo?.endCursor === undefined\n        ? connection.pageInfo.endCursor\n        : stateInfo.endCursor;\n\n    let previousPageExists =\n      !hydrogenHydrated || stateInfo?.hasPreviousPage === undefined\n        ? connection.pageInfo.hasPreviousPage\n        : stateInfo.hasPreviousPage;\n\n    let nextPageExists =\n      !hydrogenHydrated || stateInfo?.hasNextPage === undefined\n        ? connection.pageInfo.hasNextPage\n        : stateInfo.hasNextPage;\n\n    // Update page info based on current connection\n    if (state?.pagination?.[namespace]?.nodes) {\n      if (isPrevious) {\n        pageStartCursor = connection.pageInfo.startCursor;\n        previousPageExists = connection.pageInfo.hasPreviousPage;\n      } else {\n        pageEndCursor = connection.pageInfo.endCursor;\n        nextPageExists = connection.pageInfo.hasNextPage;\n      }\n    }\n\n    return {\n      startCursor: pageStartCursor,\n      endCursor: pageEndCursor,\n      hasPreviousPage: previousPageExists,\n      hasNextPage: nextPageExists,\n    };\n  }, [\n    isPrevious,\n    state,\n    namespace,\n    connection.pageInfo.hasNextPage,\n    connection.pageInfo.hasPreviousPage,\n    connection.pageInfo.startCursor,\n    connection.pageInfo.endCursor,\n  ]);\n\n  // Keep track of the current URL state, to compare whenever the URL changes\n  const urlRef = useRef({\n    params: getParamsWithoutPagination(search, state),\n    pathname,\n  });\n\n  useEffect(() => {\n    // Set a global variable to keep track of when the page finishes hydrating.\n    // We can't use local state or a ref because it will be reset on soft navigations\n    // to the page. This variable allows us to use the SSR'd data on the first render,\n    // preventing hydration errors. On soft navigations, like browser back/forward\n    // navigation, instead of using the SSR'd data, we use the data from location state.\n    window.__hydrogenHydrated = true;\n  }, []);\n\n  useEffect(() => {\n    const currentParams = getParamsWithoutPagination(search, state);\n    const previousParams = urlRef.current.params;\n    const pathChanged = pathname !== urlRef.current.pathname;\n    const nonPaginationParamsChanged = currentParams !== previousParams;\n\n    if (\n      // Only clean up if the base URL or non-pagination params change\n      (pathChanged || nonPaginationParamsChanged) &&\n      // And we're not on the initial load\n      !(transition.state === 'idle' && !transition.location)\n    ) {\n      urlRef.current = {\n        pathname,\n        params: getParamsWithoutPagination(search, state),\n      };\n      navigate(`${pathname}?${getParamsWithoutPagination(search, state)}`, {\n        replace: true,\n        preventScrollReset: true,\n        state: {nodes: undefined, pageInfo: undefined},\n      });\n    }\n  }, [pathname, search, state]);\n\n  const previousPageUrl = useMemo(() => {\n    const params = new URLSearchParams(search);\n    params.set(directionParam, 'previous');\n    currentPageInfo.startCursor &&\n      params.set(cursorParam, currentPageInfo.startCursor);\n    return `?${params.toString()}`;\n  }, [search, currentPageInfo.startCursor]);\n\n  const nextPageUrl = useMemo(() => {\n    const params = new URLSearchParams(search);\n    params.set(directionParam, 'next');\n    currentPageInfo.endCursor &&\n      params.set(cursorParam, currentPageInfo.endCursor);\n    return `?${params.toString()}`;\n  }, [search, currentPageInfo.endCursor]);\n\n  return {...currentPageInfo, previousPageUrl, nextPageUrl, nodes};\n}\n\n/**\n * @param request The request object passed to your Remix loader function.\n * @param options Options for how to configure the pagination variables. Includes the ability to change how many nodes are within each page as well as a namespace to avoid URL param conflicts when using multiple `Pagination` components on a single page.\n *\n * @returns Variables to be used with the `storefront.query` function\n */\nexport function getPaginationVariables(\n  request: Request,\n  options: {pageBy: number; namespace?: string} = {pageBy: 20},\n) {\n  if (typeof request?.url === 'undefined') {\n    throw new Error(\n      'getPaginationVariables must be called with the Request object passed to your loader function',\n    );\n  }\n\n  const {pageBy, namespace = ''} = options;\n  const searchParams = new URLSearchParams(new URL(request.url).search);\n\n  const cursorParam = namespace ? `${namespace}_cursor` : 'cursor';\n  const directionParam = namespace ? `${namespace}_direction` : 'direction';\n\n  const cursor = searchParams.get(cursorParam) ?? undefined;\n  const direction =\n    searchParams.get(directionParam) === 'previous' ? 'previous' : 'next';\n  const isPrevious = direction === 'previous';\n\n  const prevPage = {\n    last: pageBy,\n    startCursor: cursor ?? null,\n  };\n\n  const nextPage = {\n    first: pageBy,\n    endCursor: cursor ?? null,\n  };\n\n  const variables = isPrevious ? prevPage : nextPage;\n\n  return variables;\n}\n","import {useNavigation} from '@remix-run/react';\nimport {ProductVariant} from '@shopify/hydrogen-react/storefront-api-types';\nimport {useEffect, useState} from 'react';\nimport type {PartialDeep} from 'type-fest';\n\ntype OptimisticVariant<T> = T & {\n  isOptimistic?: boolean;\n};\n\ntype OptimisticVariantInput = PartialDeep<ProductVariant>;\n\ntype OptimisticProductVariants =\n  | Array<PartialDeep<ProductVariant>>\n  | Promise<Array<PartialDeep<ProductVariant>>>\n  | PartialDeep<ProductVariant>\n  | Promise<PartialDeep<ProductVariant>>;\n\n/**\n * @param selectedVariant The `selectedVariant` field queried with `variantBySelectedOptions`.\n * @param variants The available product variants for the product. This can be an array of variants, a promise that resolves to an array of variants, or an object with a `product` key that contains the variants.\n * @returns A new product object where the `selectedVariant` property is set to the variant that matches the current URL search params. If no variant is found, the original product object is returned. The `isOptimistic` property is set to `true` if the `selectedVariant` has been optimistically changed.\n */\nexport function useOptimisticVariant<\n  SelectedVariant = OptimisticVariantInput,\n  Variants = OptimisticProductVariants,\n>(\n  selectedVariant: SelectedVariant,\n  variants: Variants,\n): OptimisticVariant<SelectedVariant> {\n  const navigation = useNavigation();\n  const [resolvedVariants, setResolvedVariants] = useState<\n    Array<PartialDeep<ProductVariant>>\n  >([]);\n\n  useEffect(() => {\n    Promise.resolve(variants)\n      .then((productWithVariants) => {\n        if (productWithVariants) {\n          setResolvedVariants(\n            productWithVariants instanceof Array\n              ? productWithVariants\n              : (productWithVariants as PartialDeep<ProductVariant>).product\n                  ?.variants?.nodes || [],\n          );\n        }\n      })\n      .catch((error) => {\n        reportError(\n          new Error(\n            '[h2:error:useOptimisticVariant] An error occurred while resolving the variants for the optimistic product hook.',\n            {\n              cause: error,\n            },\n          ),\n        );\n      });\n  }, [JSON.stringify(variants)]);\n\n  if (navigation.state === 'loading') {\n    const queryParams = new URLSearchParams(navigation.location.search);\n    let reportedError = false;\n\n    // Find matching variant\n    const matchingVariant = resolvedVariants.find((variant) => {\n      if (!variant.selectedOptions) {\n        if (!reportedError) {\n          reportedError = true;\n          reportError(\n            new Error(\n              '[h2:error:useOptimisticVariant] The optimistic product hook requires your product query to include variants with the selectedOptions field.',\n            ),\n          );\n        }\n        return false;\n      }\n\n      return variant.selectedOptions.every((option) => {\n        return queryParams.get(option.name) === option.value;\n      });\n    });\n\n    if (matchingVariant) {\n      return {\n        ...matchingVariant,\n        isOptimistic: true,\n      } as OptimisticVariant<SelectedVariant>;\n    }\n  }\n\n  return selectedVariant as OptimisticVariant<SelectedVariant>;\n}\n","import {useLocation, useNavigation} from '@remix-run/react';\nimport {flattenConnection} from '@shopify/hydrogen-react';\nimport type {\n  ProductOption,\n  ProductOptionValue,\n  ProductVariant,\n  ProductVariantConnection,\n  SelectedOptionInput,\n  Maybe,\n} from '@shopify/hydrogen-react/storefront-api-types';\nimport {type ReactNode, useMemo, createElement, Fragment} from 'react';\nimport type {PartialDeep} from 'type-fest';\nimport {warnOnce} from '../utils/warning';\n\nexport type VariantOption = {\n  name: string;\n  value?: string;\n  values: Array<VariantOptionValue>;\n};\n\ntype PartialProductOptionValues = PartialDeep<ProductOptionValue>;\ntype PartialProductOption = PartialDeep<\n  Omit<ProductOption, 'optionValues'> & {\n    optionValues: Array<PartialProductOptionValues>;\n  }\n>;\n\nexport type VariantOptionValue = {\n  value: string;\n  isAvailable: boolean;\n  to: string;\n  search: string;\n  isActive: boolean;\n  variant?: PartialDeep<ProductVariant>;\n  optionValue: PartialProductOptionValues;\n};\n\ntype VariantSelectorProps = {\n  /** The product handle for all of the variants */\n  handle: string;\n  /** Product options from the [Storefront API](/docs/api/storefront/2025-01/objects/ProductOption). Make sure both `name` and `values` are a part of your query. */\n  options: Array<PartialProductOption> | undefined;\n  /** Product variants from the [Storefront API](/docs/api/storefront/2025-01/objects/ProductVariant). You only need to pass this prop if you want to show product availability. If a product option combination is not found within `variants`, it is assumed to be available. Make sure to include `availableForSale` and `selectedOptions.name` and `selectedOptions.value`. */\n  variants?:\n    | PartialDeep<ProductVariantConnection>\n    | Array<PartialDeep<ProductVariant>>;\n  /** By default all products are under /products. Use this prop to provide a custom path. */\n  productPath?: string;\n  /** Should the VariantSelector wait to update until after the browser navigates to a variant. */\n  waitForNavigation?: boolean;\n  /** An optional selected variant to use for the initial state if no URL parameters are set */\n  selectedVariant?: Maybe<PartialDeep<ProductVariant>>;\n  children: ({option}: {option: VariantOption}) => ReactNode;\n};\n\nexport function VariantSelector({\n  handle,\n  options: _options = [],\n  variants: _variants = [],\n  productPath = 'products',\n  waitForNavigation = false,\n  selectedVariant,\n  children,\n}: VariantSelectorProps) {\n  // Deprecation notice for product.options.values\n  // TODO: Remove this after product.options.values is removed from the Storefront API\n  let options = _options;\n  if (options[0]?.values) {\n    warnOnce(\n      '[h2:warn:VariantSelector] product.options.values is deprecated. Use product.options.optionValues instead.',\n    );\n\n    if (!!options[0] && !options[0].optionValues) {\n      // Convert the old values format to the new optionValues format\n      options = _options.map((option) => ({\n        ...option,\n        optionValues: option.values?.map((value) => ({name: value})) || [],\n      }));\n    }\n  }\n\n  const variants =\n    _variants instanceof Array ? _variants : flattenConnection(_variants);\n\n  const {searchParams, path, alreadyOnProductPage} = useVariantPath(\n    handle,\n    productPath,\n    waitForNavigation,\n  );\n\n  // If an option only has one value, it doesn't need a UI to select it\n  // But instead it always needs to be added to the product options so\n  // the SFAPI properly finds the variant\n  const optionsWithOnlyOneValue = options.filter(\n    (option) => option?.optionValues?.length === 1,\n  );\n\n  // If a selected variant is provided, create a map of selected values\n  const selectedVariantOptions = selectedVariant\n    ? selectedVariant?.selectedOptions?.reduce<Record<string, string>>(\n        (selectedValues, item) => {\n          selectedValues[item.name] = item.value;\n          return selectedValues;\n        },\n        {},\n      )\n    : {};\n\n  return createElement(\n    Fragment,\n    null,\n    ...useMemo(() => {\n      return options.map((option) => {\n        let activeValue;\n        let availableValues: VariantOptionValue[] = [];\n\n        for (let value of option.optionValues!) {\n          // The clone the search params for each value, so we can calculate\n          // a new URL for each option value pair\n          const clonedSearchParams = new URLSearchParams(\n            alreadyOnProductPage ? searchParams : undefined,\n          );\n          clonedSearchParams.set(option.name!, value.name!);\n\n          // Because we hide options with only one value, they aren't selectable,\n          // but they still need to get into the URL\n          optionsWithOnlyOneValue.forEach((option) => {\n            if (option.optionValues![0]!.name)\n              clonedSearchParams.set(\n                option.name!,\n                option.optionValues![0]!.name,\n              );\n          });\n\n          const variant = variants.find((variant) => {\n            return variant?.selectedOptions?.every((selectedOption) => {\n              // Get the selected value from the URL (default) or the selected variant\n              const selectedValue =\n                clonedSearchParams.get(selectedOption?.name!) ||\n                selectedVariantOptions?.[selectedOption?.name!];\n\n              return selectedValue === selectedOption?.value;\n            });\n          });\n\n          let selectedValue = searchParams.get(option.name!);\n\n          if (!selectedValue && selectedVariant) {\n            // If there's no value set via a URL parameter, default\n            // to the value from the first available variant\n            selectedValue = selectedVariantOptions?.[option.name!] || null;\n          }\n\n          const calculatedActiveValue = selectedValue\n            ? // If a URL parameter exists for the current option, check if it equals the current value\n              selectedValue === value.name\n            : false;\n\n          if (calculatedActiveValue) {\n            // Save out the current value if it's active. This should only ever happen once.\n            // Should we throw if it happens a second time?\n            activeValue = value.name!;\n          }\n\n          const searchString = '?' + clonedSearchParams.toString();\n\n          availableValues.push({\n            value: value.name!,\n            optionValue: value,\n            isAvailable: variant ? variant.availableForSale! : true,\n            to: path + searchString,\n            search: searchString,\n            isActive: calculatedActiveValue,\n            variant,\n          });\n        }\n\n        return children({\n          option: {\n            name: option.name!,\n            value: activeValue,\n            values: availableValues,\n          },\n        });\n      });\n    }, [options, variants, children]),\n  );\n}\n\ntype GetSelectedProductOptions = (request: Request) => SelectedOptionInput[];\n\n/**\n * Extract searchParams from a Request instance and return an array of selected options.\n * @param request - The Request instance to extract searchParams from.\n * @returns An array of selected options.\n * @example Basic usage:\n * ```tsx\n *\n * import {getSelectedProductOptions} from '@shopify/hydrogen';\n *\n * // Given a request url of `/products/product-handle?color=red&size=large`\n *\n * const selectedOptions = getSelectedProductOptions(request);\n *\n * // selectedOptions will equal:\n * // [\n * //   {name: 'color', value: 'red'},\n * //   {name: 'size', value: 'large'}\n * // ]\n * ```\n **/\nexport const getSelectedProductOptions: GetSelectedProductOptions = (\n  request,\n) => {\n  if (typeof request?.url === 'undefined')\n    throw new TypeError(`Expected a Request instance, got ${typeof request}`);\n\n  const searchParams = new URL(request.url).searchParams;\n\n  const selectedOptions: SelectedOptionInput[] = [];\n\n  searchParams.forEach((value, name) => {\n    selectedOptions.push({name, value});\n  });\n\n  return selectedOptions;\n};\n\nfunction useVariantPath(\n  handle: string,\n  productPath: string,\n  waitForNavigation: boolean,\n) {\n  const {pathname, search} = useLocation();\n  const navigation = useNavigation();\n\n  return useMemo(() => {\n    const match = /(\\/[a-zA-Z]{2}-[a-zA-Z]{2}\\/)/g.exec(pathname);\n    const isLocalePathname = match && match.length > 0;\n    productPath = productPath.startsWith('/')\n      ? productPath.substring(1)\n      : productPath;\n\n    const path = isLocalePathname\n      ? `${match![0]}${productPath}/${handle}`\n      : `/${productPath}/${handle}`;\n\n    const searchParams = new URLSearchParams(\n      // Remix doesn't update the location until pending loaders complete.\n      // By default we use the destination search params to make selecting a variant\n      // instant, but `waitForNavigation` makes the UI wait to update by only using\n      // the active browser search params.\n      waitForNavigation || navigation.state !== 'loading'\n        ? search\n        : navigation.location.search,\n    );\n\n    return {\n      searchParams,\n      // If the current pathname matches the product page, we need to make sure\n      // that we append to the current search params. Otherwise all the search\n      // params can be generated new.\n      alreadyOnProductPage: path === pathname,\n      path,\n    };\n  }, [pathname, search, waitForNavigation, handle, productPath, navigation]);\n}\n","import {Link} from '@remix-run/react';\nimport {RichText as OriginalRichText} from '@shopify/hydrogen-react';\n\nexport const RichText: typeof OriginalRichText = function (props) {\n  return (\n    <OriginalRichText\n      {...props}\n      components={{\n        link: ({node}) => (\n          <Link\n            to={node.url}\n            title={node.title}\n            target={node.target}\n            prefetch=\"intent\"\n          >\n            {node.children}\n          </Link>\n        ),\n        ...props.components,\n      }}\n    />\n  );\n};\n","import type {LoaderFunctionArgs} from '@remix-run/server-runtime';\nimport type {Storefront} from '../storefront';\nimport type {CustomerAccount} from '../customer/types';\n\ntype GraphiQLLoader = (args: LoaderFunctionArgs) => Promise<Response>;\n\nexport const graphiqlLoader: GraphiQLLoader = async function graphiqlLoader({\n  request,\n  context,\n}: LoaderFunctionArgs) {\n  // For some reason, types are properly recognized by the editor,\n  // but not at build time on CI. Cast types here to ensure it builds.\n  const storefront = context.storefront as undefined | Storefront;\n  const customerAccount = context.customerAccount as\n    | undefined\n    | CustomerAccount;\n\n  const url = new URL(request.url);\n\n  if (!storefront) {\n    throw new Error(\n      `GraphiQL: Hydrogen's storefront client must be injected in the loader context.`,\n    );\n  }\n\n  const schemas: {\n    [key: string]: {\n      name: string;\n      value?: object;\n      accessToken?: string;\n      authHeader: string;\n      apiUrl: string;\n      icon: string;\n    };\n  } = {};\n\n  if (storefront) {\n    const authHeader = 'X-Shopify-Storefront-Access-Token';\n    schemas.storefront = {\n      name: 'Storefront API',\n      authHeader,\n      accessToken: storefront.getPublicTokenHeaders()[authHeader],\n      apiUrl: storefront.getApiUrl(),\n      icon: 'SF',\n    };\n  }\n\n  if (customerAccount) {\n    // CustomerAccount API does not support introspection to the same URL.\n    // Read it from a file using the asset server:\n    const customerAccountSchema = await (\n      await fetch(url.origin + '/graphiql/customer-account.schema.json')\n    ).json();\n\n    const accessToken = await customerAccount.getAccessToken();\n\n    if (customerAccountSchema) {\n      schemas['customer-account'] = {\n        name: 'Customer Account API',\n        value: customerAccountSchema,\n        authHeader: 'Authorization',\n        accessToken,\n        apiUrl: customerAccount.getApiUrl(),\n        icon: 'CA',\n      };\n    }\n  }\n\n  // GraphiQL icon from their GitHub repo\n  const favicon = `https://avatars.githubusercontent.com/u/12972006?s=48&v=4`;\n\n  // Add code highlighting to the HTML template\n  const html = String.raw;\n\n  return new Response(\n    html`\n      <!DOCTYPE html>\n      <html lang=\"en\">\n        <head>\n          <title>GraphiQL</title>\n          <link rel=\"icon\" type=\"image/x-icon\" href=\"${favicon}\" />\n          <style>\n            body {\n              height: 100%;\n              margin: 0;\n              width: 100%;\n              overflow: hidden;\n              background-color: hsl(219, 29%, 18%);\n            }\n\n            #graphiql {\n              height: 100vh;\n            }\n\n            #graphiql > .placeholder {\n              color: slategray;\n              width: fit-content;\n              margin: 40px auto;\n              font-family: Arial;\n            }\n\n            .graphiql-api-toolbar-label {\n              position: absolute;\n              bottom: -6px;\n              right: -4px;\n              font-size: 8px;\n            }\n          </style>\n\n          <script\n            crossorigin\n            src=\"https://unpkg.com/react@18/umd/react.development.js\"\n          ></script>\n          <script\n            crossorigin\n            src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"\n          ></script>\n          <link\n            rel=\"stylesheet\"\n            href=\"https://unpkg.com/graphiql@3/graphiql.min.css\"\n          />\n          <link\n            rel=\"stylesheet\"\n            href=\"https://unpkg.com/@graphiql/plugin-explorer/dist/style.css\"\n          />\n        </head>\n\n        <body>\n          <div id=\"graphiql\">\n            <div class=\"placeholder\">Loading GraphiQL...</div>\n          </div>\n\n          <script\n            src=\"https://unpkg.com/graphiql@3/graphiql.min.js\"\n            type=\"application/javascript\"\n            crossorigin=\"anonymous\"\n          ></script>\n          <script\n            src=\"https://unpkg.com/@graphiql/plugin-explorer/dist/index.umd.js\"\n            type=\"application/javascript\"\n            crossorigin=\"anonymous\"\n          ></script>\n\n          <script>\n            const windowUrl = new URL(document.URL);\n            const startingSchemaKey =\n              windowUrl.searchParams.get('schema') || 'storefront';\n\n            let query = '{ shop { name } }';\n            if (windowUrl.searchParams.has('query')) {\n              query = decodeURIComponent(\n                windowUrl.searchParams.get('query') ?? query,\n              );\n            }\n\n            // Prettify query\n            query = GraphiQL.GraphQL.print(GraphiQL.GraphQL.parse(query));\n\n            let variables;\n            if (windowUrl.searchParams.has('variables')) {\n              variables = decodeURIComponent(\n                windowUrl.searchParams.get('variables') ?? '',\n              );\n            }\n\n            // Prettify variables\n            if (variables) {\n              variables = JSON.stringify(JSON.parse(variables), null, 2);\n            }\n\n            const schemas = ${JSON.stringify(schemas)};\n            let lastActiveTabIndex = -1;\n            let lastTabAmount = -1;\n\n            const root = ReactDOM.createRoot(\n              document.getElementById('graphiql'),\n            );\n\n            root.render(React.createElement(RootWrapper));\n\n            const TAB_STATE_KEY = 'graphiql:tabState';\n            const storage = {\n              getTabState: () =>\n                JSON.parse(localStorage.getItem(TAB_STATE_KEY)),\n              setTabState: (state) =>\n                localStorage.setItem(TAB_STATE_KEY, JSON.stringify(state)),\n            };\n\n            let nextSchemaKey;\n\n            function RootWrapper() {\n              const [activeSchema, setActiveSchema] =\n                React.useState(startingSchemaKey);\n\n              const schema = schemas[activeSchema];\n              if (!schema) {\n                throw new Error('No schema found for ' + activeSchema);\n              }\n\n              const keys = Object.keys(schemas);\n\n              return React.createElement(\n                GraphiQL,\n                {\n                  fetcher: GraphiQL.createFetcher({\n                    url: schema.apiUrl,\n                    headers: {[schema.authHeader]: schema.accessToken},\n                  }),\n                  defaultEditorToolsVisibility: true,\n                  query,\n                  variables,\n                  schema: schema.value,\n                  plugins: [GraphiQLPluginExplorer.explorerPlugin()],\n                  onTabChange: (state) => {\n                    const {activeTabIndex, tabs} = state;\n                    const activeTab = tabs[activeTabIndex];\n\n                    if (\n                      activeTabIndex === lastActiveTabIndex &&\n                      lastTabAmount === tabs.length\n                    ) {\n                      if (\n                        nextSchemaKey &&\n                        activeTab &&\n                        activeTab.schemaKey !== nextSchemaKey\n                      ) {\n                        activeTab.schemaKey = nextSchemaKey;\n                        nextSchemaKey = undefined;\n\n                        // Sync state to localStorage. GraphiQL resets the state\n                        // asynchronously, so we need to do it in a timeout.\n                        storage.setTabState(state);\n                        setTimeout(() => storage.setTabState(state), 500);\n                      }\n\n                      // React rerrendering, skip\n                      return;\n                    }\n\n                    if (activeTab) {\n                      if (!activeTab.schemaKey) {\n                        // Creating a new tab\n                        if (lastTabAmount < tabs.length) {\n                          activeTab.schemaKey = activeSchema;\n                          storage.setTabState(state);\n                        }\n                      }\n\n                      const nextSchema = activeTab.schemaKey || 'storefront';\n\n                      if (nextSchema !== activeSchema) {\n                        setActiveSchema(nextSchema);\n                      }\n                    }\n\n                    lastActiveTabIndex = activeTabIndex;\n                    lastTabAmount = tabs.length;\n                  },\n                  toolbar: {\n                    additionalComponent: function () {\n                      const schema = schemas[activeSchema];\n\n                      return React.createElement(\n                        GraphiQL.React.ToolbarButton,\n                        {\n                          onClick: () => {\n                            const activeKeyIndex = keys.indexOf(activeSchema);\n                            nextSchemaKey =\n                              keys[(activeKeyIndex + 1) % keys.length];\n\n                            // This triggers onTabChange\n                            if (nextSchemaKey) setActiveSchema(nextSchemaKey);\n                          },\n                          label: 'Toggle between different API schemas',\n                        },\n                        React.createElement(\n                          'div',\n                          {\n                            key: 'api-wrapper',\n                            className: 'graphiql-toolbar-icon',\n                            style: {position: 'relative', fontWeight: 'bolder'},\n                          },\n                          [\n                            React.createElement(\n                              'div',\n                              {key: 'icon', style: {textAlign: 'center'}},\n                              [\n                                schema.icon,\n                                React.createElement(\n                                  'div',\n                                  {\n                                    key: 'icon-label',\n                                    className: 'graphiql-api-toolbar-label',\n                                  },\n                                  'API',\n                                ),\n                              ],\n                            ),\n                          ],\n                        ),\n                      );\n                    },\n                  },\n                },\n                [\n                  React.createElement(\n                    GraphiQL.Logo,\n                    {\n                      key: 'Logo replacement',\n                    },\n                    [\n                      React.createElement(\n                        'div',\n                        {\n                          key: 'Logo wrapper',\n                          style: {display: 'flex', alignItems: 'center'},\n                        },\n                        [\n                          React.createElement(\n                            'div',\n                            {\n                              key: 'api',\n                              className: 'graphiql-logo',\n                              style: {\n                                paddingRight: 0,\n                                whiteSpace: 'nowrap',\n                              },\n                            },\n                            [schema.name],\n                          ),\n                          React.createElement(GraphiQL.Logo, {key: 'logo'}),\n                        ],\n                      ),\n                    ],\n                  ),\n                ],\n              );\n            }\n          </script>\n        </body>\n      </html>\n    `,\n    {status: 200, headers: {'content-type': 'text/html'}},\n  );\n};\n","import type {UrlRedirectConnection} from '@shopify/hydrogen-react/storefront-api-types';\nimport type {I18nBase, Storefront} from '../storefront';\nimport {getRedirectUrl} from '../utils/get-redirect-url';\n\ntype StorefrontRedirect = {\n  /** The [Storefront client](/docs/api/hydrogen/2025-01/utilities/createstorefrontclient) instance */\n  storefront: Storefront<I18nBase>;\n  /** The [MDN Request](https://developer.mozilla.org/en-US/docs/Web/API/Request) object that was passed to the `server.ts` request handler. */\n  request: Request;\n  /** The [MDN Response](https://developer.mozilla.org/en-US/docs/Web/API/Response) object created by `handleRequest` */\n  response?: Response;\n  /** By default the `/admin` route is redirected to the Shopify Admin page for the current storefront. Disable this redirect by passing `true`. */\n  noAdminRedirect?: boolean;\n  /** By default, query parameters are not used to match redirects. Set this to `true` if you'd like redirects to be query parameter sensitive */\n  matchQueryParams?: boolean;\n};\n\n/**\n * Queries the Storefront API to see if there is any redirect\n * created for the current route and performs it. Otherwise,\n * it returns the response passed in the parameters. Useful for\n * conditionally redirecting after a 404 response.\n *\n * @see {@link https://help.shopify.com/en/manual/online-store/menus-and-links/url-redirect Creating URL redirects in Shopify}\n */\nexport async function storefrontRedirect(\n  options: StorefrontRedirect,\n): Promise<Response> {\n  const {\n    storefront,\n    request,\n    noAdminRedirect,\n    matchQueryParams,\n    response = new Response('Not Found', {status: 404}),\n  } = options;\n\n  const url = new URL(request.url);\n  const {pathname, searchParams} = url;\n  const isSoftNavigation = searchParams.has('_data');\n\n  searchParams.delete('redirect');\n  searchParams.delete('return_to');\n  searchParams.delete('_data');\n\n  const redirectFrom = (\n    matchQueryParams ? url.toString().replace(url.origin, '') : pathname\n  ).toLowerCase();\n\n  if (url.pathname === '/admin' && !noAdminRedirect) {\n    return createRedirectResponse(\n      `${storefront.getShopifyDomain()}/admin`,\n      isSoftNavigation,\n      searchParams,\n      matchQueryParams,\n    );\n  }\n\n  try {\n    const {urlRedirects} = await storefront.query<{\n      urlRedirects: UrlRedirectConnection;\n    }>(REDIRECT_QUERY, {\n      // The admin doesn't allow redirects to have a\n      // trailing slash, so strip them all off\n      variables: {query: 'path:' + redirectFrom.replace(/\\/+$/, '')},\n    });\n\n    const location = urlRedirects?.edges?.[0]?.node?.target;\n\n    if (location) {\n      return createRedirectResponse(\n        location,\n        isSoftNavigation,\n        searchParams,\n        matchQueryParams,\n      );\n    }\n\n    const redirectTo = getRedirectUrl(request.url);\n\n    if (redirectTo) {\n      return createRedirectResponse(\n        redirectTo,\n        isSoftNavigation,\n        searchParams,\n        matchQueryParams,\n      );\n    }\n  } catch (error) {\n    console.error(\n      `Failed to fetch redirects from Storefront API for route ${redirectFrom}`,\n      error,\n    );\n  }\n\n  return response;\n}\n\nconst TEMP_DOMAIN = 'https://example.com';\n\nfunction createRedirectResponse(\n  location: string,\n  isSoftNavigation: boolean,\n  searchParams: URLSearchParams,\n  matchQueryParams?: boolean,\n) {\n  const url = new URL(location, TEMP_DOMAIN);\n\n  if (!matchQueryParams) {\n    for (const [key, value] of searchParams) {\n      // The redirect destination might include query params, so merge the\n      // original query params with the redirect destination query params\n      url.searchParams.append(key, value);\n    }\n  }\n\n  if (isSoftNavigation) {\n    return new Response(null, {\n      status: 200,\n      headers: {\n        'X-Remix-Redirect': url.toString().replace(TEMP_DOMAIN, ''),\n        'X-Remix-Status': '301',\n      },\n    });\n  } else {\n    return new Response(null, {\n      status: 301,\n      headers: {location: url.toString().replace(TEMP_DOMAIN, '')},\n    });\n  }\n}\n\nconst REDIRECT_QUERY = `#graphql\n  query redirects($query: String) {\n    urlRedirects(first: 1, query: $query) {\n      edges {\n        node {\n          target\n        }\n      }\n    }\n  }\n`;\n","// This is taken from remix: https://github.com/remix-run/remix/blob/main/packages/remix-server-runtime/markup.ts\n\nconst ESCAPE_LOOKUP: {[match: string]: string} = {\n  '&': '\\\\u0026',\n  '>': '\\\\u003e',\n  '<': '\\\\u003c',\n  '\\u2028': '\\\\u2028',\n  '\\u2029': '\\\\u2029',\n};\n\nconst ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\n\nexport function escapeHtml(html: string) {\n  return html.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);\n}\n","import type {ComponentPropsWithoutRef} from 'react';\nimport type {Maybe} from '@shopify/hydrogen-react/storefront-api-types';\nimport type {Thing, WithContext} from 'schema-dts';\nimport {escapeHtml} from './escape';\n\nconst ERROR_PREFIX = 'Error in SEO input: ';\n\n// TODO: Refactor this into more reusable validators or use a library like zod to do this if we decide to use it in\n// other places. @cartogram\nexport const schema = {\n  title: {\n    validate: <T>(value: Maybe<T>): NonNullable<T> => {\n      if (typeof value !== 'string') {\n        throw new Error(ERROR_PREFIX.concat('`title` should be a string'));\n      }\n\n      if (typeof value === 'string' && value.length > 120) {\n        throw new Error(\n          ERROR_PREFIX.concat(\n            '`title` should not be longer than 120 characters',\n          ),\n        );\n      }\n\n      return value;\n    },\n  },\n  description: {\n    validate: <T>(value: Maybe<T>): NonNullable<T> => {\n      if (typeof value !== 'string') {\n        throw new Error(\n          ERROR_PREFIX.concat('`description` should be a string'),\n        );\n      }\n\n      if (typeof value === 'string' && value.length > 155) {\n        throw new Error(\n          ERROR_PREFIX.concat(\n            '`description` should not be longer than 155 characters',\n          ),\n        );\n      }\n\n      return value;\n    },\n  },\n  url: {\n    validate: <T>(value: Maybe<T>): NonNullable<T> => {\n      if (typeof value !== 'string') {\n        throw new Error(ERROR_PREFIX.concat('`url` should be a string'));\n      }\n\n      if (typeof value === 'string' && !value.startsWith('http')) {\n        throw new Error(ERROR_PREFIX.concat('`url` should be a valid URL'));\n      }\n\n      return value;\n    },\n  },\n  handle: {\n    validate: <T>(value: Maybe<T>): NonNullable<T> => {\n      if (typeof value !== 'string') {\n        throw new Error(ERROR_PREFIX.concat('`handle` should be a string'));\n      }\n\n      if (typeof value === 'string' && !value.startsWith('@')) {\n        throw new Error(ERROR_PREFIX.concat('`handle` should start with `@`'));\n      }\n\n      return value;\n    },\n  },\n};\n\nexport interface SeoConfig {\n  /**\n   * The `title` HTML element defines the document's title that is shown in a browser's title bar or a page's tab. It\n   * only contains text; tags within the element are ignored.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title\n   */\n  title?: Maybe<string>;\n  /**\n   * Generate the title from a template that includes a `%s` placeholder for the title.\n   *\n   * @example\n   * ```js\n   * {\n   *   title: 'My Page',\n   *   titleTemplate: 'My Site - %s',\n   * }\n   * ```\n   */\n  titleTemplate?: Maybe<string> | null;\n  /**\n   * The media associated with the given page (images, videos, etc). If you pass a string, it will be used as the\n   * `og:image` meta tag. If you pass an object or an array of objects, that will be used to generate `og:<type of\n   * media>` meta tags. The `url` property should be the URL of the media. The `height` and `width` properties are\n   * optional and should be the height and width of the media. The `altText` property is optional and should be a\n   * description of the media.\n   *\n   * @example\n   * ```js\n   * {\n   *   media: [\n   *     {\n   *       url: 'https://example.com/image.jpg',\n   *       type: 'image',\n   *       height: '400',\n   *       width: '400',\n   *       altText: 'A custom snowboard with an alpine color pallet.',\n   *     }\n   *   ]\n   * }\n   * ```\n   *\n   */\n  media?:\n    | Maybe<string>\n    | Partial<SeoMedia>\n    | (Partial<SeoMedia> | Maybe<string>)[];\n  /**\n   * The description of the page. This is used in the `name=\"description\"` meta tag as well as the `og:description` meta\n   * tag.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta\n   */\n  description?: Maybe<string>;\n  /**\n   * The canonical URL of the page. This is used to tell search engines which URL is the canonical version of a page.\n   * This is useful when you have multiple URLs that point to the same page. The value here will be used in the\n   * `rel=\"canonical\"` link tag as well as the `og:url` meta tag.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link\n   */\n  url?: Maybe<string>;\n  /**\n   * The handle is used to generate the `twitter:site` and `twitter:creator` meta tags. Include the `@` symbol in the\n   * handle.\n   *\n   * @example\n   * ```js\n   * {\n   *   handle: '@shopify'\n   * }\n   * ```\n   */\n  handle?: Maybe<string>;\n  /**\n   * The `jsonLd` property is used to generate the `application/ld+json` script tag. This is used to provide structured\n   * data to search engines. The value should be an object that conforms to the schema.org spec. The `type` property\n   * should be the type of schema you are using. The `type` property is required and should be one of the following:\n   *\n   * - `Product`\n   * - `ItemList`\n   * - `Organization`\n   * - `WebSite`\n   * - `WebPage`\n   * - `BlogPosting`\n   * - `Thing`\n   *\n   * The value is validated via [schema-dts](https://www.npmjs.com/package/schema-dts)\n   *\n   * @example\n   * ```js\n   * {\n   *   jsonLd: {\n   *     '@context': 'https://schema.org',\n   *     '@type': 'Product',\n   *     name: 'My Product',\n   *     image: 'https://hydrogen.shop/image.jpg',\n   *     description: 'A product that is great',\n   *     sku: '12345',\n   *     mpn: '12345',\n   *     brand: {\n   *       '@type': 'Thing',\n   *       name: 'My Brand',\n   *     },\n   *     aggregateRating: {\n   *       '@type': 'AggregateRating',\n   *       ratingValue: '4.5',\n   *       reviewCount: '100',\n   *     },\n   *     offers: {\n   *       '@type': 'Offer',\n   *       priceCurrency: 'USD',\n   *       price: '100',\n   *       priceValidUntil: '2020-11-05',\n   *       itemCondition: 'https://schema.org/NewCondition',\n   *       availability: 'https://schema.org/InStock',\n   *       seller: {\n   *         '@type': 'Organization',\n   *         name: 'My Brand',\n   *       },\n   *     },\n   *   }\n   * }\n   * ```\n   *\n   * @see https://schema.org/docs/schemas.html\n   * @see https://developers.google.com/search/docs/guides/intro-structured-data\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script\n   *\n   */\n  jsonLd?: WithContext<Thing> | WithContext<Thing>[];\n  /**\n   * The `alternates` property is used to specify the language and geographical targeting when you have multiple\n   * versions of the same page in different languages. The `url` property tells search engines about these variations\n   * and helps them to serve the correct version to their users.\n   *\n   * @example\n   * ```js\n   * {\n   *   alternates: [\n   *     {\n   *       language: 'en-US',\n   *       url: 'https://hydrogen.shop/en-us',\n   *       default: true,\n   *     },\n   *     {\n   *       language: 'fr-CA',\n   *       url: 'https://hydrogen.shop/fr-ca',\n   *     },\n   *   ]\n   * }\n   * ```\n   *\n   * @see https://support.google.com/webmasters/answer/189077?hl=en\n   */\n  alternates?: LanguageAlternate | LanguageAlternate[];\n  /**\n   * The `robots` property is used to specify the robots meta tag. This is used to tell search engines which pages\n   * should be indexed and which should not.\n   *\n   * @see https://developers.google.com/search/reference/robots_meta_tag\n   */\n  robots?: RobotsOptions;\n}\n\n/**\n * @see https://developers.google.com/search/docs/crawling-indexing/robots-meta-tag\n */\nexport interface RobotsOptions {\n  /**\n   * Set the maximum size of an image preview for this page in a search results Can be one of the following:\n   *\n   * - `none` - No image preview is to be shown.\n   * - `standard` - A default image preview may be shown.\n   * - `large` - A larger image preview, up to the width of the viewport, may be shown.\n   *\n   * If no value is specified a default image preview size is used.\n   */\n  maxImagePreview?: 'none' | 'standard' | 'large';\n  /**\n   * A number representing the maximum of amount characters to use as a textual snippet for a search result. This value\n   * can also be set to one of the following special values:\n   *\n   * - 0 - No snippet is to be shown. Equivalent to nosnippet.\n   * - 1 - The Search engine will choose the snippet length that it believes is most effective to help users discover\n   *   your content and direct users to your site\n   * - -1 - No limit on the number of characters that can be shown in the snippet.\n   */\n  maxSnippet?: number;\n  /**\n   * The maximum number of seconds for videos on this page to show in search results. This value can also be set to one\n   * of the following special values:\n   *\n   * - 0 - A static image may be used with the `maxImagePreview` setting.\n   * - 1 - There is no limit to the size of the video preview.\n   *\n   * This applies to all forms of search results (at Google: web search, Google Images, Google Videos, Discover,\n   * Assistant).\n   */\n  maxVideoPreview?: number;\n  /**\n   * Do not show a cached link in search results.\n   */\n  noArchive?: boolean;\n  /**\n   * Do not follow the links on this page.\n   *\n   * @see https://developers.google.com/search/docs/advanced/guidelines/qualify-outbound-links\n   */\n  noFollow?: boolean;\n  /**\n   * Do not index images on this page.\n   */\n  noImageIndex?: boolean;\n  /**\n   * Do not show this page, media, or resource in search results.\n   */\n  noIndex?: boolean;\n  /**\n   * Do not show a text snippet or video preview in the search results for this page.\n   */\n  noSnippet?: boolean;\n  /**\n   * Do not offer translation of this page in search results.\n   */\n  noTranslate?: boolean;\n  /**\n   * Do not show this page in search results after the specified date/time.\n   */\n  unavailableAfter?: string;\n}\n\nexport interface LanguageAlternate {\n  /**\n   * Language code for the alternate page. This is used to generate the hreflang meta tag property.\n   */\n  language: string;\n  /**\n   * Whether the alternate page is the default page. This will add the `x-default` attribution to the language code.\n   */\n  default?: boolean;\n  /**\n   * The url of the alternate page. This is used to generate the hreflang meta tag property.\n   */\n  url: string;\n}\n\nexport type SeoMedia = {\n  /**\n   * Used to generate og:<type of media> meta tag\n   */\n  type: 'image' | 'video' | 'audio';\n  /**\n   * The url value populates both url and secure_url and is used to infer the og:<type of media>:type meta tag.\n   */\n  url: Maybe<string> | undefined;\n  /**\n   * The height in pixels of the media. This is used to generate the og:<type of media>:height meta tag.\n   */\n  height: Maybe<number> | undefined;\n  /**\n   * The width in pixels of the media. This is used to generate the og:<type of media>:width meta tag.\n   */\n  width: Maybe<number> | undefined;\n  /**\n   * The alt text for the media. This is used to generate the og:<type of media>:alt meta tag.\n   */\n  altText: Maybe<string> | undefined;\n};\n\ntype TagKey = 'title' | 'base' | 'meta' | 'link' | 'script';\n\nexport interface CustomHeadTagObject {\n  tag: TagKey;\n  props: Record<string, unknown>;\n  children?: string;\n  key: string;\n}\n\n/**\n * The `generateSeoTags` function generates the SEO title, meta, link and script (JSON Linking Data) tags for a page. It\n * pairs well with the SEO component in `@shopify/hydrogen` when building a Hydrogen Remix app, but can be used on its\n * own if you want to generate the tags yourself.\n */\nexport function generateSeoTags(seoInput: SeoConfig): CustomHeadTagObject[] {\n  const tagResults: CustomHeadTagObject[] = [];\n\n  for (const seoKey of Object.keys(seoInput)) {\n    switch (seoKey) {\n      case 'title': {\n        const content = validate(schema.title, seoInput.title);\n        const title = renderTitle(seoInput?.titleTemplate, content);\n\n        if (!title) {\n          break;\n        }\n\n        tagResults.push(\n          generateTag('title', {title}),\n          generateTag('meta', {property: 'og:title', content: title}),\n          generateTag('meta', {name: 'twitter:title', content: title}),\n        );\n\n        break;\n      }\n\n      case 'description': {\n        const content = validate(schema.description, seoInput.description);\n\n        if (!content) {\n          break;\n        }\n\n        tagResults.push(\n          generateTag('meta', {\n            name: 'description',\n            content,\n          }),\n          generateTag('meta', {\n            property: 'og:description',\n            content,\n          }),\n          generateTag('meta', {\n            name: 'twitter:description',\n            content,\n          }),\n        );\n\n        break;\n      }\n\n      case 'url': {\n        const content = validate(schema.url, seoInput.url);\n\n        if (!content) {\n          break;\n        }\n\n        const urlWithoutParams = content.split('?')[0];\n        const urlWithoutTrailingSlash = urlWithoutParams.replace(/\\/$/, '');\n\n        tagResults.push(\n          generateTag('link', {\n            rel: 'canonical',\n            href: urlWithoutTrailingSlash,\n          }),\n          generateTag('meta', {\n            property: 'og:url',\n            content: urlWithoutTrailingSlash,\n          }),\n        );\n\n        break;\n      }\n\n      case 'handle': {\n        const content = validate(schema.handle, seoInput.handle);\n\n        if (!content) {\n          break;\n        }\n\n        tagResults.push(\n          generateTag('meta', {name: 'twitter:site', content}),\n          generateTag('meta', {name: 'twitter:creator', content}),\n        );\n\n        break;\n      }\n\n      case 'media': {\n        let content;\n        const values = ensureArray(seoInput.media);\n\n        for (const media of values) {\n          if (typeof media === 'string') {\n            tagResults.push(\n              generateTag('meta', {name: 'og:image', content: media}),\n            );\n          }\n\n          if (media && typeof media === 'object') {\n            const type = media.type || 'image';\n\n            // Order matters here when adding multiple media tags @see https://ogp.me/#array\n            const normalizedMedia = media\n              ? {\n                  url: media?.url,\n                  secure_url: media?.url,\n                  type: inferMimeType(media.url),\n                  width: media?.width,\n                  height: media?.height,\n                  alt: media?.altText,\n                }\n              : {};\n\n            for (const key of Object.keys(normalizedMedia)) {\n              if (normalizedMedia[key as keyof typeof normalizedMedia]) {\n                content = normalizedMedia[\n                  key as keyof typeof normalizedMedia\n                ] as string;\n\n                tagResults.push(\n                  generateTag(\n                    'meta',\n                    {\n                      property: `og:${type}:${key}`,\n                      content,\n                    },\n                    normalizedMedia.url as string,\n                  ),\n                );\n              }\n            }\n          }\n        }\n        break;\n      }\n\n      case 'jsonLd': {\n        const jsonLdBlocks = ensureArray(seoInput.jsonLd);\n        let index = 0;\n        for (const block of jsonLdBlocks) {\n          if (typeof block !== 'object') {\n            continue;\n          }\n\n          const tag = generateTag(\n            'script',\n            {\n              type: 'application/ld+json',\n              children: JSON.stringify(block, (k, value) => {\n                return typeof value === 'string' ? escapeHtml(value) : value;\n              }),\n            },\n            // @ts-expect-error\n            `json-ld-${block?.['@type'] || block?.name || index++}`,\n          );\n\n          tagResults.push(tag);\n        }\n\n        break;\n      }\n\n      case 'alternates': {\n        const alternates = ensureArray(seoInput.alternates);\n\n        for (const alternate of alternates) {\n          if (!alternate) {\n            continue;\n          }\n\n          const {language, url, default: defaultLang} = alternate;\n\n          const hrefLang = language\n            ? `${language}${defaultLang ? '-default' : ''}`\n            : undefined;\n\n          tagResults.push(\n            generateTag('link', {\n              rel: 'alternate',\n              hrefLang,\n              href: url,\n            }),\n          );\n        }\n\n        break;\n      }\n\n      case 'robots': {\n        if (!seoInput.robots) {\n          break;\n        }\n\n        const {\n          maxImagePreview,\n          maxSnippet,\n          maxVideoPreview,\n          noArchive,\n          noFollow,\n          noImageIndex,\n          noIndex,\n          noSnippet,\n          noTranslate,\n          unavailableAfter,\n        } = seoInput.robots;\n\n        const robotsParams = [\n          noArchive && 'noarchive',\n          noImageIndex && 'noimageindex',\n          noSnippet && 'nosnippet',\n          noTranslate && `notranslate`,\n          maxImagePreview && `max-image-preview:${maxImagePreview}`,\n          maxSnippet && `max-snippet:${maxSnippet}`,\n          maxVideoPreview && `max-video-preview:${maxVideoPreview}`,\n          unavailableAfter && `unavailable_after:${unavailableAfter}`,\n        ];\n\n        let robotsParam =\n          (noIndex ? 'noindex' : 'index') +\n          ',' +\n          (noFollow ? 'nofollow' : 'follow');\n\n        for (let param of robotsParams) {\n          if (param) {\n            robotsParam += `,${param}`;\n          }\n        }\n\n        tagResults.push(\n          generateTag('meta', {name: 'robots', content: robotsParam}),\n        );\n\n        break;\n      }\n\n      default: {\n        // TODO: We should be able to catch unaccounted for keys at compile time\n        // let exhaustiveCheck: never = seoKey;\n\n        break;\n      }\n    }\n  }\n\n  return tagResults.flat().sort((a, b) => a.key.localeCompare(b.key));\n}\n\nexport function generateTag<T extends TagKey>(\n  tagName: T,\n  input: ComponentPropsWithoutRef<T>,\n  group?: string,\n): CustomHeadTagObject {\n  const tag: CustomHeadTagObject = {tag: tagName, props: {}, key: ''};\n\n  // title tags don't have props so move to children\n  if (tagName === 'title') {\n    tag.children = input.title as string;\n    tag.key = generateKey(tag);\n\n    return tag;\n  }\n\n  // also move the input children to children and delete it\n  if (tagName === 'script') {\n    tag.children = typeof input.children === 'string' ? input.children : '';\n    tag.key = generateKey(tag, group);\n    delete input.children;\n    tag.props = input;\n    return tag;\n  }\n\n  // the rest goes on props\n  tag.props = input;\n\n  // remove empty props\n  Object.keys(tag.props).forEach(\n    (key) => !tag.props[key] && delete tag.props[key],\n  );\n\n  tag.key = generateKey(tag, group);\n\n  return tag;\n}\n\n//**\n// * Generate a unique key for a tag\n// * @param tag - a generated tag object\n// * @param group? - the group the tag belongs to\n// * @returns - a unique key to be used for react\n// */\nexport function generateKey(tag: CustomHeadTagObject, group?: string) {\n  const {tag: tagName, props} = tag;\n\n  if (tagName === 'title') {\n    // leading 0 moves title to the top when sorting\n    return '0-title';\n  }\n\n  if (tagName === 'meta') {\n    // leading 0 moves meta to the top when sorting exclude secure_url from the logic because the content is the same as\n    // url\n    const priority =\n      props.content === group &&\n      typeof props.property === 'string' &&\n      !props.property.endsWith('secure_url') &&\n      '0';\n    const groupName = [group, priority];\n\n    return [tagName, ...groupName, props.property || props.name]\n      .filter((x) => x)\n      .join('-');\n  }\n\n  if (tagName === 'link') {\n    const key = [tagName, props.rel, props.hrefLang || props.media]\n      .filter((x) => x)\n      .join('-');\n\n    // replace spaces with dashes, needed for media prop\n    return key.replace(/\\s+/g, '-');\n  }\n\n  if (tagName === 'script') {\n    return `${tagName}-${group}`;\n  }\n\n  return `${tagName}-${props.type}`;\n}\n\nexport function renderTitle<T extends CustomHeadTagObject['children']>(\n  template?:\n    | string\n    | ((title: string) => string | undefined)\n    | undefined\n    | null,\n  title?: T | null,\n): string | undefined {\n  if (!title) {\n    return undefined;\n  }\n\n  if (!template) {\n    return title;\n  }\n\n  if (typeof template === 'function') {\n    return template(title);\n  }\n\n  return template.replace('%s', title ?? '');\n}\n\nexport function inferMimeType(url: Maybe<string> | undefined) {\n  const ext = url && url.split('.').pop();\n\n  switch (ext) {\n    case 'svg':\n      return 'image/svg+xml';\n    case 'png':\n      return 'image/png';\n    case 'gif':\n      return 'image/gif';\n    case 'swf':\n      return 'application/x-shockwave-flash';\n    case 'mp3':\n      return 'audio/mpeg';\n    case 'jpg':\n    case 'jpeg':\n    default:\n      return 'image/jpeg';\n  }\n}\n\nexport type SchemaType =\n  | 'Product'\n  | 'ItemList'\n  | 'Organization'\n  | 'WebSite'\n  | 'WebPage'\n  | 'BlogPosting'\n  | 'Thing';\n\nexport function ensureArray<T>(value: T | T[]): T[] {\n  return Array.isArray(value) ? value : [value];\n}\n\nexport function validate<T>(\n  schema: {validate: <T>(data: T) => NonNullable<T>},\n  data: T,\n): T {\n  try {\n    return schema.validate<T>(data);\n  } catch (error: unknown) {\n    console.warn((error as Error).message);\n    return data;\n  }\n}\n","import {\n  ensureArray,\n  inferMimeType,\n  renderTitle,\n  schema,\n  validate,\n  type SeoConfig,\n} from './generate-seo-tags';\nimport {MetaFunction} from '@remix-run/react';\n\nexport type GetSeoMetaReturn = ReturnType<MetaFunction>;\n\ntype GetSeoMetaTypeForDocs = {\n  /** `getSeoMeta` takes an arbitrary number of configuration object parameters. Values in each object are overwritten based on the object order. \\`jsonLd\\` properties are preserved between each configuration object. */\n  seoInputs: SeoConfig[];\n};\n\ntype SeoKey = keyof SeoConfig;\n\ntype Optional<T> = T | null | undefined;\n\n/**\n * Generate a Remix meta array from one or more SEO configuration objects. This is useful to pass SEO configuration for the parent route(s) and the current route. Similar to `Object.assign()`, each property is overwritten based on the object order. The exception is `jsonLd`, which is preserved so that each route has it's own independent jsonLd meta data.\n */\nexport function getSeoMeta(\n  ...seoInputs: Optional<SeoConfig>[]\n): GetSeoMetaReturn {\n  let tagResults: GetSeoMetaReturn = [];\n\n  const dedupedSeoInput =\n    seoInputs.reduce((acc, current) => {\n      if (!current) return acc as SeoConfig;\n\n      // remove seo properties with falsy values\n      Object.keys(current).forEach(\n        (key) => !current[key as SeoKey] && delete current[key as SeoKey],\n      );\n\n      const {jsonLd} = current;\n\n      if (!jsonLd) {\n        return {...acc, ...current} as SeoConfig;\n      }\n\n      // concatenate jsonLds if present\n      if (!acc?.jsonLd) {\n        return {...acc, ...current, jsonLd: [jsonLd]} as SeoConfig;\n      } else {\n        return {\n          ...acc,\n          ...current,\n          jsonLd: ensureArray(acc.jsonLd).concat(jsonLd),\n        };\n      }\n    }, {}) || ({} as SeoConfig);\n\n  for (const seoKey of Object.keys(dedupedSeoInput)) {\n    switch (seoKey) {\n      case 'title': {\n        const content = validate(schema.title, dedupedSeoInput.title);\n        const title = renderTitle(dedupedSeoInput?.titleTemplate, content);\n\n        if (!title) {\n          break;\n        }\n\n        tagResults.push(\n          {title},\n          {property: 'og:title', content: title},\n          {property: 'twitter:title', content: title},\n        );\n\n        break;\n      }\n\n      case 'description': {\n        const content = validate(\n          schema.description,\n          dedupedSeoInput.description,\n        );\n\n        if (!content) {\n          break;\n        }\n\n        tagResults.push(\n          {\n            name: 'description',\n            content,\n          },\n          {\n            property: 'og:description',\n            content,\n          },\n          {\n            property: 'twitter:description',\n            content,\n          },\n        );\n\n        break;\n      }\n\n      case 'url': {\n        const content = validate(schema.url, dedupedSeoInput.url);\n\n        if (!content) {\n          break;\n        }\n\n        const urlWithoutParams = content.split('?')[0];\n        const urlWithoutTrailingSlash = urlWithoutParams.replace(/\\/$/, '');\n\n        tagResults.push(\n          {\n            tagName: 'link',\n            rel: 'canonical',\n            href: urlWithoutTrailingSlash,\n          },\n          {\n            property: 'og:url',\n            content: urlWithoutTrailingSlash,\n          },\n        );\n\n        break;\n      }\n\n      case 'handle': {\n        const content = validate(schema.handle, dedupedSeoInput.handle);\n\n        if (!content) {\n          break;\n        }\n\n        tagResults.push(\n          {property: 'twitter:site', content},\n          {property: 'twitter:creator', content},\n        );\n\n        break;\n      }\n\n      case 'media': {\n        let content;\n        const values = ensureArray(dedupedSeoInput.media);\n\n        for (const media of values) {\n          if (typeof media === 'string') {\n            tagResults.push({property: 'og:image', content: media});\n          }\n\n          if (media && typeof media === 'object') {\n            const type = media.type || 'image';\n\n            // Order matters here when adding multiple media tags @see https://ogp.me/#array\n            const normalizedMedia = media\n              ? {\n                  url: media?.url,\n                  secure_url: media?.url,\n                  type: inferMimeType(media.url),\n                  width: media?.width,\n                  height: media?.height,\n                  alt: media?.altText,\n                }\n              : {};\n\n            for (const key of Object.keys(normalizedMedia)) {\n              if (normalizedMedia[key as keyof typeof normalizedMedia]) {\n                content = normalizedMedia[\n                  key as keyof typeof normalizedMedia\n                ] as string;\n\n                tagResults.push({\n                  property: `og:${type}:${key}`,\n                  content,\n                });\n              }\n            }\n          }\n        }\n        break;\n      }\n\n      case 'jsonLd': {\n        const jsonLdBlocks = ensureArray(dedupedSeoInput.jsonLd);\n        let index = 0;\n        for (const block of jsonLdBlocks) {\n          if (typeof block !== 'object' || Object.keys(block).length === 0) {\n            continue;\n          }\n\n          tagResults.push({\n            'script:ld+json': block,\n          });\n        }\n\n        break;\n      }\n\n      case 'alternates': {\n        const alternates = ensureArray(dedupedSeoInput.alternates);\n\n        for (const alternate of alternates) {\n          if (!alternate) {\n            continue;\n          }\n\n          const {language, url, default: defaultLang} = alternate;\n\n          const hrefLang = language\n            ? `${language}${defaultLang ? '-default' : ''}`\n            : undefined;\n\n          tagResults.push({\n            tagName: 'link',\n            rel: 'alternate',\n            hrefLang,\n            href: url,\n          });\n        }\n\n        break;\n      }\n\n      case 'robots': {\n        if (!dedupedSeoInput.robots) {\n          break;\n        }\n\n        const {\n          maxImagePreview,\n          maxSnippet,\n          maxVideoPreview,\n          noArchive,\n          noFollow,\n          noImageIndex,\n          noIndex,\n          noSnippet,\n          noTranslate,\n          unavailableAfter,\n        } = dedupedSeoInput.robots;\n\n        const robotsParams = [\n          noArchive && 'noarchive',\n          noImageIndex && 'noimageindex',\n          noSnippet && 'nosnippet',\n          noTranslate && `notranslate`,\n          maxImagePreview && `max-image-preview:${maxImagePreview}`,\n          maxSnippet && `max-snippet:${maxSnippet}`,\n          maxVideoPreview && `max-video-preview:${maxVideoPreview}`,\n          unavailableAfter && `unavailable_after:${unavailableAfter}`,\n        ];\n\n        let robotsParam =\n          (noIndex ? 'noindex' : 'index') +\n          ',' +\n          (noFollow ? 'nofollow' : 'follow');\n\n        for (let param of robotsParams) {\n          if (param) {\n            robotsParam += `,${param}`;\n          }\n        }\n\n        tagResults.push({name: 'robots', content: robotsParam});\n\n        break;\n      }\n\n      default: {\n        // TODO: We should be able to catch unaccounted for keys at compile time\n        // let exhaustiveCheck: never = seoKey;\n\n        break;\n      }\n    }\n  }\n\n  return tagResults;\n}\n","import {createElement, Fragment, lazy, Suspense, useMemo} from 'react';\nimport {\n  type Location,\n  type Params,\n  useLocation,\n  useMatches,\n} from '@remix-run/react';\nimport {generateSeoTags, type SeoConfig} from './generate-seo-tags';\n\nimport type {LoaderFunction, SerializeFrom} from '@remix-run/server-runtime';\n\nconst SeoLogger = lazy(() => import('./log-seo-tags'));\n\nexport interface SeoHandleFunction<\n  Loader extends LoaderFunction | unknown = unknown,\n> {\n  (args: {\n    data: Loader extends LoaderFunction ? SerializeFrom<Loader> : unknown;\n    id: string;\n    params: Params;\n    pathname: Location['pathname'];\n    search: Location['search'];\n    hash: Location['hash'];\n    key: string;\n  }): Partial<SeoConfig>;\n}\n\ninterface SeoProps {\n  /** Enable debug mode that prints SEO properties for route in the console */\n  debug?: boolean;\n}\n\ntype SeoWrapper = undefined | {seo: any};\n\n/**\n * @deprecated - use `getSeoMeta` instead\n */\nexport function Seo({debug}: SeoProps) {\n  const matches = useMatches();\n  const location = useLocation();\n\n  console.warn(\n    '[h2:warn:Seo] The `<Seo/>` component is deprecated. Use `getSeoMeta` instead.\\nSee: https://shopify.dev/docs/api/hydrogen/2025-01/utilities/getseometa',\n  );\n\n  // Capture the seo and jsonLd configs from the route matches\n  const seoConfig = useMemo(() => {\n    return (\n      matches\n        .flatMap((match) => {\n          const {handle, ...routeMatch} = match;\n          const routeData = {...routeMatch, ...location};\n          const handleSeo = (handle as SeoWrapper)?.seo;\n          const loaderSeo = (routeMatch?.data as SeoWrapper)?.seo;\n\n          if (!handleSeo && !loaderSeo) {\n            return [];\n          }\n\n          // if seo is defined in the handle, invoke it with the route data\n          if (handleSeo) {\n            return recursivelyInvokeOrReturn(handleSeo, routeData);\n          } else {\n            return [loaderSeo];\n          }\n        })\n        // merge route seo (priority) with the root seo if both are present\n        // jsonLd definitions are instead concatenated because there can be\n        // multiple jsonLd tags on any given root+route. e.g root renders Organization\n        // schema and a product page renders Product schema\n        .reduce((acc, current) => {\n          // remove seo properties with falsy values\n          Object.keys(current).forEach(\n            (key) => !current[key] && delete current[key],\n          );\n\n          const {jsonLd} = current;\n\n          if (!jsonLd) {\n            return {...acc, ...current};\n          }\n\n          // concatenate jsonLds if present\n          if (!acc?.jsonLd) {\n            return {...acc, ...current, jsonLd: [jsonLd]};\n          } else {\n            if (Array.isArray(jsonLd)) {\n              return {\n                ...acc,\n                ...current,\n                jsonLd: [...acc.jsonLd, ...jsonLd],\n              };\n            } else {\n              return {\n                ...acc,\n                ...current,\n                jsonLd: [...acc.jsonLd, jsonLd],\n              };\n            }\n          }\n        }, {} as SeoConfig)\n    );\n  }, [matches, location]);\n\n  // Generate seo and jsonLd tags from the route seo configs\n  // and return the jsx elements as html\n  const {html, loggerMarkup} = useMemo(() => {\n    const headTags = generateSeoTags(seoConfig);\n    const html = headTags.map((tag) => {\n      if (tag.tag === 'script') {\n        return createElement(tag.tag, {\n          ...tag.props,\n          key: tag.key,\n          dangerouslySetInnerHTML: {__html: tag.children},\n        });\n      }\n\n      return createElement(tag.tag, {...tag.props, key: tag.key}, tag.children);\n    });\n\n    const loggerMarkup = createElement(\n      Suspense,\n      {fallback: null},\n      createElement(SeoLogger, {headTags}),\n    );\n\n    return {html, loggerMarkup};\n  }, [seoConfig]);\n\n  return createElement(Fragment, null, html, debug && loggerMarkup);\n}\n\n/**\n * Recursively invoke a function or return the value\n * @param value\n * @param rest\n * @returns\n */\nexport function recursivelyInvokeOrReturn<T, R extends any[]>(\n  value: T | ((...rest: R) => T),\n  ...rest: R\n): T | Record<string, T> {\n  if (value instanceof Function) {\n    return recursivelyInvokeOrReturn<T, R>(value(...rest), ...rest);\n  }\n\n  let result: Record<string, T> = {};\n\n  if (Array.isArray(value)) {\n    result = value.reduce((acc, item) => {\n      return [...acc, recursivelyInvokeOrReturn(item)];\n    }, []);\n\n    return result;\n  }\n\n  if (value instanceof Object) {\n    const entries = Object.entries(value);\n\n    entries.forEach(([key, val]) => {\n      // @ts-expect-error\n      result[key] = recursivelyInvokeOrReturn<T, R>(val, ...rest);\n    });\n\n    return result;\n  }\n\n  return value;\n}\n","import {ShopPayButton as ShopPayButtonBase} from '@shopify/hydrogen-react';\nimport {ComponentProps} from 'react';\n\nexport function ShopPayButton(props: ComponentProps<typeof ShopPayButtonBase>) {\n  return <ShopPayButtonBase channel=\"hydrogen\" {...props} />;\n}\n","import type {LoaderFunctionArgs} from '@remix-run/server-runtime';\nimport type {Storefront} from '../storefront';\n\nconst SITEMAP_INDEX_PREFIX = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<sitemapindex xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\\n`;\nconst SITEMAP_INDEX_SUFFIX = `\\n</sitemapindex>`;\n\nconst SITEMAP_PREFIX = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">`;\nconst SITEMAP_SUFFIX = `</urlset>`;\n\ntype SITEMAP_INDEX_TYPE =\n  | 'pages'\n  | 'products'\n  | 'collections'\n  | 'blogs'\n  | 'articles'\n  | 'metaObjects';\n\ninterface SitemapIndexOptions {\n  /** The Storefront API Client from Hydrogen */\n  storefront: Storefront;\n  /** A Remix Request object */\n  request: Request;\n  /** The types of pages to include in the sitemap index. */\n  types?: SITEMAP_INDEX_TYPE[];\n  /** Add a URL to a custom child sitemap */\n  customChildSitemaps?: string[];\n}\n\n/**\n * Generate a sitemap index that links to separate sitemaps for each resource type. Returns a standard Response object.\n */\nexport async function getSitemapIndex(\n  options: SitemapIndexOptions,\n): Promise<Response> {\n  const {\n    storefront,\n    request,\n    types = [\n      'products',\n      'pages',\n      'collections',\n      'metaObjects',\n      'articles',\n      'blogs',\n    ],\n    customChildSitemaps = [],\n  } = options;\n\n  if (!request || !request.url)\n    throw new Error('A request object is required to generate a sitemap index');\n\n  if (!storefront || !storefront.query)\n    throw new Error(\n      'A storefront client is required to generate a sitemap index',\n    );\n\n  const data = await storefront.query(SITEMAP_INDEX_QUERY);\n\n  if (!data) {\n    console.warn(\n      '[h2:sitemap:warning] Sitemap index is available in API version 2024-10 and later',\n    );\n    throw new Response('Sitemap index not found.', {status: 404});\n  }\n\n  const baseUrl = new URL(request.url).origin;\n\n  const body =\n    SITEMAP_INDEX_PREFIX +\n    types\n      .map((type) => {\n        if (!data[type]) {\n          throw new Error(\n            `[h2:sitemap:error] No data found for type ${type}. Check types passed to \\`getSitemapIndex\\``,\n          );\n        }\n        return getSiteMapLinks(type, data[type].pagesCount.count, baseUrl);\n      })\n      .join('\\n') +\n    customChildSitemaps\n      .map(\n        (url) =>\n          '  <sitemap><loc>' +\n          (baseUrl + (url.startsWith('/') ? url : '/' + url)) +\n          '</loc></sitemap>',\n      )\n      .join('\\n') +\n    SITEMAP_INDEX_SUFFIX;\n\n  return new Response(body, {\n    headers: {\n      'Content-Type': 'application/xml',\n      'Cache-Control': `max-age=${60 * 60 * 24}`,\n    },\n  });\n}\n\ninterface GetSiteMapOptions {\n  /** The params object from Remix */\n  params: LoaderFunctionArgs['params'];\n  /** The Storefront API Client from Hydrogen */\n  storefront: Storefront;\n  /** A Remix Request object */\n  request: Request;\n  /** A function that produces a canonical url for a resource. It is called multiple times for each locale supported by the app. */\n  getLink: (options: {\n    type: string | SITEMAP_INDEX_TYPE;\n    baseUrl: string;\n    handle?: string;\n    locale?: string;\n  }) => string;\n  /** An array of locales to generate alternate tags */\n  locales?: string[];\n  /** Optionally customize the changefreq property for each URL */\n  getChangeFreq?: (options: {\n    type: string | SITEMAP_INDEX_TYPE;\n    handle: string;\n  }) => string;\n  /** If the sitemap has no links, fallback to rendering a link to the homepage. This prevents errors in Google's search console. Defaults to `/`.  */\n  noItemsFallback?: string;\n}\n\n/**\n * Generate a sitemap for a specific resource type.\n */\nexport async function getSitemap(\n  options: GetSiteMapOptions,\n): Promise<Response> {\n  const {\n    storefront,\n    request,\n    params,\n    getLink,\n    locales = [],\n    getChangeFreq,\n    noItemsFallback = '/',\n  } = options;\n\n  if (!params)\n    throw new Error(\n      '[h2:sitemap:error] Remix params object is required to generate a sitemap',\n    );\n\n  if (!request || !request.url)\n    throw new Error('A request object is required to generate a sitemap');\n\n  if (!storefront || !storefront.query)\n    throw new Error('A storefront client is required to generate a index');\n\n  if (!getLink)\n    throw new Error(\n      'A `getLink` function to generate each resource is required to build a sitemap',\n    );\n\n  if (!params.type || !params.page)\n    throw new Response('No data found', {status: 404});\n\n  const type = params.type as keyof typeof QUERIES;\n\n  const query = QUERIES[type];\n\n  if (!query) throw new Response('Not found', {status: 404});\n\n  const data = await storefront.query(query, {\n    variables: {\n      page: parseInt(params.page, 10),\n    },\n  });\n\n  if (!data) {\n    console.warn(\n      '[h2:sitemap:warning] Sitemap is available in API version 2024-10 and later',\n    );\n    throw new Response('Sitemap not found.', {status: 404});\n  }\n\n  const baseUrl = new URL(request.url).origin;\n  let body: string = '';\n\n  if (!data?.sitemap?.resources?.items?.length) {\n    body =\n      SITEMAP_PREFIX +\n      `\\n  <url><loc>${baseUrl + noItemsFallback}</loc></url>\\n` +\n      SITEMAP_SUFFIX;\n  } else {\n    body =\n      SITEMAP_PREFIX +\n      data.sitemap.resources.items\n        .map((item: {handle: string; updatedAt: string; type?: string}) => {\n          return renderUrlTag({\n            getChangeFreq,\n            url: getLink({\n              type: item.type ?? type,\n              baseUrl,\n              handle: item.handle,\n            }),\n            type,\n            getLink,\n            updatedAt: item.updatedAt,\n            handle: item.handle,\n            metaobjectType: item.type,\n            locales,\n            baseUrl,\n          });\n        })\n        .join('\\n') +\n      SITEMAP_SUFFIX;\n  }\n\n  return new Response(body, {\n    headers: {\n      'Content-Type': 'application/xml',\n      'Cache-Control': `max-age=${60 * 60 * 24}`,\n    },\n  });\n}\n\nfunction getSiteMapLinks(resource: string, count: number, baseUrl: string) {\n  let links = ``;\n\n  for (let i = 1; i <= count; i++) {\n    links += `  <sitemap><loc>${baseUrl}/sitemap/${resource}/${i}.xml</loc></sitemap>\\n`;\n  }\n  return links;\n}\n\nfunction renderUrlTag({\n  url,\n  updatedAt,\n  locales,\n  type,\n  getLink,\n  baseUrl,\n  handle,\n  getChangeFreq,\n  metaobjectType,\n}: {\n  type: SITEMAP_INDEX_TYPE;\n  baseUrl: string;\n  handle: string;\n  metaobjectType?: string;\n  getLink: (options: {\n    type: string;\n    baseUrl: string;\n    handle?: string;\n    locale?: string;\n  }) => string;\n  url: string;\n  updatedAt: string;\n  locales: string[];\n  getChangeFreq?: (options: {type: string; handle: string}) => string;\n}) {\n  return `<url>\n  <loc>${url}</loc>\n  <lastmod>${updatedAt}</lastmod>\n  <changefreq>${\n    getChangeFreq\n      ? getChangeFreq({type: metaobjectType ?? type, handle})\n      : 'weekly'\n  }</changefreq>\n${locales\n  .map((locale) =>\n    renderAlternateTag(\n      getLink({type: metaobjectType ?? type, baseUrl, handle, locale}),\n      locale,\n    ),\n  )\n  .join('\\n')}\n</url>\n  `.trim();\n}\n\nfunction renderAlternateTag(url: string, locale: string) {\n  return `  <xhtml:link rel=\"alternate\" hreflang=\"${locale}\" href=\"${url}\" />`;\n}\n\nconst PRODUCT_SITEMAP_QUERY = `#graphql\n    query SitemapProducts($page: Int!) {\n      sitemap(type: PRODUCT) {\n        resources(page: $page) {\n          items {\n            handle\n            updatedAt\n          }\n        }\n      }\n    }\n` as const;\n\nconst COLLECTION_SITEMAP_QUERY = `#graphql\n    query SitemapCollections($page: Int!) {\n      sitemap(type: COLLECTION) {\n        resources(page: $page) {\n          items {\n            handle\n            updatedAt\n          }\n        }\n      }\n    }\n` as const;\n\nconst ARTICLE_SITEMAP_QUERY = `#graphql\n    query SitemapArticles($page: Int!) {\n      sitemap(type: ARTICLE) {\n        resources(page: $page) {\n          items {\n            handle\n            updatedAt\n          }\n        }\n      }\n    }\n` as const;\n\nconst PAGE_SITEMAP_QUERY = `#graphql\n    query SitemapPages($page: Int!) {\n      sitemap(type: PAGE) {\n        resources(page: $page) {\n          items {\n            handle\n            updatedAt\n          }\n        }\n      }\n    }\n` as const;\n\nconst BLOG_SITEMAP_QUERY = `#graphql\n    query SitemapBlogs($page: Int!) {\n      sitemap(type: BLOG) {\n        resources(page: $page) {\n          items {\n            handle\n            updatedAt\n          }\n        }\n      }\n    }\n` as const;\n\nconst METAOBJECT_SITEMAP_QUERY = `#graphql\n    query SitemapMetaobjects($page: Int!) {\n      sitemap(type: METAOBJECT) {\n        resources(page: $page) {\n          items {\n            handle\n            updatedAt\n            ... on SitemapResourceMetaobject {\n              type\n            }\n          }\n        }\n      }\n    }\n` as const;\n\nconst SITEMAP_INDEX_QUERY = `#graphql\nquery SitemapIndex {\n  products: sitemap(type: PRODUCT) {\n    pagesCount {\n      count\n    }\n  }\n  collections: sitemap(type: COLLECTION) {\n    pagesCount {\n      count\n    }\n  }\n  articles: sitemap(type: ARTICLE) {\n    pagesCount {\n      count\n    }\n  }\n  pages: sitemap(type: PAGE) {\n    pagesCount {\n      count\n    }\n  }\n  blogs: sitemap(type: BLOG) {\n    pagesCount {\n      count\n    }\n  }\n  metaObjects: sitemap(type: METAOBJECT) {\n    pagesCount {\n      count\n    }\n  }\n}\n` as const;\n\nconst QUERIES = {\n  products: PRODUCT_SITEMAP_QUERY,\n  articles: ARTICLE_SITEMAP_QUERY,\n  collections: COLLECTION_SITEMAP_QUERY,\n  pages: PAGE_SITEMAP_QUERY,\n  blogs: BLOG_SITEMAP_QUERY,\n  metaObjects: METAOBJECT_SITEMAP_QUERY,\n};\n","export {\n  Analytics,\n  getShopAnalytics,\n  type ShopAnalytics,\n  useAnalytics,\n} from './analytics-manager/AnalyticsProvider';\nexport {\n  type CartLineUpdatePayload,\n  type CartUpdatePayload,\n  type CartViewPayload,\n  type CollectionViewPayload,\n  type PageViewPayload,\n  type ProductViewPayload,\n  type SearchViewPayload,\n} from './analytics-manager/AnalyticsView';\nexport {AnalyticsEvent} from './analytics-manager/events';\nexport {createWithCache, type WithCache} from './cache/create-with-cache';\nexport {InMemoryCache} from './cache/in-memory';\nexport {type CacheKey} from './cache/run-with-cache';\nexport {\n  CacheCustom,\n  CacheLong,\n  CacheNone,\n  CacheShort,\n  type CachingStrategy,\n  generateCacheControlHeader,\n  type NoStoreStrategy,\n} from './cache/strategies';\nexport {\n  type CartActionInput,\n  CartForm,\n  type OptimisticCartLineInput,\n} from './cart/CartForm';\nexport {cartGetIdDefault} from './cart/cartGetIdDefault';\nexport {cartSetIdDefault, type CookieOptions} from './cart/cartSetIdDefault';\nexport {\n  createCartHandler,\n  type HydrogenCart,\n  type HydrogenCartCustom,\n} from './cart/createCartHandler';\nexport {\n  type OptimisticCart,\n  type OptimisticCartLine,\n  useOptimisticCart,\n} from './cart/optimistic/useOptimisticCart';\nexport type {\n  CartQueryDataReturn,\n  CartQueryOptions,\n  CartQueryReturn,\n  CartReturn,\n  MetafieldWithoutOwnerId,\n} from './cart/queries/cart-types';\nexport {cartAttributesUpdateDefault} from './cart/queries/cartAttributesUpdateDefault';\nexport {cartBuyerIdentityUpdateDefault} from './cart/queries/cartBuyerIdentityUpdateDefault';\nexport {cartCreateDefault} from './cart/queries/cartCreateDefault';\nexport {cartDiscountCodesUpdateDefault} from './cart/queries/cartDiscountCodesUpdateDefault';\nexport {cartGetDefault} from './cart/queries/cartGetDefault';\nexport {cartGiftCardCodesUpdateDefault} from './cart/queries/cartGiftCardCodeUpdateDefault';\nexport {cartLinesAddDefault} from './cart/queries/cartLinesAddDefault';\nexport {cartLinesRemoveDefault} from './cart/queries/cartLinesRemoveDefault';\nexport {cartLinesUpdateDefault} from './cart/queries/cartLinesUpdateDefault';\nexport {cartMetafieldDeleteDefault} from './cart/queries/cartMetafieldDeleteDefault';\nexport {cartMetafieldsSetDefault} from './cart/queries/cartMetafieldsSetDefault';\nexport {cartNoteUpdateDefault} from './cart/queries/cartNoteUpdateDefault';\nexport {cartSelectedDeliveryOptionsUpdateDefault} from './cart/queries/cartSelectedDeliveryOptionsUpdateDefault';\nexport {changelogHandler} from './changelogHandler';\nexport {\n  createHydrogenContext,\n  type HydrogenContext,\n} from './createHydrogenContext';\nexport {createContentSecurityPolicy, useNonce} from './csp/csp';\nexport {Script} from './csp/Script';\nexport {createCustomerAccountClient} from './customer/customer';\nexport type {\n  CustomerAccount,\n  CustomerAccountMutations,\n  CustomerAccountQueries,\n} from './customer/types';\nexport {\n  type ConsentStatus,\n  type CustomerPrivacy,\n  type CustomerPrivacyApiProps,\n  type CustomerPrivacyConsentConfig,\n  type CustomEventMap,\n  type PrivacyBanner,\n  type SetConsentHeadlessParams,\n  useCustomerPrivacy,\n  type VisitorConsent,\n  type VisitorConsentCollected,\n} from './customer-privacy/ShopifyCustomerPrivacy';\nexport {\n  OptimisticInput,\n  useOptimisticData,\n} from './optimistic-ui/optimistic-ui';\nexport {getPaginationVariables, Pagination} from './pagination/Pagination';\nexport {useOptimisticVariant} from './product/useOptimisticVariant';\nexport type {\n  VariantOption,\n  VariantOptionValue,\n} from './product/VariantSelector';\nexport {\n  getSelectedProductOptions,\n  VariantSelector,\n} from './product/VariantSelector';\nexport {RichText} from './RichText';\nexport {graphiqlLoader} from './routing/graphiql';\nexport {storefrontRedirect} from './routing/redirect';\nexport {type SeoConfig} from './seo/generate-seo-tags';\nexport {getSeoMeta} from './seo/getSeoMeta';\nexport type {SeoHandleFunction} from './seo/seo';\nexport {Seo} from './seo/seo';\nexport {ShopPayButton} from './shop/ShopPayButton';\nexport {getSitemap, getSitemapIndex} from './sitemap/sitemap';\nexport * from './storefront';\nexport type {HydrogenEnv, HydrogenSession, HydrogenSessionData} from './types';\nexport type {\n  ClientBrowserParameters,\n  MappedProductOptions,\n  ParsedMetafields,\n  // TODO: document this change\n  ShopifyAnalytics as SendShopifyAnalyticsEvent,\n  ShopifyAddToCart,\n  ShopifyAddToCartPayload,\n  ShopifyAnalyticsPayload,\n  ShopifyAnalyticsProduct,\n  ShopifyCookies,\n  ShopifyPageView,\n  ShopifyPageViewPayload,\n  StorefrontApiResponse,\n  StorefrontApiResponseError,\n  StorefrontApiResponseOk,\n  StorefrontApiResponseOkPartial,\n  StorefrontApiResponsePartial,\n} from '@shopify/hydrogen-react';\nexport {\n  AnalyticsEventName,\n  AnalyticsPageType,\n  customerAccountApiCustomScalars,\n  decodeEncodedVariant,\n  ExternalVideo,\n  flattenConnection,\n  getAdjacentAndFirstAvailableVariants,\n  getClientBrowserParameters,\n  getProductOptions,\n  getShopifyCookies,\n  Image,\n  IMAGE_FRAGMENT,\n  isOptionValueCombinationInEncodedVariant,\n  mapSelectedProductOptionToObject,\n  MediaFile,\n  ModelViewer,\n  Money,\n  parseGid,\n  parseMetafield,\n  sendShopifyAnalytics,\n  ShopifySalesChannel,\n  storefrontApiCustomScalars,\n  useLoadScript,\n  useMoney,\n  useSelectedOptionInUrlParam,\n  useShopifyCookies,\n  Video,\n} from '@shopify/hydrogen-react';\n"]}